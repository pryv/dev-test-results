[
  {
    "stats": {
      "suites": 163,
      "tests": 457,
      "passes": 442,
      "pending": 4,
      "failures": 11,
      "start": "2019-05-06T12:45:59.424Z",
      "end": "2019-05-06T12:47:17.880Z",
      "duration": 78456
    },
    "tests": [
      {
        "title": "MMH1-should contain deletions",
        "fullTitle": "access deletions when given a few existing accesses accesses.get MMH1-should contain deletions",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8LTG-contains active accesses",
        "fullTitle": "access deletions when given a few existing accesses accesses.get 8LTG-contains active accesses",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2EL2-contains deleted accesses as well",
        "fullTitle": "access deletions when given a few existing accesses accesses.get 2EL2-contains deleted accesses as well",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "A4NV-deleted access are in UTC (seconds) format",
        "fullTitle": "access deletions when given a few existing accesses accesses.get A4NV-deleted access are in UTC (seconds) format",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WGQO-should contain an access",
        "fullTitle": "access deletions when given a few existing accesses accesses.create for a valid access WGQO-should contain an access",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5BD9-should contain the set values, but no \"deleted\" field in the API response",
        "fullTitle": "access deletions when given a few existing accesses accesses.create for a valid access 5BD9-should contain the set values, but no \"deleted\" field in the API response",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "YJFH-should contain the field \"deleted:null\" in the database",
        "fullTitle": "access deletions when given a few existing accesses accesses.create for a valid access YJFH-should contain the field \"deleted:null\" in the database",
        "duration": 14,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ESAS-should return an error",
        "fullTitle": "access deletions when given a few existing accesses accesses.create for a deleted access ESAS-should return an error",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ICMY-error should say that the deleted field is forbidden upon creation",
        "fullTitle": "access deletions when given a few existing accesses accesses.create for a deleted access ICMY-error should say that the deleted field is forbidden upon creation",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "B3P6-should return an error",
        "fullTitle": "access deletions when given a few existing accesses accesses.update B3P6-should return an error",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3CVD-error should say that the deleted field is forbidden upon update",
        "fullTitle": "access deletions when given a few existing accesses accesses.update 3CVD-error should say that the deleted field is forbidden upon update",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "LB3J-succeeds",
        "fullTitle": "access expiry when given a few existing accesses accesses.get vanilla version LB3J-succeeds",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "L1GF-contains only active accesses",
        "fullTitle": "access expiry when given a few existing accesses accesses.get vanilla version L1GF-contains only active accesses",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "88Q2-succeeds",
        "fullTitle": "access expiry when given a few existing accesses accesses.get when given the includeExpired=true parameter 88Q2-succeeds",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8TPS-includes expired accesses",
        "fullTitle": "access expiry when given a few existing accesses accesses.get when given the includeExpired=true parameter 8TPS-includes expired accesses",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "T6BJ-creates an access with set expiry timestamp",
        "fullTitle": "access expiry when given a few existing accesses accesses.create when called with expireAfter>0 T6BJ-creates an access with set expiry timestamp",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6YGV-creates an expired access",
        "fullTitle": "access expiry when given a few existing accesses accesses.create when called with expireAfter=0 6YGV-creates an expired access",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "GTZN-fails",
        "fullTitle": "access expiry when given a few existing accesses accesses.create when called with expireAfter<0 GTZN-fails",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "sets the 'expires' attribute",
        "fullTitle": "access expiry when given a few existing accesses accesses.update with expireAfter>0 sets the 'expires' attribute",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "C6EK-expires the access immediately",
        "fullTitle": "access expiry when given a few existing accesses accesses.update with expireAfter=0 C6EK-expires the access immediately",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FKWN-removes expiry",
        "fullTitle": "access expiry when given a few existing accesses accesses.update with expires=null FKWN-removes expiry",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TFPD-fails",
        "fullTitle": "access expiry when given a few existing accesses accesses.update when trying to update itself with a longer expiration TFPD-fails",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7CI5-returns the matching access",
        "fullTitle": "access expiry when given a few existing accesses accesses.checkApp when the matching access is not expired 7CI5-returns the matching access",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6M7U-returns no match",
        "fullTitle": "access expiry when given a few existing accesses accesses.checkApp when the matching access is expired 6M7U-returns no match",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WJOI-fails",
        "fullTitle": "access expiry when given a few existing accesses other API accesses using an expired access WJOI-fails",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HTH3-returns a proper error message",
        "fullTitle": "access expiry when given a few existing accesses other API accesses using an expired access HTH3-returns a proper error message",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0UVW-succeeds",
        "fullTitle": "access expiry when given a few existing accesses other API accesses using a valid access 0UVW-succeeds",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QO82-succeeds",
        "fullTitle": "access client data when given a few existing accesses accesses.get QO82-succeeds",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HTGE-contains existing accesses with clientData",
        "fullTitle": "access client data when given a few existing accesses accesses.get HTGE-contains existing accesses with clientData",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "R2W2-creates an access with empty clientData",
        "fullTitle": "access client data when given a few existing accesses accesses.create when called with clientData={} R2W2-creates an access with empty clientData",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8LCQ-throws a schema error",
        "fullTitle": "access client data when given a few existing accesses accesses.create when called with clientData=null 8LCQ-throws a schema error",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0Z61-creates an access with complex clientData",
        "fullTitle": "access client data when given a few existing accesses accesses.create when called with complex clientData 0Z61-creates an access with complex clientData",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "W20A-updates previous clientData with new clientData",
        "fullTitle": "access client data when given a few existing accesses accesses.update if existing clientData was not empty W20A-updates previous clientData with new clientData",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "AVR2-keeps existing clientData untouched",
        "fullTitle": "access client data when given a few existing accesses accesses.update if clientData is not provided AVR2-keeps existing clientData untouched",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "W2AQ-sets clientData to provided clientData",
        "fullTitle": "access client data when given a few existing accesses accesses.update if existing clientData was empty W2AQ-sets clientData to provided clientData",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "PKFH-removes existing clientData",
        "fullTitle": "access client data when given a few existing accesses accesses.update if provided clientData is explicitely null PKFH-removes existing clientData",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "39KP-returns the matching access",
        "fullTitle": "access client data when given a few existing accesses accesses.checkApp when the provided clientData matches the existing clientData 39KP-returns the matching access",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RK72-returns no match",
        "fullTitle": "access client data when given a few existing accesses accesses.checkApp when the provided clientData does not match the existing clientData RK72-returns no match",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QP2B-returns no match",
        "fullTitle": "access client data when given a few existing accesses accesses.checkApp when no clientData is provided but existing access has one QP2B-returns no match",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MLYG-succeeds",
        "fullTitle": "users pool create pool user MLYG-succeeds",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WGK9-contains a generated pool user id",
        "fullTitle": "users pool create pool user WGK9-contains a generated pool user id",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2830-created a user in the database",
        "fullTitle": "users pool create pool user 2830-created a user in the database",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MD1S-created the related collections",
        "fullTitle": "users pool create pool user MD1S-created the related collections",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0YGE-created the related indexes",
        "fullTitle": "users pool create pool user 0YGE-created the related indexes",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "H8VK-must succeed",
        "fullTitle": "users pool get pool size when empty H8VK-must succeed",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "OHJQ-must return 0",
        "fullTitle": "users pool get pool size when empty OHJQ-must return 0",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "L16K-succeeds",
        "fullTitle": "users pool get pool size when adding pool users L16K-succeeds",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "YPF3-has the right number of pool users",
        "fullTitle": "users pool get pool size when adding pool users YPF3-has the right number of pool users",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SIHH-must return shared accesses whose permissions are a subset of the current one's",
        "fullTitle": "accesses (app) GET / SIHH-must return shared accesses whose permissions are a subset of the current one's",
        "duration": 66,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RN9L-must be forbidden to requests with a shared access token",
        "fullTitle": "accesses (app) GET / RN9L-must be forbidden to requests with a shared access token",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "E2PG-must create a new shared access with the sent data and return it",
        "fullTitle": "accesses (app) POST / E2PG-must create a new shared access with the sent data and return it",
        "duration": 42,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SW9W-must forbid trying to create a non-shared access",
        "fullTitle": "accesses (app) POST / SW9W-must forbid trying to create a non-shared access",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ASPN-must forbid trying to create an access with greater permissions",
        "fullTitle": "accesses (app) POST / ASPN-must forbid trying to create an access with greater permissions",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MC7E-must return a correct error if the sent data is badly formatted",
        "fullTitle": "accesses (app) POST / MC7E-must return a correct error if the sent data is badly formatted",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SPOB-must allow creation of shared accesses with an access that has superior permission on root stream (*)",
        "fullTitle": "accesses (app) POST / SPOB-must allow creation of shared accesses with an access that has superior permission on root stream (*)",
        "duration": 25,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Q0HC-must modify the access with the sent data",
        "fullTitle": "accesses (app) PUT /<token> Q0HC-must modify the access with the sent data",
        "duration": 27,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QCFM-must forbid trying to modify a non-shared access",
        "fullTitle": "accesses (app) PUT /<token> QCFM-must forbid trying to modify a non-shared access",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ECJY-must forbid trying to modify an access with greater permissions",
        "fullTitle": "accesses (app) PUT /<token> ECJY-must forbid trying to modify an access with greater permissions",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MCGU-must return a correct error if the access does not exist",
        "fullTitle": "accesses (app) PUT /<token> MCGU-must return a correct error if the access does not exist",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NAGF-must return a correct error if the sent data is badly formatted",
        "fullTitle": "accesses (app) PUT /<token> NAGF-must return a correct error if the sent data is badly formatted",
        "duration": 16,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SO5Y-must return a correct error if an access with the same name already exists",
        "fullTitle": "accesses (app) PUT /<token> SO5Y-must return a correct error if an access with the same name already exists",
        "duration": 13,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FISP-must delete the shared access",
        "fullTitle": "accesses (app) DELETE /<token> FISP-must delete the shared access",
        "duration": 41,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "K1AC-must forbid trying to delete a non-shared access",
        "fullTitle": "accesses (app) DELETE /<token> K1AC-must forbid trying to delete a non-shared access",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8YJS-must forbid trying to delete an access with greater permissions",
        "fullTitle": "accesses (app) DELETE /<token> 8YJS-must forbid trying to delete an access with greater permissions",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MG1Q-must return a correct error if the access does not exist",
        "fullTitle": "accesses (app) DELETE /<token> MG1Q-must return a correct error if the access does not exist",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DV3U-must return all accesses (including personal ones)",
        "fullTitle": "accesses (personal) GET / DV3U-must return all accesses (including personal ones)",
        "duration": 15,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "12SU-must create a new shared access with the sent data, returning it",
        "fullTitle": "accesses (personal) POST / 12SU-must create a new shared access with the sent data, returning it",
        "duration": 33,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DD60-must create a new app access with the sent data, creating/restoring requested streams",
        "fullTitle": "accesses (personal) POST / DD60-must create a new app access with the sent data, creating/restoring requested streams",
        "duration": 67,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "79QY-must accept two app accesses with the same name (app ids) but different device names",
        "fullTitle": "accesses (personal) POST / 79QY-must accept two app accesses with the same name (app ids) but different device names",
        "duration": 36,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "50AM-must ignore erroneous requests to create new streams",
        "fullTitle": "accesses (personal) POST / 50AM-must ignore erroneous requests to create new streams",
        "duration": 32,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6BL2-must fail if a stream similar to that requested for creation already exists",
        "fullTitle": "accesses (personal) POST / 6BL2-must fail if a stream similar to that requested for creation already exists",
        "duration": 22,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UFE7-must refuse to create new personal accesses (obtained via login only)",
        "fullTitle": "accesses (personal) POST / UFE7-must refuse to create new personal accesses (obtained via login only)",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "YTMG-must slugify the new access' predefined token",
        "fullTitle": "accesses (personal) POST / YTMG-must slugify the new access' predefined token",
        "duration": 30,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3F4D-must return an error if the sent data is badly formatted",
        "fullTitle": "accesses (personal) POST / 3F4D-must return an error if the sent data is badly formatted",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "1ELC-must refuse empty `defaultName` values for streams",
        "fullTitle": "accesses (personal) POST / 1ELC-must refuse empty `defaultName` values for streams",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZZSC-must return an error if an access with the same token already exists",
        "fullTitle": "accesses (personal) POST / ZZSC-must return an error if an access with the same token already exists",
        "duration": 16,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MSFK-must return an error if an access with the same name already exists",
        "fullTitle": "accesses (personal) POST / MSFK-must return an error if an access with the same name already exists",
        "duration": 15,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9ICB-must return an error if an \"app\" access with the same name (app id) and device name already exists",
        "fullTitle": "accesses (personal) POST / 9ICB-must return an error if an \"app\" access with the same name (app id) and device name already exists",
        "duration": 17,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WRSP-must return an error if the device name is set for a non-app access",
        "fullTitle": "accesses (personal) POST / WRSP-must return an error if the device name is set for a non-app access",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "IHSE-must return an error if the given predefined access's token is a reserved word",
        "fullTitle": "accesses (personal) POST / IHSE-must return an error if the given predefined access's token is a reserved word",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6TU5-must modify the shared access with the sent data",
        "fullTitle": "accesses (personal) PUT /<token> 6TU5-must modify the shared access with the sent data",
        "duration": 28,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "1O8N-must modify the personal access with the specified data",
        "fullTitle": "accesses (personal) PUT /<token> 1O8N-must modify the personal access with the specified data",
        "duration": 35,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7S5L-must return an error if the access does not exist",
        "fullTitle": "accesses (personal) PUT /<token> 7S5L-must return an error if the access does not exist",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RUMK-must return an error if the sent data is badly formatted",
        "fullTitle": "accesses (personal) PUT /<token> RUMK-must return an error if the sent data is badly formatted",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "M8FO-must return an error if an access with the same name and type already exists",
        "fullTitle": "accesses (personal) PUT /<token> M8FO-must return an error if an access with the same name and type already exists",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "N41N-must prevent update of protected fields and throw a forbidden error in strict mode",
        "fullTitle": "accesses (personal) PUT /<token> forbidden updates of protected fields N41N-must prevent update of protected fields and throw a forbidden error in strict mode",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "PKRK-must prevent update of protected fields and log a warning in non-strict mode",
        "fullTitle": "accesses (personal) PUT /<token> forbidden updates of protected fields PKRK-must prevent update of protected fields and log a warning in non-strict mode",
        "duration": 1144,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "15VH-must forbid to elevate a read level into a manage level using a contribute access ",
        "fullTitle": "accesses (personal) PUT /<token> forbidden updates of protected fields 15VH-must forbid to elevate a read level into a manage level using a contribute access ",
        "duration": 58,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7K7Q-must forbid to extend the permission streamIds beyond the authorized context ",
        "fullTitle": "accesses (personal) PUT /<token> forbidden updates of protected fields 7K7Q-must forbid to extend the permission streamIds beyond the authorized context ",
        "duration": 56,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DP0O-must delete the shared access",
        "fullTitle": "accesses (personal) DELETE /<token> DP0O-must delete the shared access",
        "duration": 39,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "A9OM-must delete the personal access",
        "fullTitle": "accesses (personal) DELETE /<token> A9OM-must delete the personal access",
        "duration": 27,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FG96-must return an error if the access does not exist",
        "fullTitle": "accesses (personal) DELETE /<token> FG96-must return an error if the access does not exist",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8VWR-must return the adjusted permissions structure if no access exists",
        "fullTitle": "accesses (personal) POST /check-app 8VWR-must return the adjusted permissions structure if no access exists",
        "duration": 15,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "F2K1-must accept requested permissions with \"*\" for \"all streams\"",
        "fullTitle": "accesses (personal) POST /check-app F2K1-must accept requested permissions with \"*\" for \"all streams\"",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "CF5M-must return the existing app access if matching",
        "fullTitle": "accesses (personal) POST /check-app CF5M-must return the existing app access if matching",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3AL2-must also return the token of the existing mismatching access if any",
        "fullTitle": "accesses (personal) POST /check-app 3AL2-must also return the token of the existing mismatching access if any",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "B9T5-must propose fixes to duplicate ids of streams and signal an error when appropriate",
        "fullTitle": "accesses (personal) POST /check-app B9T5-must propose fixes to duplicate ids of streams and signal an error when appropriate",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZK2S-must return an error if the sent data is badly formatted",
        "fullTitle": "accesses (personal) POST /check-app ZK2S-must return an error if the sent data is badly formatted",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7FUV-must be forbidden to non-personal accesses",
        "fullTitle": "accesses (personal) POST /check-app 7FUV-must be forbidden to non-personal accesses",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "KK12-must return the user's account details",
        "fullTitle": "account GET / KK12-must return the user's account details",
        "duration": 33,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RMJ2-must be forbidden to non-personal accesses",
        "fullTitle": "account GET / RMJ2-must be forbidden to non-personal accesses",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5ZLR-must modify account details with the sent data, notifying register if e-mail changed",
        "fullTitle": "account PUT / 5ZLR-must modify account details with the sent data, notifying register if e-mail changed",
        "duration": 1356,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3QI6-must return a correct error if the sent data is badly formatted",
        "fullTitle": "account PUT / 3QI6-must return a correct error if the sent data is badly formatted",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "GGCV-must be forbidden to non-personal accesses",
        "fullTitle": "account PUT / GGCV-must be forbidden to non-personal accesses",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "A565-must properly compute used storage size for a given user when called",
        "fullTitle": "account storage space monitoring A565-must properly compute used storage size for a given user when called",
        "duration": 124,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "658C-must properly compute storage size for all users in nightly script",
        "fullTitle": "account storage space monitoring 658C-must properly compute storage size for all users in nightly script",
        "duration": 1191,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "S9Q5-must be approximately updated (diff) when adding an attached file",
        "fullTitle": "account storage space monitoring S9Q5-must be approximately updated (diff) when adding an attached file",
        "duration": 55,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5LFQ-must be approximately updated (diff) when deleting an attached file",
        "fullTitle": "account storage space monitoring 5LFQ-must be approximately updated (diff) when deleting an attached file",
        "duration": 57,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RUR7-must be approximately updated (diff) when deleting an event",
        "fullTitle": "account storage space monitoring RUR7-must be approximately updated (diff) when deleting an event",
        "duration": 86,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9484-must change the password to the given value",
        "fullTitle": "account /change-password 9484-must change the password to the given value",
        "duration": 299,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "O7L2-must return an error if the given old password does not match",
        "fullTitle": "account /change-password O7L2-must return an error if the given old password does not match",
        "duration": 89,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "J26U-must return a correct error if the sent data is badly formatted",
        "fullTitle": "account /change-password J26U-must return a correct error if the sent data is badly formatted",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JL3U-must be forbidden to non-personal accesses",
        "fullTitle": "account /change-password JL3U-must be forbidden to non-personal accesses",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Q82U-\"request\" must trigger an email with a reset token, store that token, then \"reset\" must reset the password to the given value",
        "fullTitle": "account /request-password-reset and /reset-password Q82U-\"request\" must trigger an email with a reset token, store that token, then \"reset\" must reset the password to the given value",
        "currentRetry": 0,
        "err": {
          "message": "expected undefined to exist",
          "stack": "AssertionError: expected undefined to exist\n    at verifyStoredRequest (test/account.test.js:389:16)\n    at /Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/async/dist/async.js:3880:24\n    at replenish (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/async/dist/async.js:1011:17)\n    at iterateeCallback (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/async/dist/async.js:995:17)\n    at /Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/async/dist/async.js:969:16\n    at /Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/async/dist/async.js:3885:13\n    at Object.exports.check (test/helpers/validation.js:68:5)\n    at /Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/components/api-server/test/account.test.js:383:22\n    at end (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/components/test-helpers/src/request.js:111:7)\n    at IndifferentRequest.Request.callback (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/index.js:716:12)\n    at parser (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1064:12)\n    at _combinedTickCallback (internal/process/next_tick.js:139:11)\n    at process._tickCallback (internal/process/next_tick.js:181:9)",
          "uncaught": true
        }
      },
      {
        "title": "FJKK-must not trigger a reset email if mailing is deactivated",
        "fullTitle": "account /request-password-reset and /reset-password FJKK-must not trigger a reset email if mailing is deactivated",
        "duration": 1255,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HUWL-must not trigger a reset email if reset mail is deactivated",
        "fullTitle": "account /request-password-reset and /reset-password HUWL-must not trigger a reset email if reset mail is deactivated",
        "duration": 1341,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "POI6-must not be possible to use a reset token to illegally change password of another user",
        "fullTitle": "account /request-password-reset and /reset-password POI6-must not be possible to use a reset token to illegally change password of another user",
        "duration": 27,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "IIE3-\"request\" must return an error if the requesting app is not trusted",
        "fullTitle": "account /request-password-reset and /reset-password IIE3-\"request\" must return an error if the requesting app is not trusted",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WYA7-\"request\" must return an error if sent data is badly formatted",
        "fullTitle": "account /request-password-reset and /reset-password WYA7-\"request\" must return an error if sent data is badly formatted",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "E73T-\"reset\" must return an error if the reset token is invalid/expired",
        "fullTitle": "account /request-password-reset and /reset-password E73T-\"reset\" must return an error if the reset token is invalid/expired",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2DNL-\"reset\" must return an error if the requesting app is not trusted",
        "fullTitle": "account /request-password-reset and /reset-password 2DNL-\"reset\" must return an error if the requesting app is not trusted",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7CT2-\"reset\" must return an error if sent data is badly formatted",
        "fullTitle": "account /request-password-reset and /reset-password 7CT2-\"reset\" must return an error if sent data is badly formatted",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "LOWP-must not return history when calling events.get",
        "fullTitle": "Auditing Events LOWP-must not return history when calling events.get",
        "duration": 47,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "OKAZ-must delete the event's history when deleting it with deletionMode=keep-nothing",
        "fullTitle": "Auditing Events deletionMode OKAZ-must delete the event's history when deleting it with deletionMode=keep-nothing",
        "duration": 1190,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BH4Z-must minimize the event's history when deleting it with deletionMode=keep-authors",
        "fullTitle": "Auditing Events deletionMode BH4Z-must minimize the event's history when deleting it with deletionMode=keep-authors",
        "duration": 1173,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HGOV-must not modify the event's history when deleting it with deletionMode=keep-everything",
        "fullTitle": "Auditing Events deletionMode HGOV-must not modify the event's history when deleting it with deletionMode=keep-everything",
        "duration": 1142,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "OD57-must not return an event's history when calling getOne with includeHistory flag off",
        "fullTitle": "Auditing Events getOne OD57-must not return an event's history when calling getOne with includeHistory flag off",
        "duration": 13,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7M01-must return an event's history when calling getOne with includeHistory flag on",
        "fullTitle": "Auditing Events getOne 7M01-must return an event's history when calling getOne with includeHistory flag on",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZIUC-must not generate history when updating an event",
        "fullTitle": "Auditing Events forceKeepHistory is OFF ZIUC-must not generate history when updating an event",
        "duration": 124,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8C1P-must not generate history of the running event that was stopped because of the start call on another event",
        "fullTitle": "Auditing Events forceKeepHistory is OFF 8C1P-must not generate history of the running event that was stopped because of the start call on another event",
        "duration": 54,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "M2MF-must not generate history when no event was stopped in the procedure of the start call on another event",
        "fullTitle": "Auditing Events forceKeepHistory is OFF M2MF-must not generate history when no event was stopped in the procedure of the start call on another event",
        "duration": 40,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "CI18-must not generate history when calling stop on a running event",
        "fullTitle": "Auditing Events forceKeepHistory is OFF CI18-must not generate history when calling stop on a running event",
        "duration": 45,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5IDV-must generate history when updating an event",
        "fullTitle": "Auditing Events forceKeepHistory is ON 5IDV-must generate history when updating an event",
        "duration": 190,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "1Q30-must generate history of the running event that was stopped because of the start call on another event",
        "fullTitle": "Auditing Events forceKeepHistory is ON 1Q30-must generate history of the running event that was stopped because of the start call on another event",
        "duration": 68,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "LFAP-must not generate history when no event was stopped in the procedure of the start call on another event",
        "fullTitle": "Auditing Events forceKeepHistory is ON LFAP-must not generate history when no event was stopped in the procedure of the start call on another event",
        "duration": 40,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "S5R8-must generate history when calling stop on a running event",
        "fullTitle": "Auditing Events forceKeepHistory is ON S5R8-must generate history when calling stop on a running event",
        "duration": 54,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9QUV-must generate events' history when their stream is deleted with  mergeEventsWithParents=true since their streamId is modified",
        "fullTitle": "Auditing Streams 9QUV-must generate events' history when their stream is deleted with  mergeEventsWithParents=true since their streamId is modified",
        "duration": 141,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HLL1-must delete the events' history when their stream is deleted with  mergeEventsWithParents=false and deletionMode='keep-nothing'",
        "fullTitle": "Auditing Streams HLL1-must delete the events' history when their stream is deleted with  mergeEventsWithParents=false and deletionMode='keep-nothing'",
        "duration": 1287,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "04SG-must keep the events' minimal history when their stream is deleted with  mergeEventsWithParents=false and deletionMode='keep-authors'",
        "fullTitle": "Auditing Streams 04SG-must keep the events' minimal history when their stream is deleted with  mergeEventsWithParents=false and deletionMode='keep-authors'",
        "duration": 1193,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "D7K8-must not delete the events' history when their stream is deleted with  mergeEventsWithParents=false and deletionMode='keep-everything'",
        "fullTitle": "Auditing Streams D7K8-must not delete the events' history when their stream is deleted with  mergeEventsWithParents=false and deletionMode='keep-everything'",
        "duration": 1170,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "53QQ-must delete history data from the storage",
        "fullTitle": "Auditing Nightly task 53QQ-must delete history data from the storage",
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JN84-must authenticate the given credentials, open a session and return the access token",
        "fullTitle": "auth /login JN84-must authenticate the given credentials, open a session and return the access token",
        "duration": 157,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "VIE9-must reuse the current session if already open",
        "fullTitle": "auth /login VIE9-must reuse the current session if already open",
        "duration": 210,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6TFI-must accept \"wildcarded\" app ids and origins",
        "fullTitle": "auth /login 6TFI-must accept \"wildcarded\" app ids and origins",
        "duration": 106,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "47H4-must accept \"no origin\" (i.e. not a CORS request) if authorized",
        "fullTitle": "auth /login 47H4-must accept \"no origin\" (i.e. not a CORS request) if authorized",
        "duration": 120,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "IO2V-must also accept \"referer\" in place of \"origin\" (e.g. some browsers do not provide \"origin\")",
        "fullTitle": "auth /login IO2V-must also accept \"referer\" in place of \"origin\" (e.g. some browsers do not provide \"origin\")",
        "duration": 101,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6OT4-must also accept \"referer\" in place of \"origin\" (e.g. some browsers do not provide \"origin\")",
        "fullTitle": "auth /login 6OT4-must also accept \"referer\" in place of \"origin\" (e.g. some browsers do not provide \"origin\")",
        "duration": 103,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9NOB-must not be case-sensitive for the username",
        "fullTitle": "auth /login 9NOB-must not be case-sensitive for the username",
        "duration": 102,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "74QM-must return a correct error when the local credentials are missing or invalid",
        "fullTitle": "auth /login 74QM-must return a correct error when the local credentials are missing or invalid",
        "duration": 83,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3IRI-must return a correct error if the app id is missing or untrusted",
        "fullTitle": "auth /login 3IRI-must return a correct error if the app id is missing or untrusted",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MFTJ-must return a correct error if the origin is missing or does not match the app id",
        "fullTitle": "auth /login MFTJ-must return a correct error if the origin is missing or does not match the app id",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FE9I-must support concurrent login request",
        "fullTitle": "auth /login FE9I-must support concurrent login request",
        "duration": 125,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JAVF-must not leak _private object from Result",
        "fullTitle": "auth /login JAVF-must not leak _private object from Result",
        "duration": 101,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WAJ8-must replace the password in the logs by (hidden) when an error occurs",
        "fullTitle": "auth /login when we log into a temporary log file WAJ8-must replace the password in the logs by (hidden) when an error occurs",
        "duration": 137,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9BW0-must not mention the password in the logs when none is provided",
        "fullTitle": "auth /login when we log into a temporary log file 9BW0-must not mention the password in the logs when none is provided",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8LZC-must terminate the access session and fail to logout a second time (session already expired)",
        "fullTitle": "auth /logout 8LZC-must terminate the access session and fail to logout a second time (session already expired)",
        "duration": 230,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FY6R-(or any request) must alternatively accept the access token in the query string",
        "fullTitle": "auth /logout FY6R-(or any request) must alternatively accept the access token in the query string",
        "duration": 154,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FCSL-GET /who-am-i must return a 404 as it has been deprecated",
        "fullTitle": "auth SSO support FCSL-GET /who-am-i must return a 404 as it has been deprecated",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "EKFY-must set the SSO cookie on /login with the access token",
        "fullTitle": "auth SSO support when deprecated.auth.ssoIsWhoamiActivated is set EKFY-must set the SSO cookie on /login with the access token",
        "currentRetry": 0,
        "err": {
          "operator": "to contain 'HttpOnly'",
          "actual": [
            "sso=s%3Aj%3A%7B%22username%22%3A%22userzero%22%2C%22token%22%3A%22cjvcd007v0001qzpv50yyzrez%22%7D.1z3a1ZRcUKz3dzfDbEGgjJl2gWru21xJdtOxIEN7NyE; Max-Age=1209600; Domain=127.0.0.1; Path=/; Expires=Mon, 20 May 2019 12:46:40 GMT; HttpOnly"
          ],
          "negate": false,
          "assertion": {
            "obj": "sso=s%3Aj%3A%7B%22username%22%3A%22userzero%22%2C%22token%22%3A%22cjvcd007v0001qzpv50yyzrez%22%7D.1z3a1ZRcUKz3dzfDbEGgjJl2gWru21xJdtOxIEN7NyE; Max-Age=1209600; Domain=127.0.0.1; Path=/; Expires=Mon, 20 May 2019 12:46:40 GMT; HttpOnly",
            "anyOne": false,
            "negate": false,
            "params": {
              "operator": "to contain 'HttpOnly'",
              "actual": "sso=s%3Aj%3A%7B%22username%22%3A%22userzero%22%2C%22token%22%3A%22cjvcd007v0001qzpv50yyzrez%22%7D.1z3a1ZRcUKz3dzfDbEGgjJl2gWru21xJdtOxIEN7NyE; Max-Age=1209600; Domain=127.0.0.1; Path=/; Expires=Mon, 20 May 2019 12:46:40 GMT; HttpOnly",
              "negate": false,
              "assertion": "[object Object]"
            },
            "light": false
          },
          "message": "expected Array [\n  'sso=s%3Aj%3A%7B%22username%22%3A%22userzero%22%2C%22token%22%3A%22cjvcd007v0001qzpv50yyzrez%22%7D.1z3a1ZRcUKz3dzfDbEGgjJl2gWru21xJdtOxIEN7NyE; Max-Age=1209600; Domain=127.0.0.1; Path=/; Expires=Mon, 20 May 2019 12:46:40 GMT; HttpOnly'\n] to contain 'HttpOnly'",
          "stack": "AssertionError: expected Array [\n  'sso=s%3Aj%3A%7B%22username%22%3A%22userzero%22%2C%22token%22%3A%22cjvcd007v0001qzpv50yyzrez%22%7D.1z3a1ZRcUKz3dzfDbEGgjJl2gWru21xJdtOxIEN7NyE; Max-Age=1209600; Domain=127.0.0.1; Path=/; Expires=Mon, 20 May 2019 12:46:40 GMT; HttpOnly'\n] to contain 'HttpOnly'\n    at Assertion.fail (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/should/cjs/should.js:258:17)\n    at Assertion.value [as containEql] (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/should/cjs/should.js:335:19)\n    at /Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/components/api-server/test/auth.test.js:394:30\n    at Request.callback (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/index.js:716:12)\n    at parser (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1064:12)\n    at _combinedTickCallback (internal/process/next_tick.js:139:11)\n    at process._tickCallback (internal/process/next_tick.js:181:9)",
          "_message": "expected Array [\n  'sso=s%3Aj%3A%7B%22username%22%3A%22userzero%22%2C%22token%22%3A%22cjvcd007v0001qzpv50yyzrez%22%7D.1z3a1ZRcUKz3dzfDbEGgjJl2gWru21xJdtOxIEN7NyE; Max-Age=1209600; Domain=127.0.0.1; Path=/; Expires=Mon, 20 May 2019 12:46:40 GMT; HttpOnly'\n] to contain 'HttpOnly'",
          "generatedMessage": true,
          "uncaught": true
        }
      },
      {
        "title": "KGV1-must answer /who-am-i with username and session details if session open",
        "fullTitle": "auth SSO support when deprecated.auth.ssoIsWhoamiActivated is set KGV1-must answer /who-am-i with username and session details if session open",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FIN1-must clear the SSO cookie on /logout",
        "fullTitle": "auth SSO support when deprecated.auth.ssoIsWhoamiActivated is set FIN1-must clear the SSO cookie on /logout",
        "duration": 0,
        "currentRetry": 0,
        "err": {
          "stack": "TypeError: Cannot read property 'token' of undefined\n    at Context.<anonymous> (test/auth.test.js:431:107)",
          "message": "Cannot read property 'token' of undefined"
        }
      },
      {
        "title": "MS07-must respond /who-am-i with an \"unauthorized\" error if no cookie is sent",
        "fullTitle": "auth SSO support when deprecated.auth.ssoIsWhoamiActivated is set MS07-must respond /who-am-i with an \"unauthorized\" error if no cookie is sent",
        "currentRetry": 0,
        "err": {
          "message": "expected 200 to equal 401",
          "showDiff": true,
          "actual": "200",
          "expected": "401",
          "stack": "AssertionError: expected 200 to equal 401\n    at /Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/components/api-server/test/auth.test.js:448:18\n    at Request.callback (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/index.js:716:12)\n    at parser (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1064:12)\n    at _combinedTickCallback (internal/process/next_tick.js:139:11)\n    at process._tickCallback (internal/process/next_tick.js:181:9)",
          "uncaught": true
        }
      },
      {
        "title": "5K9P-must return the last 20 non-trashed events (sorted descending) by default",
        "fullTitle": "events GET / 5K9P-must return the last 20 non-trashed events (sorted descending) by default",
        "duration": 100,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2VRD-must only return events for the given streams (incl. sub-streams) when set",
        "fullTitle": "events GET / 2VRD-must only return events for the given streams (incl. sub-streams) when set",
        "duration": 16,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SUE7-must return an error if some of the given streams do not exist",
        "fullTitle": "events GET / SUE7-must return an error if some of the given streams do not exist",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "E24N-must only return events with the given tag when set",
        "fullTitle": "events GET / E24N-must only return events with the given tag when set",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7Z4W-must only return events with any of the given tags when set",
        "fullTitle": "events GET / 7Z4W-must only return events with any of the given tags when set",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "S1AF-must only return events of any of the given types when set",
        "fullTitle": "events GET / S1AF-must only return events of any of the given types when set",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZE0Y-must (unofficially) support a wildcard for event types",
        "fullTitle": "events GET / ZE0Y-must (unofficially) support a wildcard for event types",
        "duration": 15,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0TPP-must only return events in the given time period sorted ascending when set",
        "fullTitle": "events GET / 0TPP-must only return events in the given time period sorted ascending when set",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SMH2-must take into account fromTime and toTime even if set to 0",
        "fullTitle": "events GET / SMH2-must take into account fromTime and toTime even if set to 0",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "OZRH-must take into account modifiedSince even if set to 0",
        "fullTitle": "events GET / OZRH-must take into account modifiedSince even if set to 0",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7R98-must properly exclude period events completed before the given period",
        "fullTitle": "events GET / 7R98-must properly exclude period events completed before the given period",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6I0H-must return ongoing events started before the given time period",
        "fullTitle": "events GET / 6I0H-must return ongoing events started before the given time period",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3RO1-must only return events in the given paging range when set",
        "fullTitle": "events GET / 3RO1-must only return events in the given paging range when set",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9HDG-must return only trashed events when requested",
        "fullTitle": "events GET / 9HDG-must return only trashed events when requested",
        "duration": 21,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DK1G-must return all events (trashed or not) when requested",
        "fullTitle": "events GET / DK1G-must return all events (trashed or not) when requested",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SSNE-must return only events modified since the given time when requested",
        "fullTitle": "events GET / SSNE-must return only events modified since the given time when requested",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "IHBE-must include event deletions (since that time) when requested",
        "fullTitle": "events GET / IHBE-must include event deletions (since that time) when requested",
        "duration": 13,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QFMP-must not keep event deletions past a certain time (cannot test because cannot force-run Mongo's TTL cleanup task)",
        "fullTitle": "events GET / QFMP-must not keep event deletions past a certain time (cannot test because cannot force-run Mongo's TTL cleanup task)",
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SGTU-must only return running period event(s) when requested",
        "fullTitle": "events GET / SGTU-must only return running period event(s) when requested",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TCYF-must return an error if no access token is provided",
        "fullTitle": "events GET / TCYF-must return an error if no access token is provided",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3R0I-must return the attached file with the correct headers",
        "fullTitle": "events GET /<event id>/<file id> 3R0I-must return the attached file with the correct headers",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TP1E-must accept a secure read token in the query string instead of the `\"Authorization\" header",
        "fullTitle": "events GET /<event id>/<file id> TP1E-must accept a secure read token in the query string instead of the `\"Authorization\" header",
        "duration": 18,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "H1OS-must allow a filename path suffix after the file id",
        "fullTitle": "events GET /<event id>/<file id> H1OS-must allow a filename path suffix after the file id",
        "duration": 17,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3O6C-must allow any filename (including special characters)",
        "fullTitle": "events GET /<event id>/<file id> 3O6C-must allow any filename (including special characters)",
        "duration": 17,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RC93-must refuse an invalid file read token",
        "fullTitle": "events GET /<event id>/<file id> RC93-must refuse an invalid file read token",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QQPC-must refuse auth via the regular \"auth\" query string parameter",
        "fullTitle": "events GET /<event id>/<file id> QQPC-must refuse auth via the regular \"auth\" query string parameter",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Y5Q5-must return a proper error if trying to get an unknown attachment",
        "fullTitle": "events GET /<event id>/<file id> Y5Q5-must return a proper error if trying to get an unknown attachment",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZIN3-must create an event with the sent data, returning it",
        "fullTitle": "events POST / ZIN3-must create an event with the sent data, returning it",
        "duration": 41,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "92ST-must set the event's time to \"now\" if missing",
        "fullTitle": "events POST / 92ST-must set the event's time to \"now\" if missing",
        "duration": 34,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BSWJ-must accept explicit null for optional fields",
        "fullTitle": "events POST / BSWJ-must accept explicit null for optional fields",
        "duration": 28,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Q2N2-must refuse events with no stream id",
        "fullTitle": "events POST / Q2N2-must refuse events with no stream id",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "AD23-must return a correct error if an event with the same id already exists",
        "fullTitle": "events POST / AD23-must return a correct error if an event with the same id already exists",
        "duration": 18,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "CIJL-must not allow reuse of deleted ids (unlike streams)",
        "fullTitle": "events POST / CIJL-must not allow reuse of deleted ids (unlike streams)",
        "duration": 26,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HTDW-must only allow ids that are formatted like cuids",
        "fullTitle": "events POST / HTDW-must only allow ids that are formatted like cuids",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8VUB-must reject tags that are too long",
        "fullTitle": "events POST / 8VUB-must reject tags that are too long",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "CO58-must fix the tags to an empty array if not set",
        "fullTitle": "events POST / CO58-must fix the tags to an empty array if not set",
        "duration": 35,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9SIM-must try casting string event content to number if appropriate",
        "fullTitle": "events POST / 9SIM-must try casting string event content to number if appropriate",
        "duration": 33,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "A3RJ-must not stop the running period event if the new event is a mark event (single activity)",
        "fullTitle": "events POST / A3RJ-must not stop the running period event if the new event is a mark event (single activity)",
        "duration": 37,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NYSQ-must not stop the running period event if the stream allows overlapping",
        "fullTitle": "events POST / NYSQ-must not stop the running period event if the stream allows overlapping",
        "duration": 38,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "393N-must validate the event's content if its type is known",
        "fullTitle": "events POST / 393N-must validate the event's content if its type is known",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "G3CY-must not fail when validating the content if passing a string instead of an object",
        "fullTitle": "events POST / G3CY-must not fail when validating the content if passing a string instead of an object",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FY8A-must return an error if the sent data is badly formatted",
        "fullTitle": "events POST / FY8A-must return an error if the sent data is badly formatted",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "AKLS-must return an error if the associated stream is unknown",
        "fullTitle": "events POST / AKLS-must return an error if the associated stream is unknown",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "IF20-must return an error if the event's period overlaps existing periods (single activity)",
        "fullTitle": "events POST / IF20-must return an error if the event's period overlaps existing periods (single activity)",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "C5VJ-must allow the event's period overlapping existing periods when the stream allows it",
        "fullTitle": "events POST / C5VJ-must allow the event's period overlapping existing periods when the stream allows it",
        "duration": 38,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "1KW4-must return an error if the assigned stream is trashed",
        "fullTitle": "events POST / 1KW4-must return an error if the assigned stream is trashed",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FW03-must not fail (500) when sending an array instead of an object",
        "fullTitle": "events POST / FW03-must not fail (500) when sending an array instead of an object",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "KVUN-must create a running period event stopping any previously running event (single activity)",
        "fullTitle": "events POST /start KVUN-must create a running period event stopping any previously running event (single activity)",
        "duration": 54,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MCBW-must return an error if a period event already exists later (single activity)",
        "fullTitle": "events POST /start MCBW-must return an error if a period event already exists later (single activity)",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "21A4-must allow starting an event before an existing period when the stream allows overlapping",
        "fullTitle": "events POST /start 21A4-must allow starting an event before an existing period when the stream allows overlapping",
        "duration": 31,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JEPP-must create a new event with the uploaded files",
        "fullTitle": "events POST / (multipart content) JEPP-must create a new event with the uploaded files",
        "duration": 97,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ABQF-must properly handle part names containing special chars (e.g. \".\", \"$\")",
        "fullTitle": "events POST / (multipart content) ABQF-must properly handle part names containing special chars (e.g. \".\", \"$\")",
        "duration": 76,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TRM2-must return an error if the non-file content part is not JSON",
        "fullTitle": "events POST / (multipart content) TRM2-must return an error if the non-file content part is not JSON",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0VE8-must return an error if there is more than one non-file content part",
        "fullTitle": "events POST / (multipart content) 0VE8-must return an error if there is more than one non-file content part",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MSZM-must add the uploaded files to the event as attachments",
        "fullTitle": "events POST /<event id> (multipart content) MSZM-must add the uploaded files to the event as attachments",
        "duration": 69,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "G1KN-must add the uploaded files to the event without replacing existing attachments",
        "fullTitle": "events POST /<event id> (multipart content) G1KN-must add the uploaded files to the event without replacing existing attachments",
        "duration": 57,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "18ZN-allows access at level=read",
        "fullTitle": "events GET /<id> 18ZN-allows access at level=read",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0UCG-denies access without authorization",
        "fullTitle": "events GET /<id> 0UCG-denies access without authorization",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JW9T-must modify the event with the sent data",
        "fullTitle": "events PUT /<id> JW9T-must modify the event with the sent data",
        "duration": 39,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5MS6-must add/update/remove the specified client data fields without touching the others",
        "fullTitle": "events PUT /<id> 5MS6-must add/update/remove the specified client data fields without touching the others",
        "duration": 38,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SSPW-must return the id of the stopped previously running event if any (single activity)",
        "fullTitle": "events PUT /<id> SSPW-must return the id of the stopped previously running event if any (single activity)",
        "duration": 45,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SEE6-must accept explicit null for optional fields",
        "fullTitle": "events PUT /<id> SEE6-must accept explicit null for optional fields",
        "duration": 47,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4PIR-must validate the event's content if its type is known",
        "fullTitle": "events PUT /<id> 4PIR-must validate the event's content if its type is known",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FQDI-must return an error if the event does not exist",
        "fullTitle": "events PUT /<id> FQDI-must return an error if the event does not exist",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "YPBZ-must return an error if the sent data is badly formatted",
        "fullTitle": "events PUT /<id> YPBZ-must return an error if the sent data is badly formatted",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "PMYO-must return an error if the associated stream is unknown",
        "fullTitle": "events PUT /<id> PMYO-must return an error if the associated stream is unknown",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "G2Z3-must return an error if moving a running period event before another existing period event (single activity)",
        "fullTitle": "events PUT /<id> G2Z3-must return an error if moving a running period event before another existing period event (single activity)",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RHRV-must return an error if the event's new period overlaps other events's (single activity)",
        "fullTitle": "events PUT /<id> RHRV-must return an error if the event's new period overlaps other events's (single activity)",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "YJNJ-must reject tags that are too long",
        "fullTitle": "events PUT /<id> YJNJ-must reject tags that are too long",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "YKLK-must prevent update of protected fields and throw a forbidden error in strict mode",
        "fullTitle": "events PUT /<id> forbidden updates of protected fields YKLK-must prevent update of protected fields and throw a forbidden error in strict mode",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5CG1-must prevent update of protected fields and log a warning in non-strict mode",
        "fullTitle": "events PUT /<id> forbidden updates of protected fields 5CG1-must prevent update of protected fields and log a warning in non-strict mode",
        "duration": 1150,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8WTB-must stop the previously running period event, returning its id (single activity)",
        "fullTitle": "events POST /stop 8WTB-must stop the previously running period event, returning its id (single activity)",
        "duration": 39,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QFF4-must stop the last running event of the given type when specified",
        "fullTitle": "events POST /stop QFF4-must stop the last running event of the given type when specified",
        "duration": 70,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "OR7I-must accept an `id` param to specify the event to stop",
        "fullTitle": "events POST /stop OR7I-must accept an `id` param to specify the event to stop",
        "duration": 53,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "M12G-must return an error if the specified event does not exist",
        "fullTitle": "events POST /stop M12G-must return an error if the specified event does not exist",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5B5E-must return an error if the specified event is not running",
        "fullTitle": "events POST /stop 5B5E-must return an error if the specified event is not running",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ORQD-must return an error if no event is specified and the stream allows overlapping",
        "fullTitle": "events POST /stop ORQD-must return an error if no event is specified and the stream allows overlapping",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "E13L-must return an error if neither stream nor event is specified",
        "fullTitle": "events POST /stop E13L-must return an error if neither stream nor event is specified",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7PQP-must delete the attachment (reference in event + file)",
        "fullTitle": "events DELETE /<event id>/<file id> 7PQP-must delete the attachment (reference in event + file)",
        "duration": 51,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "19AV-must return an error if not existing",
        "fullTitle": "events DELETE /<event id>/<file id> 19AV-must return an error if not existing",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6LNU-must flag the event as trashed",
        "fullTitle": "events DELETE /<id> 6LNU-must flag the event as trashed",
        "duration": 33,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0PS1-must delete the event when already trashed including all its attachments",
        "fullTitle": "events DELETE /<id> 0PS1-must delete the event when already trashed including all its attachments",
        "duration": 71,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "T5C3-must return all followed slices (ordered by user name, then access token)",
        "fullTitle": "followed slices GET / T5C3-must return all followed slices (ordered by user name, then access token)",
        "duration": 31,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "1YQR-must be forbidden to non-personal accesses",
        "fullTitle": "followed slices GET / 1YQR-must be forbidden to non-personal accesses",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DZHQ-must create a new followed slice with the sent data, returning it",
        "fullTitle": "followed slices POST / DZHQ-must create a new followed slice with the sent data, returning it",
        "duration": 36,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "I5DC-must return a correct error if the sent data is badly formatted",
        "fullTitle": "followed slices POST / I5DC-must return a correct error if the sent data is badly formatted",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3K7G-must return a correct error if the same followed slice (url and token) already exists",
        "fullTitle": "followed slices POST / 3K7G-must return a correct error if the same followed slice (url and token) already exists",
        "duration": 17,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "77ET-must return a correct error if a followed slice with the same name already exists",
        "fullTitle": "followed slices POST / 77ET-must return a correct error if a followed slice with the same name already exists",
        "duration": 21,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "623S-must modify the followed slice with the sent data",
        "fullTitle": "followed slices PUT /<id> 623S-must modify the followed slice with the sent data",
        "duration": 28,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JVCA-must return a correct error if the followed slice does not exist",
        "fullTitle": "followed slices PUT /<id> JVCA-must return a correct error if the followed slice does not exist",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "D34H-must return a correct error if the sent data is badly formatted",
        "fullTitle": "followed slices PUT /<id> D34H-must return a correct error if the sent data is badly formatted",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "AE89-must return a correct error if a followed slice with the same name already exists",
        "fullTitle": "followed slices PUT /<id> AE89-must return a correct error if a followed slice with the same name already exists",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FJOB-must delete the followed slice",
        "fullTitle": "followed slices DELETE /<id> FJOB-must delete the followed slice",
        "duration": 31,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Q0RN-must return a correct error if the followed slice does not exist",
        "fullTitle": "followed slices DELETE /<id> Q0RN-must return a correct error if the followed slice does not exist",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DTMW-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is null",
        "fullTitle": "methods/helpers/commonFunctions.js: catchForbiddenUpdate(schema) with streams schema DTMW-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is null",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6OH8-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is false",
        "fullTitle": "methods/helpers/commonFunctions.js: catchForbiddenUpdate(schema) with streams schema 6OH8-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is false",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "IRA9-must not throw any error if \"ignoreProtectedFieldUpdates\" is true but print a warn log",
        "fullTitle": "methods/helpers/commonFunctions.js: catchForbiddenUpdate(schema) with streams schema IRA9-must not throw any error if \"ignoreProtectedFieldUpdates\" is true but print a warn log",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "PTBI-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is null",
        "fullTitle": "methods/helpers/commonFunctions.js: catchForbiddenUpdate(schema) with events schema PTBI-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is null",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "EHBW-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is false",
        "fullTitle": "methods/helpers/commonFunctions.js: catchForbiddenUpdate(schema) with events schema EHBW-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is false",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BLN8-must not throw any error if \"ignoreProtectedFieldUpdates\" is true but print a warn log",
        "fullTitle": "methods/helpers/commonFunctions.js: catchForbiddenUpdate(schema) with events schema BLN8-must not throw any error if \"ignoreProtectedFieldUpdates\" is true but print a warn log",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "II0R-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is null",
        "fullTitle": "methods/helpers/commonFunctions.js: catchForbiddenUpdate(schema) with accesses schema II0R-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is null",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FQVL-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is false",
        "fullTitle": "methods/helpers/commonFunctions.js: catchForbiddenUpdate(schema) with accesses schema FQVL-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is false",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "VIJQ-must not throw any error if \"ignoreProtectedFieldUpdates\" is true but print a warn log",
        "fullTitle": "methods/helpers/commonFunctions.js: catchForbiddenUpdate(schema) with accesses schema VIJQ-must not throw any error if \"ignoreProtectedFieldUpdates\" is true but print a warn log",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RW79-should throw an error if mailing method is invalid",
        "fullTitle": "Mailing helper methods RW79-should throw an error if mailing method is invalid",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QZTA-should throw an error if mailing method is missing",
        "fullTitle": "Mailing helper methods QZTA-should throw an error if mailing method is missing",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "L7HW-should not be empty",
        "fullTitle": "Mailing helper methods using Mandrill validating request body L7HW-should not be empty",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7171-should contain a valid auth key",
        "fullTitle": "Mailing helper methods using Mandrill validating request body 7171-should contain a valid auth key",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NUW0-should contain a valid recipient",
        "fullTitle": "Mailing helper methods using Mandrill validating request body NUW0-should contain a valid recipient",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "OEFA-should contain a valid substitution of variables",
        "fullTitle": "Mailing helper methods using Mandrill validating request body OEFA-should contain a valid substitution of variables",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "H6D2-should contain valid tags",
        "fullTitle": "Mailing helper methods using Mandrill validating request body H6D2-should contain valid tags",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SMDT-should not be empty",
        "fullTitle": "Mailing helper methods using Microservice validating request body SMDT-should not be empty",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "R89N-should contain a valid auth key",
        "fullTitle": "Mailing helper methods using Microservice validating request body R89N-should contain a valid auth key",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "LWKE-should contain a valid recipient",
        "fullTitle": "Mailing helper methods using Microservice validating request body LWKE-should contain a valid recipient",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9PT7-should contain a valid substitution of variables",
        "fullTitle": "Mailing helper methods using Microservice validating request body 9PT7-should contain a valid substitution of variables",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "N7RH-must return an array preceded by a comma when called with parameter isFirst=false",
        "fullTitle": "ArrayStream N7RH-must return an array preceded by a comma when called with parameter isFirst=false",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZK91-must return a valid array when receiving limit-3 items",
        "fullTitle": "ArrayStream testing around the array size limit ZK91-must return a valid array when receiving limit-3 items",
        "duration": 28,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZK91-must return a valid array when receiving limit-2 items",
        "fullTitle": "ArrayStream testing around the array size limit ZK91-must return a valid array when receiving limit-2 items",
        "duration": 23,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZK91-must return a valid array when receiving limit-1 items",
        "fullTitle": "ArrayStream testing around the array size limit ZK91-must return a valid array when receiving limit-1 items",
        "duration": 21,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZK91-must return a valid array when receiving limit+0 items",
        "fullTitle": "ArrayStream testing around the array size limit ZK91-must return a valid array when receiving limit+0 items",
        "duration": 18,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZK91-must return a valid array when receiving limit+1 items",
        "fullTitle": "ArrayStream testing around the array size limit ZK91-must return a valid array when receiving limit+1 items",
        "duration": 15,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZK91-must return a valid array when receiving limit+2 items",
        "fullTitle": "ArrayStream testing around the array size limit ZK91-must return a valid array when receiving limit+2 items",
        "duration": 15,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZK91-must return a valid array when receiving limit+3 items",
        "fullTitle": "ArrayStream testing around the array size limit ZK91-must return a valid array when receiving limit+3 items",
        "duration": 13,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NZYH-must return a valid array when receiving 0 item(s)",
        "fullTitle": "ArrayStream testing with small number of items NZYH-must return a valid array when receiving 0 item(s)",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NZYH-must return a valid array when receiving 1 item(s)",
        "fullTitle": "ArrayStream testing with small number of items NZYH-must return a valid array when receiving 1 item(s)",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NZYH-must return a valid array when receiving 2 item(s)",
        "fullTitle": "ArrayStream testing with small number of items NZYH-must return a valid array when receiving 2 item(s)",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NZYH-must return a valid array when receiving 3 item(s)",
        "fullTitle": "ArrayStream testing with small number of items NZYH-must return a valid array when receiving 3 item(s)",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "F2W3-must be fed objects and return them in the callback",
        "fullTitle": "DrainStream F2W3-must be fed objects and return them in the callback",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "36LN-must return an error when the provided limit is exceeded",
        "fullTitle": "DrainStream 36LN-must return an error when the provided limit is exceeded",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JJVD-`get` must only return events in accessible streams",
        "fullTitle": "Access permissions Events JJVD-`get` must only return events in accessible streams",
        "duration": 21,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DF9T-`get` must return all events when permissions are defined for \"all streams\" (*)",
        "fullTitle": "Access permissions Events DF9T-`get` must return all events when permissions are defined for \"all streams\" (*)",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BDV5-`get` must only return events with accessible tags",
        "fullTitle": "Access permissions Events BDV5-`get` must only return events with accessible tags",
        "duration": 15,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "KB7H-`get` must only return events in accessible streams *and* with accessible tags when both are defined",
        "fullTitle": "Access permissions Events KB7H-`get` must only return events in accessible streams *and* with accessible tags when both are defined",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UF1Y-`get` (or any request) must alternatively accept the access token in the query string",
        "fullTitle": "Access permissions Events UF1Y-`get` (or any request) must alternatively accept the access token in the query string",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5489-must forbid getting an attached file if permissions are insufficient",
        "fullTitle": "Access permissions Events 5489-must forbid getting an attached file if permissions are insufficient",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "S6FY-must forbid creating events for 'read-only' streams",
        "fullTitle": "Access permissions Events S6FY-must forbid creating events for 'read-only' streams",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "U1H0-must forbid creating events for 'read-only' tags",
        "fullTitle": "Access permissions Events U1H0-must forbid creating events for 'read-only' tags",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NC61-must forbid updating events for 'read-only' streams",
        "fullTitle": "Access permissions Events NC61-must forbid updating events for 'read-only' streams",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BG1P-must forbid updating events for 'read-only' tags",
        "fullTitle": "Access permissions Events BG1P-must forbid updating events for 'read-only' tags",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "GGLO-must forbid stopping events for 'read-only' streams",
        "fullTitle": "Access permissions Events GGLO-must forbid stopping events for 'read-only' streams",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2TVO-must forbid stopping events for 'read-only' tags",
        "fullTitle": "Access permissions Events 2TVO-must forbid stopping events for 'read-only' tags",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZMJ3-must forbid deleting events for 'read-only' streams",
        "fullTitle": "Access permissions Events ZMJ3-must forbid deleting events for 'read-only' streams",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "KOUQ-must forbid deleting events for 'read-only' tags",
        "fullTitle": "Access permissions Events KOUQ-must forbid deleting events for 'read-only' tags",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "GSIC-must allow creating events for 'contribute' streams",
        "fullTitle": "Access permissions Events GSIC-must allow creating events for 'contribute' streams",
        "duration": 22,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0G3R-must allow creating events for 'contribute' tags",
        "fullTitle": "Access permissions Events 0G3R-must allow creating events for 'contribute' tags",
        "duration": 21,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BF14-`get` must only return streams for which permissions are defined",
        "fullTitle": "Access permissions Streams BF14-`get` must only return streams for which permissions are defined",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WTHV-must forbid creating child streams in 'read-only' streams",
        "fullTitle": "Access permissions Streams WTHV-must forbid creating child streams in 'read-only' streams",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JRNH-must forbid creating child streams in 'contribute' streams",
        "fullTitle": "Access permissions Streams JRNH-must forbid creating child streams in 'contribute' streams",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0NZ3-must forbid deleting child streams in 'contribute' streams",
        "fullTitle": "Access permissions Streams 0NZ3-must forbid deleting child streams in 'contribute' streams",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "B2KJ-must forbid updating 'contribute' streams",
        "fullTitle": "Access permissions Streams B2KJ-must forbid updating 'contribute' streams",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JF6L-must forbid deleting 'contribute' streams",
        "fullTitle": "Access permissions Streams JF6L-must forbid deleting 'contribute' streams",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BT1V-must allow creating child streams in 'managed' streams",
        "fullTitle": "Access permissions Streams BT1V-must allow creating child streams in 'managed' streams",
        "duration": 27,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3HV6-must forbid moving streams into non-'managed' parent streams",
        "fullTitle": "Access permissions Streams 3HV6-must forbid moving streams into non-'managed' parent streams",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "C8J2-must allow deleting child streams in 'managed' streams",
        "fullTitle": "Access permissions Streams C8J2-must allow deleting child streams in 'managed' streams",
        "duration": 16,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RL35-must recursively apply permissions to the streams' child streams",
        "fullTitle": "Access permissions Streams RL35-must recursively apply permissions to the streams' child streams",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "70J2-must allow access to all streams when no specific stream permissions are defined",
        "fullTitle": "Access permissions Streams 70J2-must allow access to all streams when no specific stream permissions are defined",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "H0UN-must allow access to all streams when only tag permissions are defined",
        "fullTitle": "Access permissions Streams H0UN-must allow access to all streams when only tag permissions are defined",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JMHU-must only allow access to set streams when both tag and stream permissions are defined",
        "fullTitle": "Access permissions Streams JMHU-must only allow access to set streams when both tag and stream permissions are defined",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "K2BU-must handle optional caller id in auth (in addition to token)",
        "fullTitle": "Access permissions Auth and change tracking K2BU-must handle optional caller id in auth (in addition to token)",
        "duration": 20,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZZNY-must be supported and deny access when failing",
        "fullTitle": "Access permissions Auth and change tracking custom auth step (e.g. to validate/parse caller id) ZZNY-must be supported and deny access when failing",
        "duration": 72,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "20YL-must allow access when successful",
        "fullTitle": "Access permissions Auth and change tracking custom auth step (e.g. to validate/parse caller id) 20YL-must allow access when successful",
        "duration": 37,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DWUP-must fail properly (i.e. not granting access) when the custom function crashes",
        "fullTitle": "Access permissions Auth and change tracking custom auth step (e.g. to validate/parse caller id) DWUP-must fail properly (i.e. not granting access) when the custom function crashes",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4W6M-must validate the custom function at startup time",
        "fullTitle": "Access permissions Auth and change tracking custom auth step (e.g. to validate/parse caller id) 4W6M-must validate the custom function at startup time",
        "duration": 626,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "PYC1-must return publicly shared key-value profile info",
        "fullTitle": "profile (app) GET /public PYC1-must return publicly shared key-value profile info",
        "duration": 57,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "R2CV-must return key-value settings for the current app",
        "fullTitle": "profile (app) GET /app R2CV-must return key-value settings for the current app",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4UG3-must refuse requests with a shared access token",
        "fullTitle": "profile (app) GET /app 4UG3-must refuse requests with a shared access token",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "STTI-must refuse requests with a personal access token",
        "fullTitle": "profile (app) GET /app STTI-must refuse requests with a personal access token",
        "duration": 126,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "V8OQ-must add/update/remove the specified keys without touching the others",
        "fullTitle": "profile (app) PUT /app V8OQ-must add/update/remove the specified keys without touching the others",
        "duration": 21,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "T79T-must refuse requests with a shared access token",
        "fullTitle": "profile (app) PUT /app T79T-must refuse requests with a shared access token",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FY8T-must refuse requests with a personal access token",
        "fullTitle": "profile (app) PUT /app FY8T-must refuse requests with a personal access token",
        "duration": 107,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5BQ2-/public must return publicly shared key-value profile info",
        "fullTitle": "profile (personal) GET 5BQ2-/public must return publicly shared key-value profile info",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WOOY-/private must return private key-value profile info",
        "fullTitle": "profile (personal) GET WOOY-/private must return private key-value profile info",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "O2GZ-must return an appropriate error for other paths",
        "fullTitle": "profile (personal) GET O2GZ-must return an appropriate error for other paths",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Q25A-\"private\" must be forbidden to non-personal accesses",
        "fullTitle": "profile (personal) GET Q25A-\"private\" must be forbidden to non-personal accesses",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5WYL-/public must add/update/remove the specified keys without touching the others",
        "fullTitle": "profile (personal) PUT 5WYL-/public must add/update/remove the specified keys without touching the others",
        "duration": 26,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "C8RJ-/private must add/update/remove the specified keys without touching the others",
        "fullTitle": "profile (personal) PUT C8RJ-/private must add/update/remove the specified keys without touching the others",
        "duration": 28,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TH89-must create the profile if not existing",
        "fullTitle": "profile (personal) PUT TH89-must create the profile if not existing",
        "duration": 50,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2Q7M-must return an appropriate error for other paths",
        "fullTitle": "profile (personal) PUT 2Q7M-must return an appropriate error for other paths",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NZM0-must be forbidden to non-personal accesses",
        "fullTitle": "profile (personal) PUT NZM0-must be forbidden to non-personal accesses",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "D6BK-must return the result's content when not storing streams",
        "fullTitle": "Result toObject() D6BK-must return the result's content when not storing streams",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UHUE-must return the result content when storing streams",
        "fullTitle": "Result toObject() UHUE-must return the result content when storing streams",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "VYMB-must return an error object when attempting to serialize streams containing an amountof objects exceeding the limit",
        "fullTitle": "Result toObject() VYMB-must return an error object when attempting to serialize streams containing an amountof objects exceeding the limit",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TNHH-must return an error when storing piped streams",
        "fullTitle": "Result toObject() TNHH-must return an error when storing piped streams",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "must return an error when the core pipeline crashes because of size",
        "fullTitle": "Result toObject() must return an error when the core pipeline crashes because of size",
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TTCA-should return basic server meta information as JSON when requested",
        "fullTitle": "root GET / TTCA-should return basic server meta information as JSON when requested",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "I30T-should return basic server meta information as text otherwise",
        "fullTitle": "root GET / I30T-should return basic server meta information as text otherwise",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MGFL-should return an error if trying to access an unknown user account",
        "fullTitle": "root GET / MGFL-should return an error if trying to access an unknown user account",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "B9ZT-should return correct common HTTP headers + meta data in response body",
        "fullTitle": "root All requests: B9ZT-should return correct common HTTP headers + meta data in response body",
        "duration": 26,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6FC1-should return meta data in response body for errors as well",
        "fullTitle": "root All requests: 6FC1-should return meta data in response body for errors as well",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "should properly translate the Host header's username (i.e. subdomain)",
        "fullTitle": "root All requests: should properly translate the Host header's username (i.e. subdomain)",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "OYOI-should translate the username in subdomain also when it only contains numbers",
        "fullTitle": "root All requests: OYOI-should translate the username in subdomain also when it only contains numbers",
        "duration": 124,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DNME-should support POSTing \"urlencoded\" content with _json and _auth fields",
        "fullTitle": "root All requests: DNME-should support POSTing \"urlencoded\" content with _json and _auth fields",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZSK7-should support POSTing \"urlencoded\" content with _json, _method (PUT) and _auth fields",
        "fullTitle": "root All requests: ZSK7-should support POSTing \"urlencoded\" content with _json, _method (PUT) and _auth fields",
        "duration": 39,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Q7N8-should support POSTing \"urlencoded\" content with _json, _method (DELETE) and _auth fields",
        "fullTitle": "root All requests: Q7N8-should support POSTing \"urlencoded\" content with _json, _method (DELETE) and _auth fields",
        "duration": 85,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WSL5-should properly handle JSON errors when POSTing \"urlencoded\" content with _json field",
        "fullTitle": "root All requests: WSL5-should properly handle JSON errors when POSTing \"urlencoded\" content with _json field",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QRVJ-should update the access's \"last used\" time and *internal* request counters",
        "fullTitle": "root All requests: QRVJ-should update the access's \"last used\" time and *internal* request counters",
        "duration": 20,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "S2W6-should return OK",
        "fullTitle": "root OPTIONS / S2W6-should return OK",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3NPZ-must return current access information",
        "fullTitle": "root GET /access-info 3NPZ-must return current access information",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZYZ2-must execute the given method calls and return the results",
        "fullTitle": "root POST / (i.e. batch call) ZYZ2-must execute the given method calls and return the results",
        "duration": 150,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "must execute the method calls containing events.get and return the results",
        "fullTitle": "root POST / (i.e. batch call) must execute the method calls containing events.get and return the results",
        "duration": 90,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "V5AS-must return an error if the sent data is badly formatted",
        "fullTitle": "root POST / (i.e. batch call) V5AS-must return an error if the sent data is badly formatted",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "K15M-must dynamically create a namespace for the user",
        "fullTitle": "Socket.IO K15M-must dynamically create a namespace for the user",
        "duration": 39,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "03O5-must connect to a user with a dash in the username",
        "fullTitle": "Socket.IO 03O5-must connect to a user with a dash in the username",
        "duration": 145,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FS0T-must refuse connection if no valid access token is provided",
        "fullTitle": "Socket.IO FS0T-must refuse connection if no valid access token is provided",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DQQA-must properly route method call messages for events and return the results, including meta",
        "fullTitle": "Socket.IO calling API methods DQQA-must properly route method call messages for events and return the results, including meta",
        "currentRetry": 0,
        "err": {
          "operator": "to be",
          "expected": "true",
          "message": "[ { code: 'INVALID_TYPE',\n    params: [ [ 'object' ], 'undefined' ],\n    message: 'Expected type object but found type undefined',\n    path: '#/',\n    schemaId: undefined,\n    [Symbol(z-schema/schema)]: \n     { properties: \n        { eventDeletions: \n           { items: \n              { properties: [Object],\n                additionalProperties: false,\n                required: [Array],\n                id: 'itemDeletion',\n                type: [Array],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true },\n          events: \n           { items: \n              { required: [Array],\n                properties: [Object],\n                additionalProperties: false,\n                id: 'pryv.core.event-read',\n                type: [Array],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true } },\n       required: [ 'events' ],\n       type: [ 'object' ],\n       '__$compiled': true,\n       '__$validated': true },\n    [Symbol(z-schema/json)]: undefined } ]",
          "showDiff": true,
          "actual": "false",
          "negate": false,
          "assertion": {
            "obj": false,
            "anyOne": false,
            "negate": false,
            "params": {
              "operator": "to be",
              "expected": true,
              "message": "[ { code: 'INVALID_TYPE',\n    params: [ [ 'object' ], 'undefined' ],\n    message: 'Expected type object but found type undefined',\n    path: '#/',\n    schemaId: undefined,\n    [Symbol(z-schema/schema)]: \n     { properties: \n        { eventDeletions: \n           { items: \n              { properties: [Object],\n                additionalProperties: false,\n                required: [Array],\n                id: 'itemDeletion',\n                type: [Array],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true },\n          events: \n           { items: \n              { required: [Array],\n                properties: [Object],\n                additionalProperties: false,\n                id: 'pryv.core.event-read',\n                type: [Array],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true } },\n       required: [ 'events' ],\n       type: [ 'object' ],\n       '__$compiled': true,\n       '__$validated': true },\n    [Symbol(z-schema/json)]: undefined } ]",
              "showDiff": true,
              "actual": false,
              "negate": false,
              "assertion": "[object Object]"
            },
            "light": false
          },
          "stack": "AssertionError: [ { code: 'INVALID_TYPE',\n    params: [ [ 'object' ], 'undefined' ],\n    message: 'Expected type object but found type undefined',\n    path: '#/',\n    schemaId: undefined,\n    [Symbol(z-schema/schema)]: \n     { properties: \n        { eventDeletions: \n           { items: \n              { properties: [Object],\n                additionalProperties: false,\n                required: [Array],\n                id: 'itemDeletion',\n                type: [Array],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true },\n          events: \n           { items: \n              { required: [Array],\n                properties: [Object],\n                additionalProperties: false,\n                id: 'pryv.core.event-read',\n                type: [Array],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true } },\n       required: [ 'events' ],\n       type: [ 'object' ],\n       '__$compiled': true,\n       '__$validated': true },\n    [Symbol(z-schema/json)]: undefined } ]\n    at Assertion.fail (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/should/cjs/should.js:258:17)\n    at Assertion.value (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/should/cjs/should.js:335:19)\n    at Object.checkSchema (test/helpers/validation.js:109:43)\n    at SocketNamespace.<anonymous> (test/sockets.test.js:164:20)\n    at SocketNamespace.onPacket (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/socket.io-client/lib/namespace.js:187:35)\n    at Socket.onPacket (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/socket.io-client/lib/socket.js:443:30)\n    at WS.Transport.onPacket (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/socket.io-client/lib/transport.js:98:17)\n    at WS.Transport.onData (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/socket.io-client/lib/transport.js:69:16)\n    at WebSocket.websocket.onmessage (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/socket.io-client/lib/transports/websocket.js:73:12)\n    at WebSocket.onMessage (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/WebSocket.js:355:18)\n    at Receiver.self._receiver.ontext (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/WebSocket.js:682:10)\n    at Receiver.finish (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/Receiver.js:391:14)\n    at Receiver.expectHandler (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/Receiver.js:378:31)\n    at Receiver.add (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/Receiver.js:87:24)\n    at Socket.firstHandler (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/WebSocket.js:663:22)\n    at addChunk (_stream_readable.js:263:12)\n    at readableAddChunk (_stream_readable.js:250:11)\n    at Socket.Readable.push (_stream_readable.js:208:10)\n    at TCP.onread (net.js:601:20)",
          "uncaught": true
        }
      },
      {
        "title": "9PPJ-must properly route method call messages for streams and return the results",
        "fullTitle": "Socket.IO calling API methods 9PPJ-must properly route method call messages for streams and return the results",
        "currentRetry": 0,
        "err": {
          "operator": "to be",
          "expected": "true",
          "message": "[ { code: 'INVALID_TYPE',\n    params: [ [ 'object' ], 'undefined' ],\n    message: 'Expected type object but found type undefined',\n    path: '#/',\n    schemaId: undefined,\n    [Symbol(z-schema/schema)]: \n     { properties: \n        { eventDeletions: \n           { items: \n              { properties: [Object],\n                additionalProperties: false,\n                required: [Array],\n                id: 'itemDeletion',\n                type: [Array],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true },\n          streams: \n           { items: \n              { '$ref': '#/definitions/stream',\n                '__$refResolved': [Object],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true } },\n       required: [ 'streams' ],\n       definitions: \n        { stream: \n           { required: \n              [ 'id',\n                'name',\n                'parentId',\n                'created',\n                'createdBy',\n                'modified',\n                'modifiedBy',\n                'children' ],\n             properties: \n              { modifiedBy: [Object],\n                modified: [Object],\n                createdBy: [Object],\n                created: [Object],\n                children: [Object],\n                trashed: [Object],\n                clientData: [Object],\n                singleActivity: [Object],\n                parentId: [Object],\n                name: [Object],\n                id: [Object] },\n             additionalProperties: false,\n             type: 'object',\n             id: 'pryv.core.stream-read',\n             '__$validated': true } },\n       type: [ 'object' ],\n       '__$compiled': true,\n       '__$validated': true },\n    [Symbol(z-schema/json)]: undefined } ]",
          "showDiff": true,
          "actual": "false",
          "negate": false,
          "assertion": {
            "obj": false,
            "anyOne": false,
            "negate": false,
            "params": {
              "operator": "to be",
              "expected": true,
              "message": "[ { code: 'INVALID_TYPE',\n    params: [ [ 'object' ], 'undefined' ],\n    message: 'Expected type object but found type undefined',\n    path: '#/',\n    schemaId: undefined,\n    [Symbol(z-schema/schema)]: \n     { properties: \n        { eventDeletions: \n           { items: \n              { properties: [Object],\n                additionalProperties: false,\n                required: [Array],\n                id: 'itemDeletion',\n                type: [Array],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true },\n          streams: \n           { items: \n              { '$ref': '#/definitions/stream',\n                '__$refResolved': [Object],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true } },\n       required: [ 'streams' ],\n       definitions: \n        { stream: \n           { required: \n              [ 'id',\n                'name',\n                'parentId',\n                'created',\n                'createdBy',\n                'modified',\n                'modifiedBy',\n                'children' ],\n             properties: \n              { modifiedBy: [Object],\n                modified: [Object],\n                createdBy: [Object],\n                created: [Object],\n                children: [Object],\n                trashed: [Object],\n                clientData: [Object],\n                singleActivity: [Object],\n                parentId: [Object],\n                name: [Object],\n                id: [Object] },\n             additionalProperties: false,\n             type: 'object',\n             id: 'pryv.core.stream-read',\n             '__$validated': true } },\n       type: [ 'object' ],\n       '__$compiled': true,\n       '__$validated': true },\n    [Symbol(z-schema/json)]: undefined } ]",
              "showDiff": true,
              "actual": false,
              "negate": false,
              "assertion": "[object Object]"
            },
            "light": false
          },
          "stack": "AssertionError: [ { code: 'INVALID_TYPE',\n    params: [ [ 'object' ], 'undefined' ],\n    message: 'Expected type object but found type undefined',\n    path: '#/',\n    schemaId: undefined,\n    [Symbol(z-schema/schema)]: \n     { properties: \n        { eventDeletions: \n           { items: \n              { properties: [Object],\n                additionalProperties: false,\n                required: [Array],\n                id: 'itemDeletion',\n                type: [Array],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true },\n          streams: \n           { items: \n              { '$ref': '#/definitions/stream',\n                '__$refResolved': [Object],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true } },\n       required: [ 'streams' ],\n       definitions: \n        { stream: \n           { required: \n              [ 'id',\n                'name',\n                'parentId',\n                'created',\n                'createdBy',\n                'modified',\n                'modifiedBy',\n                'children' ],\n             properties: \n              { modifiedBy: [Object],\n                modified: [Object],\n                createdBy: [Object],\n                created: [Object],\n                children: [Object],\n                trashed: [Object],\n                clientData: [Object],\n                singleActivity: [Object],\n                parentId: [Object],\n                name: [Object],\n                id: [Object] },\n             additionalProperties: false,\n             type: 'object',\n             id: 'pryv.core.stream-read',\n             '__$validated': true } },\n       type: [ 'object' ],\n       '__$compiled': true,\n       '__$validated': true },\n    [Symbol(z-schema/json)]: undefined } ]\n    at Assertion.fail (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/should/cjs/should.js:258:17)\n    at Assertion.value (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/should/cjs/should.js:335:19)\n    at Object.checkSchema (test/helpers/validation.js:109:43)\n    at SocketNamespace.<anonymous> (test/sockets.test.js:199:20)\n    at SocketNamespace.onPacket (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/socket.io-client/lib/namespace.js:187:35)\n    at Socket.onPacket (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/socket.io-client/lib/socket.js:443:30)\n    at WS.Transport.onPacket (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/socket.io-client/lib/transport.js:98:17)\n    at WS.Transport.onData (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/socket.io-client/lib/transport.js:69:16)\n    at WebSocket.websocket.onmessage (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/socket.io-client/lib/transports/websocket.js:73:12)\n    at WebSocket.onMessage (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/WebSocket.js:355:18)\n    at Receiver.self._receiver.ontext (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/WebSocket.js:682:10)\n    at Receiver.finish (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/Receiver.js:391:14)\n    at Receiver.expectHandler (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/Receiver.js:378:31)\n    at Receiver.add (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/Receiver.js:87:24)\n    at Socket.firstHandler (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/WebSocket.js:663:22)\n    at addChunk (_stream_readable.js:263:12)\n    at readableAddChunk (_stream_readable.js:250:11)\n    at Socket.Readable.push (_stream_readable.js:208:10)\n    at TCP.onread (net.js:601:20)",
          "uncaught": true
        }
      },
      {
        "title": "86VS-must not crash when callers omit the callback",
        "fullTitle": "Socket.IO calling API methods 86VS-must not crash when callers omit the callback",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "IS6V-must fail if the called target does not exist",
        "fullTitle": "Socket.IO calling API methods IS6V-must fail if the called target does not exist",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UUCL-must fail if the called method does not exist",
        "fullTitle": "Socket.IO calling API methods UUCL-must fail if the called method does not exist",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "LOC6-must return API errors properly, including meta",
        "fullTitle": "Socket.IO calling API methods LOC6-must return API errors properly, including meta",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SUCH-must notify other sockets for the same user about events changes",
        "fullTitle": "Socket.IO calling API methods SUCH-must notify other sockets for the same user about events changes",
        "duration": 10,
        "currentRetry": 0,
        "err": {
          "stack": "Error: the object {\n  \"error\": {\n    \"id\": \"invalid-method\"\n    \"message\": \"Invalid method id \\\"1JRI-events.create\\\"\"\n  }\n  \"meta\": {\n    \"apiVersion\": \"1.4.6-9-g7f8f131\"\n    \"serverTime\": 1557146820.254\n  }\n} was thrown, throw an Error :)\n    at tryCatcher (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/promise.js:690:18)\n    at _drainQueueStep (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/async.js:138:12)\n    at _drainQueue (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/async.js:131:9)\n    at Async._drainQueues (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/async.js:147:5)\n    at Immediate.Async.drainQueues (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/async.js:17:14)",
          "message": "the object {\n  \"error\": {\n    \"id\": \"invalid-method\"\n    \"message\": \"Invalid method id \\\"1JRI-events.create\\\"\"\n  }\n  \"meta\": {\n    \"apiVersion\": \"1.4.6-9-g7f8f131\"\n    \"serverTime\": 1557146820.254\n  }\n} was thrown, throw an Error :)"
        }
      },
      {
        "title": "1APY-must notify other sockets for the same user (only) about streams changes",
        "fullTitle": "Socket.IO calling API methods 1APY-must notify other sockets for the same user (only) about streams changes",
        "duration": 10,
        "currentRetry": 0,
        "err": {
          "stack": "Error: the object {\n  \"error\": {\n    \"id\": \"invalid-method\"\n    \"message\": \"Invalid method id \\\"JS3O-streams.create\\\"\"\n  }\n  \"meta\": {\n    \"apiVersion\": \"1.4.6-9-g7f8f131\"\n    \"serverTime\": 1557146820.322\n  }\n} was thrown, throw an Error :)\n    at tryCatcher (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/promise.js:690:18)\n    at _drainQueueStep (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/async.js:138:12)\n    at _drainQueue (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/async.js:131:9)\n    at Async._drainQueues (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/async.js:147:5)\n    at Immediate.Async.drainQueues (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/async.js:17:14)",
          "message": "the object {\n  \"error\": {\n    \"id\": \"invalid-method\"\n    \"message\": \"Invalid method id \\\"JS3O-streams.create\\\"\"\n  }\n  \"meta\": {\n    \"apiVersion\": \"1.4.6-9-g7f8f131\"\n    \"serverTime\": 1557146820.322\n  }\n} was thrown, throw an Error :)"
        }
      },
      {
        "title": "HO6J-must notify on each change",
        "fullTitle": "Socket.IO calling API methods HO6J-must notify on each change",
        "duration": 9,
        "currentRetry": 0,
        "err": {
          "stack": "Error: the object {\n  \"error\": {\n    \"id\": \"invalid-method\"\n    \"message\": \"Invalid method id \\\"ETTI-streams.create\\\"\"\n  }\n  \"meta\": {\n    \"apiVersion\": \"1.4.6-9-g7f8f131\"\n    \"serverTime\": 1557146820.386\n  }\n} was thrown, throw an Error :)\n    at <anonymous>",
          "message": "the object {\n  \"error\": {\n    \"id\": \"invalid-method\"\n    \"message\": \"Invalid method id \\\"ETTI-streams.create\\\"\"\n  }\n  \"meta\": {\n    \"apiVersion\": \"1.4.6-9-g7f8f131\"\n    \"serverTime\": 1557146820.386\n  }\n} was thrown, throw an Error :)"
        }
      },
      {
        "title": "AW6O-changes made in A notify clients of B",
        "fullTitle": "Socket.IO when spawning 2 api-server processes, A and B AW6O-changes made in A notify clients of B",
        "duration": 70,
        "currentRetry": 0,
        "err": {
          "stack": "Error: the object {\n  \"error\": {\n    \"id\": \"invalid-method\"\n    \"message\": \"Invalid method id \\\"WZ1L-events.create\\\"\"\n  }\n  \"meta\": {\n    \"apiVersion\": \"1.4.6-9-g7f8f131\"\n    \"serverTime\": 1557146820.974\n  }\n} was thrown, throw an Error :)\n    at <anonymous>",
          "message": "the object {\n  \"error\": {\n    \"id\": \"invalid-method\"\n    \"message\": \"Invalid method id \\\"WZ1L-events.create\\\"\"\n  }\n  \"meta\": {\n    \"apiVersion\": \"1.4.6-9-g7f8f131\"\n    \"serverTime\": 1557146820.974\n  }\n} was thrown, throw an Error :)"
        }
      },
      {
        "title": "LJZE-must return non-trashed streams (as a tree) by default",
        "fullTitle": "streams GET / LJZE-must return non-trashed streams (as a tree) by default",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "EBKA-must return all streams (trashed or not) when requested",
        "fullTitle": "streams GET / EBKA-must return all streams (trashed or not) when requested",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4W0O-must include stream deletions (since the given time) when requested",
        "fullTitle": "streams GET / 4W0O-must include stream deletions (since the given time) when requested",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4DHP-must include stream deletions even when the given time is 0",
        "fullTitle": "streams GET / 4DHP-must include stream deletions even when the given time is 0",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2EC7-must not keep stream deletions past a certain time (cannot test because cannot force-run Mongo's TTL cleanup task)",
        "fullTitle": "streams GET / 2EC7-must not keep stream deletions past a certain time (cannot test because cannot force-run Mongo's TTL cleanup task)",
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "I3H8-must return a correct 401 error if no access token is provided",
        "fullTitle": "streams GET / I3H8-must return a correct 401 error if no access token is provided",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "GC44-must return child streams when providing a parent stream id",
        "fullTitle": "streams GET / GC44-must return child streams when providing a parent stream id",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "C75O-must return a correct error if the parent stream is unknown",
        "fullTitle": "streams GET / C75O-must return a correct error if the parent stream is unknown",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4R74-must create a new \"root\" stream with the sent data, returning it",
        "fullTitle": "streams POST / 4R74-must create a new \"root\" stream with the sent data, returning it",
        "duration": 40,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NOF6-must return a correct error if the sent data is badly formatted",
        "fullTitle": "streams POST / NOF6-must return a correct error if the sent data is badly formatted",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "G630-must return a correct error if a stream with the same id already exists",
        "fullTitle": "streams POST / G630-must return a correct error if a stream with the same id already exists",
        "duration": 19,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "N58V-must allow reuse of deleted ids",
        "fullTitle": "streams POST / N58V-must allow reuse of deleted ids",
        "duration": 49,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2277-must accept explicit null for optional fields",
        "fullTitle": "streams POST / 2277-must accept explicit null for optional fields",
        "duration": 27,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "W9C3-must fail if a sibling stream with the same name already exists",
        "fullTitle": "streams POST / W9C3-must fail if a sibling stream with the same name already exists",
        "duration": 23,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UBGO-must return a correct error if the sent data is not valid JSON",
        "fullTitle": "streams POST / UBGO-must return a correct error if the sent data is not valid JSON",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "IPQT-must create a new child stream (with predefined id) when providing a parent stream id",
        "fullTitle": "streams POST / IPQT-must create a new child stream (with predefined id) when providing a parent stream id",
        "duration": 33,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6Z4R-must return an error if the new stream's parentId is the empty string",
        "fullTitle": "streams POST / 6Z4R-must return an error if the new stream's parentId is the empty string",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5883-must slugify the new stream's predefined id",
        "fullTitle": "streams POST / 5883-must slugify the new stream's predefined id",
        "duration": 30,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "30KQ-must return a correct error if the parent stream is unknown",
        "fullTitle": "streams POST / 30KQ-must return a correct error if the parent stream is unknown",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BWMD-must return a correct error if the given predefined stream's id is \"null\"",
        "fullTitle": "streams POST / BWMD-must return a correct error if the given predefined stream's id is \"null\"",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UTKQ-must return a correct error if the given predefined stream's id is \"*\"",
        "fullTitle": "streams POST / UTKQ-must return a correct error if the given predefined stream's id is \"*\"",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "72EI-must modify the stream with the sent data",
        "fullTitle": "streams PUT /<id> 72EI-must modify the stream with the sent data",
        "duration": 35,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DB8F-must accept explicit null for optional fields",
        "fullTitle": "streams PUT /<id> DB8F-must accept explicit null for optional fields",
        "duration": 32,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QF7E-must add/update/remove the specified client data fields without touching the others",
        "fullTitle": "streams PUT /<id> QF7E-must add/update/remove the specified client data fields without touching the others",
        "duration": 33,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0IIT-must return a correct error if the stream does not exist",
        "fullTitle": "streams PUT /<id> 0IIT-must return a correct error if the stream does not exist",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9223-must return a correct error if the sent data is badly formatted",
        "fullTitle": "streams PUT /<id> 9223-must return a correct error if the sent data is badly formatted",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2W6H-must fail if a sibling stream with the same name already exists",
        "fullTitle": "streams PUT /<id> 2W6H-must fail if a sibling stream with the same name already exists",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WIKH-must move the stream under the given parent when specified",
        "fullTitle": "streams PUT /<id> WIKH-must move the stream under the given parent when specified",
        "duration": 32,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5GBZ-must return a correct error if the new parent stream is unknown",
        "fullTitle": "streams PUT /<id> 5GBZ-must return a correct error if the new parent stream is unknown",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ORLT-must fail and throw a forbidden error in strict mode",
        "fullTitle": "streams PUT /<id> forbidden updates of protected fields ORLT-must fail and throw a forbidden error in strict mode",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HIQF-must succeed by ignoring protected fields and log a warning in non-strict mode",
        "fullTitle": "streams PUT /<id> forbidden updates of protected fields HIQF-must succeed by ignoring protected fields and log a warning in non-strict mode",
        "duration": 1149,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5CVU-must flag the specified stream as trashed",
        "fullTitle": "streams DELETE /<id> 5CVU-must flag the specified stream as trashed",
        "duration": 30,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HGMR-must delete the stream when already trashed with its descendants if there are no linked events",
        "fullTitle": "streams DELETE /<id> HGMR-must delete the stream when already trashed with its descendants if there are no linked events",
        "duration": 58,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "23YT-must return a correct error if there are linked events and the related parameter is missing",
        "fullTitle": "streams DELETE /<id> 23YT-must return a correct error if there are linked events and the related parameter is missing",
        "duration": 26,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4D0P-must reject the deletion of a root stream with mergeEventsWithParent=true",
        "fullTitle": "streams DELETE /<id> 4D0P-must reject the deletion of a root stream with mergeEventsWithParent=true",
        "duration": 24,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Z3TP-must reassign the linked events to the deleted stream's parent when specified",
        "fullTitle": "streams DELETE /<id> Z3TP-must reassign the linked events to the deleted stream's parent when specified",
        "duration": 59,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "VANV-must delete the linked events when mergeEventsWithParent is false",
        "fullTitle": "streams DELETE /<id> VANV-must delete the linked events when mergeEventsWithParent is false",
        "duration": 126,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "U4H9-must return a correct error if the item is unknown",
        "fullTitle": "streams DELETE /<id> U4H9-must return a correct error if the item is unknown",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "CRU9-must not send a welcome email if mailing is deactivated",
        "fullTitle": "system (ex-register) POST /create-user CRU9-must not send a welcome email if mailing is deactivated",
        "duration": 1263,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TZAA-must not send a welcome email if welcome mail is deactivated",
        "fullTitle": "system (ex-register) POST /create-user TZAA-must not send a welcome email if welcome mail is deactivated",
        "duration": 1366,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5V0H-must create a new user with the sent data, sending a welcome email",
        "fullTitle": "system (ex-register) POST /create-user when email sending really works 5V0H-must create a new user with the sent data, sending a welcome email",
        "currentRetry": 0,
        "err": {
          "operator": "to equal",
          "expected": "true",
          "message": "expected false to equal true",
          "details": "",
          "showDiff": true,
          "actual": "false",
          "negate": false,
          "assertion": {
            "obj": false,
            "anyOne": false,
            "negate": false,
            "params": {
              "operator": "to equal",
              "expected": true,
              "details": "",
              "showDiff": true,
              "actual": false,
              "negate": false,
              "assertion": "[object Object]"
            },
            "light": false
          },
          "stack": "AssertionError: expected false to equal true\n    at Assertion.fail (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/should/cjs/should.js:258:17)\n    at Assertion.value (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/should/cjs/should.js:335:19)\n    at /Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/components/api-server/test/system.test.js:99:29\n    at Request.callback (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/index.js:716:12)\n    at parser (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1064:12)\n    at _combinedTickCallback (internal/process/next_tick.js:139:11)\n    at process._tickCallback (internal/process/next_tick.js:181:9)",
          "_message": "expected false to equal true",
          "generatedMessage": true,
          "uncaught": true
        }
      },
      {
        "title": "6A3P-must run the process but not save anything for test username \"recla\"",
        "fullTitle": "system (ex-register) POST /create-user when it just replies OK 6A3P-must run the process but not save anything for test username \"recla\"",
        "duration": 1361,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FC4J-must support the old \"/register\" path for backwards-compatibility",
        "fullTitle": "system (ex-register) POST /create-user when it just replies OK FC4J-must support the old \"/register\" path for backwards-compatibility",
        "duration": 68,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "L4F0-must return a correct 400 error if the sent data is badly formatted",
        "fullTitle": "system (ex-register) POST /create-user when it just replies OK L4F0-must return a correct 400 error if the sent data is badly formatted",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "07CQ-must return a correct 400 error if the language property is above 5 characters",
        "fullTitle": "system (ex-register) POST /create-user when it just replies OK 07CQ-must return a correct 400 error if the language property is above 5 characters",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DSI8-must return a correct 400 error if the language property is the empty string",
        "fullTitle": "system (ex-register) POST /create-user when it just replies OK DSI8-must return a correct 400 error if the language property is the empty string",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QRIF-must return a correct 400 error if a user with the same user name already exists",
        "fullTitle": "system (ex-register) POST /create-user when it just replies OK QRIF-must return a correct 400 error if a user with the same user name already exists",
        "duration": 22,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "E3CV-must return a correct 400 error if a user with the same email address already exists",
        "fullTitle": "system (ex-register) POST /create-user when it just replies OK E3CV-must return a correct 400 error if a user with the same email address already exists",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "350H-must return a correct 404 error when authentication is invalid",
        "fullTitle": "system (ex-register) POST /create-user when it just replies OK 350H-must return a correct 404 error when authentication is invalid",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "KB8K-must return a correct error if the content type is wrong",
        "fullTitle": "system (ex-register) POST /create-user when it just replies OK KB8K-must return a correct error if the content type is wrong",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "00TL-must replace the passwordHash in the logs by (hidden) when the authentication is invalid",
        "fullTitle": "system (ex-register) POST /create-user when we log into a temporary log file 00TL-must replace the passwordHash in the logs by (hidden) when the authentication is invalid",
        "duration": 40,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ULPB-must replace the passwordHash in the logs by (hidden) when the payload is invalid (here parameters)",
        "fullTitle": "system (ex-register) POST /create-user when we log into a temporary log file ULPB-must replace the passwordHash in the logs by (hidden) when the payload is invalid (here parameters)",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DYPI-must not mention the passwordHash in the logs when none is provided",
        "fullTitle": "system (ex-register) POST /create-user when we log into a temporary log file DYPI-must not mention the passwordHash in the logs when none is provided",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "I49V-must return user information (including time of last account use)",
        "fullTitle": "system (ex-register) GET /user-info/{username} I49V-must return user information (including time of last account use)",
        "duration": 86,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "U1NE-must return a correct 404 error when authentication is invalid",
        "fullTitle": "system (ex-register) GET /user-info/{username} U1NE-must return a correct 404 error when authentication is invalid",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3YAK-should parse file uploads",
        "fullTitle": "uploads middleware hasFileUpload 3YAK-should parse file uploads",
        "duration": 21,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "GL7F-notifies internal listeners",
        "fullTitle": "Notifications #serverReady GL7F-notifies internal listeners",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZIJ1-notifies axon listeners",
        "fullTitle": "Notifications #serverReady ZIJ1-notifies axon listeners",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Y3U1-notifies internal listeners",
        "fullTitle": "Notifications #accountChanged Y3U1-notifies internal listeners",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "B5NE-notifies axon listeners",
        "fullTitle": "Notifications #accountChanged B5NE-notifies axon listeners",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WBV9-notifies internal listeners",
        "fullTitle": "Notifications #accessesChanged WBV9-notifies internal listeners",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "KAID-notifies axon listeners",
        "fullTitle": "Notifications #accessesChanged KAID-notifies axon listeners",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5AD1-notifies internal listeners",
        "fullTitle": "Notifications #followedSlicesChanged 5AD1-notifies internal listeners",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JVMH-notifies axon listeners",
        "fullTitle": "Notifications #followedSlicesChanged JVMH-notifies axon listeners",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7API-notifies internal listeners",
        "fullTitle": "Notifications #streamsChanged 7API-notifies internal listeners",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8H3E-notifies axon listeners",
        "fullTitle": "Notifications #streamsChanged 8H3E-notifies axon listeners",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "CNJA-notifies internal listeners",
        "fullTitle": "Notifications #eventsChanged CNJA-notifies internal listeners",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2PKG-notifies axon listeners",
        "fullTitle": "Notifications #eventsChanged 2PKG-notifies axon listeners",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "B671-returns true if all properties exist",
        "fullTitle": "Authentication hasProperties B671-returns true if all properties exist",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HPT9-returns false if not all properties exist",
        "fullTitle": "Authentication hasProperties HPT9-returns false if not all properties exist",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UHVT-returns false if null is given",
        "fullTitle": "Authentication hasProperties UHVT-returns false if null is given",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TBA4-returns false if a string is given",
        "fullTitle": "Authentication hasProperties TBA4-returns false if a string is given",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "038D-should behave as documented in the method",
        "fullTitle": "tryCoerceStringValues 038D-should behave as documented in the method",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "doesn't create keys in object",
        "fullTitle": "tryCoerceStringValues doesn't create keys in object",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "M2EI-should convert to array",
        "fullTitle": "tryCoerceStringValues M2EI-should convert to array",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "992Z-number conversion works",
        "fullTitle": "tryCoerceStringValues 992Z-number conversion works",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NMKY-should construct",
        "fullTitle": "NatsPublisher NMKY-should construct",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "1A22-delivers messages to \"USERNAME.sok1\"",
        "fullTitle": "NatsPublisher 1A22-delivers messages to \"USERNAME.sok1\"",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "T49T-should construct",
        "fullTitle": "NatsSubscriber T49T-should construct",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "CCDU-accepts messages from USERNAME.sok1 and dispatches them to sinks",
        "fullTitle": "NatsSubscriber when subscribed to \"foobar\" subscribe(\"USERNAME\") CCDU-accepts messages from USERNAME.sok1 and dispatches them to sinks",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "1WON-ignores messages from other users",
        "fullTitle": "NatsSubscriber when subscribed to \"foobar\" subscribe(\"USERNAME\") 1WON-ignores messages from other users",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "09SQ-should unsubscribe from NATS",
        "fullTitle": "NatsSubscriber when subscribed to \"foobar\" unsubscribe() 09SQ-should unsubscribe from NATS",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      }
    ],
    "pending": [
      {
        "title": "53QQ-must delete history data from the storage",
        "fullTitle": "Auditing Nightly task 53QQ-must delete history data from the storage",
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QFMP-must not keep event deletions past a certain time (cannot test because cannot force-run Mongo's TTL cleanup task)",
        "fullTitle": "events GET / QFMP-must not keep event deletions past a certain time (cannot test because cannot force-run Mongo's TTL cleanup task)",
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "must return an error when the core pipeline crashes because of size",
        "fullTitle": "Result toObject() must return an error when the core pipeline crashes because of size",
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2EC7-must not keep stream deletions past a certain time (cannot test because cannot force-run Mongo's TTL cleanup task)",
        "fullTitle": "streams GET / 2EC7-must not keep stream deletions past a certain time (cannot test because cannot force-run Mongo's TTL cleanup task)",
        "currentRetry": 0,
        "err": {}
      }
    ],
    "failures": [
      {
        "title": "Q82U-\"request\" must trigger an email with a reset token, store that token, then \"reset\" must reset the password to the given value",
        "fullTitle": "account /request-password-reset and /reset-password Q82U-\"request\" must trigger an email with a reset token, store that token, then \"reset\" must reset the password to the given value",
        "currentRetry": 0,
        "err": {
          "message": "expected undefined to exist",
          "stack": "AssertionError: expected undefined to exist\n    at verifyStoredRequest (test/account.test.js:389:16)\n    at /Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/async/dist/async.js:3880:24\n    at replenish (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/async/dist/async.js:1011:17)\n    at iterateeCallback (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/async/dist/async.js:995:17)\n    at /Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/async/dist/async.js:969:16\n    at /Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/async/dist/async.js:3885:13\n    at Object.exports.check (test/helpers/validation.js:68:5)\n    at /Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/components/api-server/test/account.test.js:383:22\n    at end (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/components/test-helpers/src/request.js:111:7)\n    at IndifferentRequest.Request.callback (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/index.js:716:12)\n    at parser (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1064:12)\n    at _combinedTickCallback (internal/process/next_tick.js:139:11)\n    at process._tickCallback (internal/process/next_tick.js:181:9)",
          "uncaught": true
        }
      },
      {
        "title": "EKFY-must set the SSO cookie on /login with the access token",
        "fullTitle": "auth SSO support when deprecated.auth.ssoIsWhoamiActivated is set EKFY-must set the SSO cookie on /login with the access token",
        "currentRetry": 0,
        "err": {
          "operator": "to contain 'HttpOnly'",
          "actual": [
            "sso=s%3Aj%3A%7B%22username%22%3A%22userzero%22%2C%22token%22%3A%22cjvcd007v0001qzpv50yyzrez%22%7D.1z3a1ZRcUKz3dzfDbEGgjJl2gWru21xJdtOxIEN7NyE; Max-Age=1209600; Domain=127.0.0.1; Path=/; Expires=Mon, 20 May 2019 12:46:40 GMT; HttpOnly"
          ],
          "negate": false,
          "assertion": {
            "obj": "sso=s%3Aj%3A%7B%22username%22%3A%22userzero%22%2C%22token%22%3A%22cjvcd007v0001qzpv50yyzrez%22%7D.1z3a1ZRcUKz3dzfDbEGgjJl2gWru21xJdtOxIEN7NyE; Max-Age=1209600; Domain=127.0.0.1; Path=/; Expires=Mon, 20 May 2019 12:46:40 GMT; HttpOnly",
            "anyOne": false,
            "negate": false,
            "params": {
              "operator": "to contain 'HttpOnly'",
              "actual": "sso=s%3Aj%3A%7B%22username%22%3A%22userzero%22%2C%22token%22%3A%22cjvcd007v0001qzpv50yyzrez%22%7D.1z3a1ZRcUKz3dzfDbEGgjJl2gWru21xJdtOxIEN7NyE; Max-Age=1209600; Domain=127.0.0.1; Path=/; Expires=Mon, 20 May 2019 12:46:40 GMT; HttpOnly",
              "negate": false,
              "assertion": "[object Object]"
            },
            "light": false
          },
          "message": "expected Array [\n  'sso=s%3Aj%3A%7B%22username%22%3A%22userzero%22%2C%22token%22%3A%22cjvcd007v0001qzpv50yyzrez%22%7D.1z3a1ZRcUKz3dzfDbEGgjJl2gWru21xJdtOxIEN7NyE; Max-Age=1209600; Domain=127.0.0.1; Path=/; Expires=Mon, 20 May 2019 12:46:40 GMT; HttpOnly'\n] to contain 'HttpOnly'",
          "stack": "AssertionError: expected Array [\n  'sso=s%3Aj%3A%7B%22username%22%3A%22userzero%22%2C%22token%22%3A%22cjvcd007v0001qzpv50yyzrez%22%7D.1z3a1ZRcUKz3dzfDbEGgjJl2gWru21xJdtOxIEN7NyE; Max-Age=1209600; Domain=127.0.0.1; Path=/; Expires=Mon, 20 May 2019 12:46:40 GMT; HttpOnly'\n] to contain 'HttpOnly'\n    at Assertion.fail (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/should/cjs/should.js:258:17)\n    at Assertion.value [as containEql] (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/should/cjs/should.js:335:19)\n    at /Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/components/api-server/test/auth.test.js:394:30\n    at Request.callback (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/index.js:716:12)\n    at parser (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1064:12)\n    at _combinedTickCallback (internal/process/next_tick.js:139:11)\n    at process._tickCallback (internal/process/next_tick.js:181:9)",
          "_message": "expected Array [\n  'sso=s%3Aj%3A%7B%22username%22%3A%22userzero%22%2C%22token%22%3A%22cjvcd007v0001qzpv50yyzrez%22%7D.1z3a1ZRcUKz3dzfDbEGgjJl2gWru21xJdtOxIEN7NyE; Max-Age=1209600; Domain=127.0.0.1; Path=/; Expires=Mon, 20 May 2019 12:46:40 GMT; HttpOnly'\n] to contain 'HttpOnly'",
          "generatedMessage": true,
          "uncaught": true
        }
      },
      {
        "title": "FIN1-must clear the SSO cookie on /logout",
        "fullTitle": "auth SSO support when deprecated.auth.ssoIsWhoamiActivated is set FIN1-must clear the SSO cookie on /logout",
        "duration": 0,
        "currentRetry": 0,
        "err": {
          "stack": "TypeError: Cannot read property 'token' of undefined\n    at Context.<anonymous> (test/auth.test.js:431:107)",
          "message": "Cannot read property 'token' of undefined"
        }
      },
      {
        "title": "MS07-must respond /who-am-i with an \"unauthorized\" error if no cookie is sent",
        "fullTitle": "auth SSO support when deprecated.auth.ssoIsWhoamiActivated is set MS07-must respond /who-am-i with an \"unauthorized\" error if no cookie is sent",
        "currentRetry": 0,
        "err": {
          "message": "expected 200 to equal 401",
          "showDiff": true,
          "actual": "200",
          "expected": "401",
          "stack": "AssertionError: expected 200 to equal 401\n    at /Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/components/api-server/test/auth.test.js:448:18\n    at Request.callback (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/index.js:716:12)\n    at parser (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1064:12)\n    at _combinedTickCallback (internal/process/next_tick.js:139:11)\n    at process._tickCallback (internal/process/next_tick.js:181:9)",
          "uncaught": true
        }
      },
      {
        "title": "DQQA-must properly route method call messages for events and return the results, including meta",
        "fullTitle": "Socket.IO calling API methods DQQA-must properly route method call messages for events and return the results, including meta",
        "currentRetry": 0,
        "err": {
          "operator": "to be",
          "expected": "true",
          "message": "[ { code: 'INVALID_TYPE',\n    params: [ [ 'object' ], 'undefined' ],\n    message: 'Expected type object but found type undefined',\n    path: '#/',\n    schemaId: undefined,\n    [Symbol(z-schema/schema)]: \n     { properties: \n        { eventDeletions: \n           { items: \n              { properties: [Object],\n                additionalProperties: false,\n                required: [Array],\n                id: 'itemDeletion',\n                type: [Array],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true },\n          events: \n           { items: \n              { required: [Array],\n                properties: [Object],\n                additionalProperties: false,\n                id: 'pryv.core.event-read',\n                type: [Array],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true } },\n       required: [ 'events' ],\n       type: [ 'object' ],\n       '__$compiled': true,\n       '__$validated': true },\n    [Symbol(z-schema/json)]: undefined } ]",
          "showDiff": true,
          "actual": "false",
          "negate": false,
          "assertion": {
            "obj": false,
            "anyOne": false,
            "negate": false,
            "params": {
              "operator": "to be",
              "expected": true,
              "message": "[ { code: 'INVALID_TYPE',\n    params: [ [ 'object' ], 'undefined' ],\n    message: 'Expected type object but found type undefined',\n    path: '#/',\n    schemaId: undefined,\n    [Symbol(z-schema/schema)]: \n     { properties: \n        { eventDeletions: \n           { items: \n              { properties: [Object],\n                additionalProperties: false,\n                required: [Array],\n                id: 'itemDeletion',\n                type: [Array],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true },\n          events: \n           { items: \n              { required: [Array],\n                properties: [Object],\n                additionalProperties: false,\n                id: 'pryv.core.event-read',\n                type: [Array],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true } },\n       required: [ 'events' ],\n       type: [ 'object' ],\n       '__$compiled': true,\n       '__$validated': true },\n    [Symbol(z-schema/json)]: undefined } ]",
              "showDiff": true,
              "actual": false,
              "negate": false,
              "assertion": "[object Object]"
            },
            "light": false
          },
          "stack": "AssertionError: [ { code: 'INVALID_TYPE',\n    params: [ [ 'object' ], 'undefined' ],\n    message: 'Expected type object but found type undefined',\n    path: '#/',\n    schemaId: undefined,\n    [Symbol(z-schema/schema)]: \n     { properties: \n        { eventDeletions: \n           { items: \n              { properties: [Object],\n                additionalProperties: false,\n                required: [Array],\n                id: 'itemDeletion',\n                type: [Array],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true },\n          events: \n           { items: \n              { required: [Array],\n                properties: [Object],\n                additionalProperties: false,\n                id: 'pryv.core.event-read',\n                type: [Array],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true } },\n       required: [ 'events' ],\n       type: [ 'object' ],\n       '__$compiled': true,\n       '__$validated': true },\n    [Symbol(z-schema/json)]: undefined } ]\n    at Assertion.fail (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/should/cjs/should.js:258:17)\n    at Assertion.value (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/should/cjs/should.js:335:19)\n    at Object.checkSchema (test/helpers/validation.js:109:43)\n    at SocketNamespace.<anonymous> (test/sockets.test.js:164:20)\n    at SocketNamespace.onPacket (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/socket.io-client/lib/namespace.js:187:35)\n    at Socket.onPacket (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/socket.io-client/lib/socket.js:443:30)\n    at WS.Transport.onPacket (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/socket.io-client/lib/transport.js:98:17)\n    at WS.Transport.onData (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/socket.io-client/lib/transport.js:69:16)\n    at WebSocket.websocket.onmessage (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/socket.io-client/lib/transports/websocket.js:73:12)\n    at WebSocket.onMessage (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/WebSocket.js:355:18)\n    at Receiver.self._receiver.ontext (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/WebSocket.js:682:10)\n    at Receiver.finish (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/Receiver.js:391:14)\n    at Receiver.expectHandler (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/Receiver.js:378:31)\n    at Receiver.add (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/Receiver.js:87:24)\n    at Socket.firstHandler (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/WebSocket.js:663:22)\n    at addChunk (_stream_readable.js:263:12)\n    at readableAddChunk (_stream_readable.js:250:11)\n    at Socket.Readable.push (_stream_readable.js:208:10)\n    at TCP.onread (net.js:601:20)",
          "uncaught": true
        }
      },
      {
        "title": "9PPJ-must properly route method call messages for streams and return the results",
        "fullTitle": "Socket.IO calling API methods 9PPJ-must properly route method call messages for streams and return the results",
        "currentRetry": 0,
        "err": {
          "operator": "to be",
          "expected": "true",
          "message": "[ { code: 'INVALID_TYPE',\n    params: [ [ 'object' ], 'undefined' ],\n    message: 'Expected type object but found type undefined',\n    path: '#/',\n    schemaId: undefined,\n    [Symbol(z-schema/schema)]: \n     { properties: \n        { eventDeletions: \n           { items: \n              { properties: [Object],\n                additionalProperties: false,\n                required: [Array],\n                id: 'itemDeletion',\n                type: [Array],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true },\n          streams: \n           { items: \n              { '$ref': '#/definitions/stream',\n                '__$refResolved': [Object],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true } },\n       required: [ 'streams' ],\n       definitions: \n        { stream: \n           { required: \n              [ 'id',\n                'name',\n                'parentId',\n                'created',\n                'createdBy',\n                'modified',\n                'modifiedBy',\n                'children' ],\n             properties: \n              { modifiedBy: [Object],\n                modified: [Object],\n                createdBy: [Object],\n                created: [Object],\n                children: [Object],\n                trashed: [Object],\n                clientData: [Object],\n                singleActivity: [Object],\n                parentId: [Object],\n                name: [Object],\n                id: [Object] },\n             additionalProperties: false,\n             type: 'object',\n             id: 'pryv.core.stream-read',\n             '__$validated': true } },\n       type: [ 'object' ],\n       '__$compiled': true,\n       '__$validated': true },\n    [Symbol(z-schema/json)]: undefined } ]",
          "showDiff": true,
          "actual": "false",
          "negate": false,
          "assertion": {
            "obj": false,
            "anyOne": false,
            "negate": false,
            "params": {
              "operator": "to be",
              "expected": true,
              "message": "[ { code: 'INVALID_TYPE',\n    params: [ [ 'object' ], 'undefined' ],\n    message: 'Expected type object but found type undefined',\n    path: '#/',\n    schemaId: undefined,\n    [Symbol(z-schema/schema)]: \n     { properties: \n        { eventDeletions: \n           { items: \n              { properties: [Object],\n                additionalProperties: false,\n                required: [Array],\n                id: 'itemDeletion',\n                type: [Array],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true },\n          streams: \n           { items: \n              { '$ref': '#/definitions/stream',\n                '__$refResolved': [Object],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true } },\n       required: [ 'streams' ],\n       definitions: \n        { stream: \n           { required: \n              [ 'id',\n                'name',\n                'parentId',\n                'created',\n                'createdBy',\n                'modified',\n                'modifiedBy',\n                'children' ],\n             properties: \n              { modifiedBy: [Object],\n                modified: [Object],\n                createdBy: [Object],\n                created: [Object],\n                children: [Object],\n                trashed: [Object],\n                clientData: [Object],\n                singleActivity: [Object],\n                parentId: [Object],\n                name: [Object],\n                id: [Object] },\n             additionalProperties: false,\n             type: 'object',\n             id: 'pryv.core.stream-read',\n             '__$validated': true } },\n       type: [ 'object' ],\n       '__$compiled': true,\n       '__$validated': true },\n    [Symbol(z-schema/json)]: undefined } ]",
              "showDiff": true,
              "actual": false,
              "negate": false,
              "assertion": "[object Object]"
            },
            "light": false
          },
          "stack": "AssertionError: [ { code: 'INVALID_TYPE',\n    params: [ [ 'object' ], 'undefined' ],\n    message: 'Expected type object but found type undefined',\n    path: '#/',\n    schemaId: undefined,\n    [Symbol(z-schema/schema)]: \n     { properties: \n        { eventDeletions: \n           { items: \n              { properties: [Object],\n                additionalProperties: false,\n                required: [Array],\n                id: 'itemDeletion',\n                type: [Array],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true },\n          streams: \n           { items: \n              { '$ref': '#/definitions/stream',\n                '__$refResolved': [Object],\n                '__$validated': true },\n             type: [ 'array' ],\n             '__$validated': true } },\n       required: [ 'streams' ],\n       definitions: \n        { stream: \n           { required: \n              [ 'id',\n                'name',\n                'parentId',\n                'created',\n                'createdBy',\n                'modified',\n                'modifiedBy',\n                'children' ],\n             properties: \n              { modifiedBy: [Object],\n                modified: [Object],\n                createdBy: [Object],\n                created: [Object],\n                children: [Object],\n                trashed: [Object],\n                clientData: [Object],\n                singleActivity: [Object],\n                parentId: [Object],\n                name: [Object],\n                id: [Object] },\n             additionalProperties: false,\n             type: 'object',\n             id: 'pryv.core.stream-read',\n             '__$validated': true } },\n       type: [ 'object' ],\n       '__$compiled': true,\n       '__$validated': true },\n    [Symbol(z-schema/json)]: undefined } ]\n    at Assertion.fail (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/should/cjs/should.js:258:17)\n    at Assertion.value (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/should/cjs/should.js:335:19)\n    at Object.checkSchema (test/helpers/validation.js:109:43)\n    at SocketNamespace.<anonymous> (test/sockets.test.js:199:20)\n    at SocketNamespace.onPacket (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/socket.io-client/lib/namespace.js:187:35)\n    at Socket.onPacket (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/socket.io-client/lib/socket.js:443:30)\n    at WS.Transport.onPacket (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/socket.io-client/lib/transport.js:98:17)\n    at WS.Transport.onData (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/socket.io-client/lib/transport.js:69:16)\n    at WebSocket.websocket.onmessage (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/socket.io-client/lib/transports/websocket.js:73:12)\n    at WebSocket.onMessage (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/WebSocket.js:355:18)\n    at Receiver.self._receiver.ontext (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/WebSocket.js:682:10)\n    at Receiver.finish (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/Receiver.js:391:14)\n    at Receiver.expectHandler (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/Receiver.js:378:31)\n    at Receiver.add (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/Receiver.js:87:24)\n    at Socket.firstHandler (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/ws/lib/WebSocket.js:663:22)\n    at addChunk (_stream_readable.js:263:12)\n    at readableAddChunk (_stream_readable.js:250:11)\n    at Socket.Readable.push (_stream_readable.js:208:10)\n    at TCP.onread (net.js:601:20)",
          "uncaught": true
        }
      },
      {
        "title": "SUCH-must notify other sockets for the same user about events changes",
        "fullTitle": "Socket.IO calling API methods SUCH-must notify other sockets for the same user about events changes",
        "duration": 10,
        "currentRetry": 0,
        "err": {
          "stack": "Error: the object {\n  \"error\": {\n    \"id\": \"invalid-method\"\n    \"message\": \"Invalid method id \\\"1JRI-events.create\\\"\"\n  }\n  \"meta\": {\n    \"apiVersion\": \"1.4.6-9-g7f8f131\"\n    \"serverTime\": 1557146820.254\n  }\n} was thrown, throw an Error :)\n    at tryCatcher (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/promise.js:690:18)\n    at _drainQueueStep (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/async.js:138:12)\n    at _drainQueue (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/async.js:131:9)\n    at Async._drainQueues (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/async.js:147:5)\n    at Immediate.Async.drainQueues (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/async.js:17:14)",
          "message": "the object {\n  \"error\": {\n    \"id\": \"invalid-method\"\n    \"message\": \"Invalid method id \\\"1JRI-events.create\\\"\"\n  }\n  \"meta\": {\n    \"apiVersion\": \"1.4.6-9-g7f8f131\"\n    \"serverTime\": 1557146820.254\n  }\n} was thrown, throw an Error :)"
        }
      },
      {
        "title": "1APY-must notify other sockets for the same user (only) about streams changes",
        "fullTitle": "Socket.IO calling API methods 1APY-must notify other sockets for the same user (only) about streams changes",
        "duration": 10,
        "currentRetry": 0,
        "err": {
          "stack": "Error: the object {\n  \"error\": {\n    \"id\": \"invalid-method\"\n    \"message\": \"Invalid method id \\\"JS3O-streams.create\\\"\"\n  }\n  \"meta\": {\n    \"apiVersion\": \"1.4.6-9-g7f8f131\"\n    \"serverTime\": 1557146820.322\n  }\n} was thrown, throw an Error :)\n    at tryCatcher (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/promise.js:690:18)\n    at _drainQueueStep (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/async.js:138:12)\n    at _drainQueue (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/async.js:131:9)\n    at Async._drainQueues (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/async.js:147:5)\n    at Immediate.Async.drainQueues (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/bluebird/js/release/async.js:17:14)",
          "message": "the object {\n  \"error\": {\n    \"id\": \"invalid-method\"\n    \"message\": \"Invalid method id \\\"JS3O-streams.create\\\"\"\n  }\n  \"meta\": {\n    \"apiVersion\": \"1.4.6-9-g7f8f131\"\n    \"serverTime\": 1557146820.322\n  }\n} was thrown, throw an Error :)"
        }
      },
      {
        "title": "HO6J-must notify on each change",
        "fullTitle": "Socket.IO calling API methods HO6J-must notify on each change",
        "duration": 9,
        "currentRetry": 0,
        "err": {
          "stack": "Error: the object {\n  \"error\": {\n    \"id\": \"invalid-method\"\n    \"message\": \"Invalid method id \\\"ETTI-streams.create\\\"\"\n  }\n  \"meta\": {\n    \"apiVersion\": \"1.4.6-9-g7f8f131\"\n    \"serverTime\": 1557146820.386\n  }\n} was thrown, throw an Error :)\n    at <anonymous>",
          "message": "the object {\n  \"error\": {\n    \"id\": \"invalid-method\"\n    \"message\": \"Invalid method id \\\"ETTI-streams.create\\\"\"\n  }\n  \"meta\": {\n    \"apiVersion\": \"1.4.6-9-g7f8f131\"\n    \"serverTime\": 1557146820.386\n  }\n} was thrown, throw an Error :)"
        }
      },
      {
        "title": "AW6O-changes made in A notify clients of B",
        "fullTitle": "Socket.IO when spawning 2 api-server processes, A and B AW6O-changes made in A notify clients of B",
        "duration": 70,
        "currentRetry": 0,
        "err": {
          "stack": "Error: the object {\n  \"error\": {\n    \"id\": \"invalid-method\"\n    \"message\": \"Invalid method id \\\"WZ1L-events.create\\\"\"\n  }\n  \"meta\": {\n    \"apiVersion\": \"1.4.6-9-g7f8f131\"\n    \"serverTime\": 1557146820.974\n  }\n} was thrown, throw an Error :)\n    at <anonymous>",
          "message": "the object {\n  \"error\": {\n    \"id\": \"invalid-method\"\n    \"message\": \"Invalid method id \\\"WZ1L-events.create\\\"\"\n  }\n  \"meta\": {\n    \"apiVersion\": \"1.4.6-9-g7f8f131\"\n    \"serverTime\": 1557146820.974\n  }\n} was thrown, throw an Error :)"
        }
      },
      {
        "title": "5V0H-must create a new user with the sent data, sending a welcome email",
        "fullTitle": "system (ex-register) POST /create-user when email sending really works 5V0H-must create a new user with the sent data, sending a welcome email",
        "currentRetry": 0,
        "err": {
          "operator": "to equal",
          "expected": "true",
          "message": "expected false to equal true",
          "details": "",
          "showDiff": true,
          "actual": "false",
          "negate": false,
          "assertion": {
            "obj": false,
            "anyOne": false,
            "negate": false,
            "params": {
              "operator": "to equal",
              "expected": true,
              "details": "",
              "showDiff": true,
              "actual": false,
              "negate": false,
              "assertion": "[object Object]"
            },
            "light": false
          },
          "stack": "AssertionError: expected false to equal true\n    at Assertion.fail (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/should/cjs/should.js:258:17)\n    at Assertion.value (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/should/cjs/should.js:335:19)\n    at /Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/components/api-server/test/system.test.js:99:29\n    at Request.callback (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/index.js:716:12)\n    at parser (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (/Users/iliakebets/Dev/Pryv/git/release-1.4/service-core/dist/node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1064:12)\n    at _combinedTickCallback (internal/process/next_tick.js:139:11)\n    at process._tickCallback (internal/process/next_tick.js:181:9)",
          "_message": "expected false to equal true",
          "generatedMessage": true,
          "uncaught": true
        }
      }
    ],
    "passes": [
      {
        "title": "MMH1-should contain deletions",
        "fullTitle": "access deletions when given a few existing accesses accesses.get MMH1-should contain deletions",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8LTG-contains active accesses",
        "fullTitle": "access deletions when given a few existing accesses accesses.get 8LTG-contains active accesses",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2EL2-contains deleted accesses as well",
        "fullTitle": "access deletions when given a few existing accesses accesses.get 2EL2-contains deleted accesses as well",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "A4NV-deleted access are in UTC (seconds) format",
        "fullTitle": "access deletions when given a few existing accesses accesses.get A4NV-deleted access are in UTC (seconds) format",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WGQO-should contain an access",
        "fullTitle": "access deletions when given a few existing accesses accesses.create for a valid access WGQO-should contain an access",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5BD9-should contain the set values, but no \"deleted\" field in the API response",
        "fullTitle": "access deletions when given a few existing accesses accesses.create for a valid access 5BD9-should contain the set values, but no \"deleted\" field in the API response",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "YJFH-should contain the field \"deleted:null\" in the database",
        "fullTitle": "access deletions when given a few existing accesses accesses.create for a valid access YJFH-should contain the field \"deleted:null\" in the database",
        "duration": 14,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ESAS-should return an error",
        "fullTitle": "access deletions when given a few existing accesses accesses.create for a deleted access ESAS-should return an error",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ICMY-error should say that the deleted field is forbidden upon creation",
        "fullTitle": "access deletions when given a few existing accesses accesses.create for a deleted access ICMY-error should say that the deleted field is forbidden upon creation",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "B3P6-should return an error",
        "fullTitle": "access deletions when given a few existing accesses accesses.update B3P6-should return an error",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3CVD-error should say that the deleted field is forbidden upon update",
        "fullTitle": "access deletions when given a few existing accesses accesses.update 3CVD-error should say that the deleted field is forbidden upon update",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "LB3J-succeeds",
        "fullTitle": "access expiry when given a few existing accesses accesses.get vanilla version LB3J-succeeds",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "L1GF-contains only active accesses",
        "fullTitle": "access expiry when given a few existing accesses accesses.get vanilla version L1GF-contains only active accesses",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "88Q2-succeeds",
        "fullTitle": "access expiry when given a few existing accesses accesses.get when given the includeExpired=true parameter 88Q2-succeeds",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8TPS-includes expired accesses",
        "fullTitle": "access expiry when given a few existing accesses accesses.get when given the includeExpired=true parameter 8TPS-includes expired accesses",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "T6BJ-creates an access with set expiry timestamp",
        "fullTitle": "access expiry when given a few existing accesses accesses.create when called with expireAfter>0 T6BJ-creates an access with set expiry timestamp",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6YGV-creates an expired access",
        "fullTitle": "access expiry when given a few existing accesses accesses.create when called with expireAfter=0 6YGV-creates an expired access",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "GTZN-fails",
        "fullTitle": "access expiry when given a few existing accesses accesses.create when called with expireAfter<0 GTZN-fails",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "sets the 'expires' attribute",
        "fullTitle": "access expiry when given a few existing accesses accesses.update with expireAfter>0 sets the 'expires' attribute",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "C6EK-expires the access immediately",
        "fullTitle": "access expiry when given a few existing accesses accesses.update with expireAfter=0 C6EK-expires the access immediately",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FKWN-removes expiry",
        "fullTitle": "access expiry when given a few existing accesses accesses.update with expires=null FKWN-removes expiry",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TFPD-fails",
        "fullTitle": "access expiry when given a few existing accesses accesses.update when trying to update itself with a longer expiration TFPD-fails",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7CI5-returns the matching access",
        "fullTitle": "access expiry when given a few existing accesses accesses.checkApp when the matching access is not expired 7CI5-returns the matching access",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6M7U-returns no match",
        "fullTitle": "access expiry when given a few existing accesses accesses.checkApp when the matching access is expired 6M7U-returns no match",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WJOI-fails",
        "fullTitle": "access expiry when given a few existing accesses other API accesses using an expired access WJOI-fails",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HTH3-returns a proper error message",
        "fullTitle": "access expiry when given a few existing accesses other API accesses using an expired access HTH3-returns a proper error message",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0UVW-succeeds",
        "fullTitle": "access expiry when given a few existing accesses other API accesses using a valid access 0UVW-succeeds",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QO82-succeeds",
        "fullTitle": "access client data when given a few existing accesses accesses.get QO82-succeeds",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HTGE-contains existing accesses with clientData",
        "fullTitle": "access client data when given a few existing accesses accesses.get HTGE-contains existing accesses with clientData",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "R2W2-creates an access with empty clientData",
        "fullTitle": "access client data when given a few existing accesses accesses.create when called with clientData={} R2W2-creates an access with empty clientData",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8LCQ-throws a schema error",
        "fullTitle": "access client data when given a few existing accesses accesses.create when called with clientData=null 8LCQ-throws a schema error",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0Z61-creates an access with complex clientData",
        "fullTitle": "access client data when given a few existing accesses accesses.create when called with complex clientData 0Z61-creates an access with complex clientData",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "W20A-updates previous clientData with new clientData",
        "fullTitle": "access client data when given a few existing accesses accesses.update if existing clientData was not empty W20A-updates previous clientData with new clientData",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "AVR2-keeps existing clientData untouched",
        "fullTitle": "access client data when given a few existing accesses accesses.update if clientData is not provided AVR2-keeps existing clientData untouched",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "W2AQ-sets clientData to provided clientData",
        "fullTitle": "access client data when given a few existing accesses accesses.update if existing clientData was empty W2AQ-sets clientData to provided clientData",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "PKFH-removes existing clientData",
        "fullTitle": "access client data when given a few existing accesses accesses.update if provided clientData is explicitely null PKFH-removes existing clientData",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "39KP-returns the matching access",
        "fullTitle": "access client data when given a few existing accesses accesses.checkApp when the provided clientData matches the existing clientData 39KP-returns the matching access",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RK72-returns no match",
        "fullTitle": "access client data when given a few existing accesses accesses.checkApp when the provided clientData does not match the existing clientData RK72-returns no match",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QP2B-returns no match",
        "fullTitle": "access client data when given a few existing accesses accesses.checkApp when no clientData is provided but existing access has one QP2B-returns no match",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MLYG-succeeds",
        "fullTitle": "users pool create pool user MLYG-succeeds",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WGK9-contains a generated pool user id",
        "fullTitle": "users pool create pool user WGK9-contains a generated pool user id",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2830-created a user in the database",
        "fullTitle": "users pool create pool user 2830-created a user in the database",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MD1S-created the related collections",
        "fullTitle": "users pool create pool user MD1S-created the related collections",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0YGE-created the related indexes",
        "fullTitle": "users pool create pool user 0YGE-created the related indexes",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "H8VK-must succeed",
        "fullTitle": "users pool get pool size when empty H8VK-must succeed",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "OHJQ-must return 0",
        "fullTitle": "users pool get pool size when empty OHJQ-must return 0",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "L16K-succeeds",
        "fullTitle": "users pool get pool size when adding pool users L16K-succeeds",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "YPF3-has the right number of pool users",
        "fullTitle": "users pool get pool size when adding pool users YPF3-has the right number of pool users",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SIHH-must return shared accesses whose permissions are a subset of the current one's",
        "fullTitle": "accesses (app) GET / SIHH-must return shared accesses whose permissions are a subset of the current one's",
        "duration": 66,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RN9L-must be forbidden to requests with a shared access token",
        "fullTitle": "accesses (app) GET / RN9L-must be forbidden to requests with a shared access token",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "E2PG-must create a new shared access with the sent data and return it",
        "fullTitle": "accesses (app) POST / E2PG-must create a new shared access with the sent data and return it",
        "duration": 42,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SW9W-must forbid trying to create a non-shared access",
        "fullTitle": "accesses (app) POST / SW9W-must forbid trying to create a non-shared access",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ASPN-must forbid trying to create an access with greater permissions",
        "fullTitle": "accesses (app) POST / ASPN-must forbid trying to create an access with greater permissions",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MC7E-must return a correct error if the sent data is badly formatted",
        "fullTitle": "accesses (app) POST / MC7E-must return a correct error if the sent data is badly formatted",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SPOB-must allow creation of shared accesses with an access that has superior permission on root stream (*)",
        "fullTitle": "accesses (app) POST / SPOB-must allow creation of shared accesses with an access that has superior permission on root stream (*)",
        "duration": 25,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Q0HC-must modify the access with the sent data",
        "fullTitle": "accesses (app) PUT /<token> Q0HC-must modify the access with the sent data",
        "duration": 27,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QCFM-must forbid trying to modify a non-shared access",
        "fullTitle": "accesses (app) PUT /<token> QCFM-must forbid trying to modify a non-shared access",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ECJY-must forbid trying to modify an access with greater permissions",
        "fullTitle": "accesses (app) PUT /<token> ECJY-must forbid trying to modify an access with greater permissions",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MCGU-must return a correct error if the access does not exist",
        "fullTitle": "accesses (app) PUT /<token> MCGU-must return a correct error if the access does not exist",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NAGF-must return a correct error if the sent data is badly formatted",
        "fullTitle": "accesses (app) PUT /<token> NAGF-must return a correct error if the sent data is badly formatted",
        "duration": 16,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SO5Y-must return a correct error if an access with the same name already exists",
        "fullTitle": "accesses (app) PUT /<token> SO5Y-must return a correct error if an access with the same name already exists",
        "duration": 13,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FISP-must delete the shared access",
        "fullTitle": "accesses (app) DELETE /<token> FISP-must delete the shared access",
        "duration": 41,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "K1AC-must forbid trying to delete a non-shared access",
        "fullTitle": "accesses (app) DELETE /<token> K1AC-must forbid trying to delete a non-shared access",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8YJS-must forbid trying to delete an access with greater permissions",
        "fullTitle": "accesses (app) DELETE /<token> 8YJS-must forbid trying to delete an access with greater permissions",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MG1Q-must return a correct error if the access does not exist",
        "fullTitle": "accesses (app) DELETE /<token> MG1Q-must return a correct error if the access does not exist",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DV3U-must return all accesses (including personal ones)",
        "fullTitle": "accesses (personal) GET / DV3U-must return all accesses (including personal ones)",
        "duration": 15,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "12SU-must create a new shared access with the sent data, returning it",
        "fullTitle": "accesses (personal) POST / 12SU-must create a new shared access with the sent data, returning it",
        "duration": 33,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DD60-must create a new app access with the sent data, creating/restoring requested streams",
        "fullTitle": "accesses (personal) POST / DD60-must create a new app access with the sent data, creating/restoring requested streams",
        "duration": 67,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "79QY-must accept two app accesses with the same name (app ids) but different device names",
        "fullTitle": "accesses (personal) POST / 79QY-must accept two app accesses with the same name (app ids) but different device names",
        "duration": 36,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "50AM-must ignore erroneous requests to create new streams",
        "fullTitle": "accesses (personal) POST / 50AM-must ignore erroneous requests to create new streams",
        "duration": 32,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6BL2-must fail if a stream similar to that requested for creation already exists",
        "fullTitle": "accesses (personal) POST / 6BL2-must fail if a stream similar to that requested for creation already exists",
        "duration": 22,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UFE7-must refuse to create new personal accesses (obtained via login only)",
        "fullTitle": "accesses (personal) POST / UFE7-must refuse to create new personal accesses (obtained via login only)",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "YTMG-must slugify the new access' predefined token",
        "fullTitle": "accesses (personal) POST / YTMG-must slugify the new access' predefined token",
        "duration": 30,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3F4D-must return an error if the sent data is badly formatted",
        "fullTitle": "accesses (personal) POST / 3F4D-must return an error if the sent data is badly formatted",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "1ELC-must refuse empty `defaultName` values for streams",
        "fullTitle": "accesses (personal) POST / 1ELC-must refuse empty `defaultName` values for streams",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZZSC-must return an error if an access with the same token already exists",
        "fullTitle": "accesses (personal) POST / ZZSC-must return an error if an access with the same token already exists",
        "duration": 16,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MSFK-must return an error if an access with the same name already exists",
        "fullTitle": "accesses (personal) POST / MSFK-must return an error if an access with the same name already exists",
        "duration": 15,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9ICB-must return an error if an \"app\" access with the same name (app id) and device name already exists",
        "fullTitle": "accesses (personal) POST / 9ICB-must return an error if an \"app\" access with the same name (app id) and device name already exists",
        "duration": 17,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WRSP-must return an error if the device name is set for a non-app access",
        "fullTitle": "accesses (personal) POST / WRSP-must return an error if the device name is set for a non-app access",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "IHSE-must return an error if the given predefined access's token is a reserved word",
        "fullTitle": "accesses (personal) POST / IHSE-must return an error if the given predefined access's token is a reserved word",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6TU5-must modify the shared access with the sent data",
        "fullTitle": "accesses (personal) PUT /<token> 6TU5-must modify the shared access with the sent data",
        "duration": 28,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "1O8N-must modify the personal access with the specified data",
        "fullTitle": "accesses (personal) PUT /<token> 1O8N-must modify the personal access with the specified data",
        "duration": 35,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7S5L-must return an error if the access does not exist",
        "fullTitle": "accesses (personal) PUT /<token> 7S5L-must return an error if the access does not exist",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RUMK-must return an error if the sent data is badly formatted",
        "fullTitle": "accesses (personal) PUT /<token> RUMK-must return an error if the sent data is badly formatted",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "M8FO-must return an error if an access with the same name and type already exists",
        "fullTitle": "accesses (personal) PUT /<token> M8FO-must return an error if an access with the same name and type already exists",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "N41N-must prevent update of protected fields and throw a forbidden error in strict mode",
        "fullTitle": "accesses (personal) PUT /<token> forbidden updates of protected fields N41N-must prevent update of protected fields and throw a forbidden error in strict mode",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "PKRK-must prevent update of protected fields and log a warning in non-strict mode",
        "fullTitle": "accesses (personal) PUT /<token> forbidden updates of protected fields PKRK-must prevent update of protected fields and log a warning in non-strict mode",
        "duration": 1144,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "15VH-must forbid to elevate a read level into a manage level using a contribute access ",
        "fullTitle": "accesses (personal) PUT /<token> forbidden updates of protected fields 15VH-must forbid to elevate a read level into a manage level using a contribute access ",
        "duration": 58,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7K7Q-must forbid to extend the permission streamIds beyond the authorized context ",
        "fullTitle": "accesses (personal) PUT /<token> forbidden updates of protected fields 7K7Q-must forbid to extend the permission streamIds beyond the authorized context ",
        "duration": 56,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DP0O-must delete the shared access",
        "fullTitle": "accesses (personal) DELETE /<token> DP0O-must delete the shared access",
        "duration": 39,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "A9OM-must delete the personal access",
        "fullTitle": "accesses (personal) DELETE /<token> A9OM-must delete the personal access",
        "duration": 27,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FG96-must return an error if the access does not exist",
        "fullTitle": "accesses (personal) DELETE /<token> FG96-must return an error if the access does not exist",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8VWR-must return the adjusted permissions structure if no access exists",
        "fullTitle": "accesses (personal) POST /check-app 8VWR-must return the adjusted permissions structure if no access exists",
        "duration": 15,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "F2K1-must accept requested permissions with \"*\" for \"all streams\"",
        "fullTitle": "accesses (personal) POST /check-app F2K1-must accept requested permissions with \"*\" for \"all streams\"",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "CF5M-must return the existing app access if matching",
        "fullTitle": "accesses (personal) POST /check-app CF5M-must return the existing app access if matching",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3AL2-must also return the token of the existing mismatching access if any",
        "fullTitle": "accesses (personal) POST /check-app 3AL2-must also return the token of the existing mismatching access if any",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "B9T5-must propose fixes to duplicate ids of streams and signal an error when appropriate",
        "fullTitle": "accesses (personal) POST /check-app B9T5-must propose fixes to duplicate ids of streams and signal an error when appropriate",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZK2S-must return an error if the sent data is badly formatted",
        "fullTitle": "accesses (personal) POST /check-app ZK2S-must return an error if the sent data is badly formatted",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7FUV-must be forbidden to non-personal accesses",
        "fullTitle": "accesses (personal) POST /check-app 7FUV-must be forbidden to non-personal accesses",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "KK12-must return the user's account details",
        "fullTitle": "account GET / KK12-must return the user's account details",
        "duration": 33,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RMJ2-must be forbidden to non-personal accesses",
        "fullTitle": "account GET / RMJ2-must be forbidden to non-personal accesses",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5ZLR-must modify account details with the sent data, notifying register if e-mail changed",
        "fullTitle": "account PUT / 5ZLR-must modify account details with the sent data, notifying register if e-mail changed",
        "duration": 1356,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3QI6-must return a correct error if the sent data is badly formatted",
        "fullTitle": "account PUT / 3QI6-must return a correct error if the sent data is badly formatted",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "GGCV-must be forbidden to non-personal accesses",
        "fullTitle": "account PUT / GGCV-must be forbidden to non-personal accesses",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "A565-must properly compute used storage size for a given user when called",
        "fullTitle": "account storage space monitoring A565-must properly compute used storage size for a given user when called",
        "duration": 124,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "658C-must properly compute storage size for all users in nightly script",
        "fullTitle": "account storage space monitoring 658C-must properly compute storage size for all users in nightly script",
        "duration": 1191,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "S9Q5-must be approximately updated (diff) when adding an attached file",
        "fullTitle": "account storage space monitoring S9Q5-must be approximately updated (diff) when adding an attached file",
        "duration": 55,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5LFQ-must be approximately updated (diff) when deleting an attached file",
        "fullTitle": "account storage space monitoring 5LFQ-must be approximately updated (diff) when deleting an attached file",
        "duration": 57,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RUR7-must be approximately updated (diff) when deleting an event",
        "fullTitle": "account storage space monitoring RUR7-must be approximately updated (diff) when deleting an event",
        "duration": 86,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9484-must change the password to the given value",
        "fullTitle": "account /change-password 9484-must change the password to the given value",
        "duration": 299,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "O7L2-must return an error if the given old password does not match",
        "fullTitle": "account /change-password O7L2-must return an error if the given old password does not match",
        "duration": 89,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "J26U-must return a correct error if the sent data is badly formatted",
        "fullTitle": "account /change-password J26U-must return a correct error if the sent data is badly formatted",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JL3U-must be forbidden to non-personal accesses",
        "fullTitle": "account /change-password JL3U-must be forbidden to non-personal accesses",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FJKK-must not trigger a reset email if mailing is deactivated",
        "fullTitle": "account /request-password-reset and /reset-password FJKK-must not trigger a reset email if mailing is deactivated",
        "duration": 1255,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HUWL-must not trigger a reset email if reset mail is deactivated",
        "fullTitle": "account /request-password-reset and /reset-password HUWL-must not trigger a reset email if reset mail is deactivated",
        "duration": 1341,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "POI6-must not be possible to use a reset token to illegally change password of another user",
        "fullTitle": "account /request-password-reset and /reset-password POI6-must not be possible to use a reset token to illegally change password of another user",
        "duration": 27,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "IIE3-\"request\" must return an error if the requesting app is not trusted",
        "fullTitle": "account /request-password-reset and /reset-password IIE3-\"request\" must return an error if the requesting app is not trusted",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WYA7-\"request\" must return an error if sent data is badly formatted",
        "fullTitle": "account /request-password-reset and /reset-password WYA7-\"request\" must return an error if sent data is badly formatted",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "E73T-\"reset\" must return an error if the reset token is invalid/expired",
        "fullTitle": "account /request-password-reset and /reset-password E73T-\"reset\" must return an error if the reset token is invalid/expired",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2DNL-\"reset\" must return an error if the requesting app is not trusted",
        "fullTitle": "account /request-password-reset and /reset-password 2DNL-\"reset\" must return an error if the requesting app is not trusted",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7CT2-\"reset\" must return an error if sent data is badly formatted",
        "fullTitle": "account /request-password-reset and /reset-password 7CT2-\"reset\" must return an error if sent data is badly formatted",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "LOWP-must not return history when calling events.get",
        "fullTitle": "Auditing Events LOWP-must not return history when calling events.get",
        "duration": 47,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "OKAZ-must delete the event's history when deleting it with deletionMode=keep-nothing",
        "fullTitle": "Auditing Events deletionMode OKAZ-must delete the event's history when deleting it with deletionMode=keep-nothing",
        "duration": 1190,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BH4Z-must minimize the event's history when deleting it with deletionMode=keep-authors",
        "fullTitle": "Auditing Events deletionMode BH4Z-must minimize the event's history when deleting it with deletionMode=keep-authors",
        "duration": 1173,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HGOV-must not modify the event's history when deleting it with deletionMode=keep-everything",
        "fullTitle": "Auditing Events deletionMode HGOV-must not modify the event's history when deleting it with deletionMode=keep-everything",
        "duration": 1142,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "OD57-must not return an event's history when calling getOne with includeHistory flag off",
        "fullTitle": "Auditing Events getOne OD57-must not return an event's history when calling getOne with includeHistory flag off",
        "duration": 13,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7M01-must return an event's history when calling getOne with includeHistory flag on",
        "fullTitle": "Auditing Events getOne 7M01-must return an event's history when calling getOne with includeHistory flag on",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZIUC-must not generate history when updating an event",
        "fullTitle": "Auditing Events forceKeepHistory is OFF ZIUC-must not generate history when updating an event",
        "duration": 124,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8C1P-must not generate history of the running event that was stopped because of the start call on another event",
        "fullTitle": "Auditing Events forceKeepHistory is OFF 8C1P-must not generate history of the running event that was stopped because of the start call on another event",
        "duration": 54,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "M2MF-must not generate history when no event was stopped in the procedure of the start call on another event",
        "fullTitle": "Auditing Events forceKeepHistory is OFF M2MF-must not generate history when no event was stopped in the procedure of the start call on another event",
        "duration": 40,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "CI18-must not generate history when calling stop on a running event",
        "fullTitle": "Auditing Events forceKeepHistory is OFF CI18-must not generate history when calling stop on a running event",
        "duration": 45,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5IDV-must generate history when updating an event",
        "fullTitle": "Auditing Events forceKeepHistory is ON 5IDV-must generate history when updating an event",
        "duration": 190,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "1Q30-must generate history of the running event that was stopped because of the start call on another event",
        "fullTitle": "Auditing Events forceKeepHistory is ON 1Q30-must generate history of the running event that was stopped because of the start call on another event",
        "duration": 68,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "LFAP-must not generate history when no event was stopped in the procedure of the start call on another event",
        "fullTitle": "Auditing Events forceKeepHistory is ON LFAP-must not generate history when no event was stopped in the procedure of the start call on another event",
        "duration": 40,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "S5R8-must generate history when calling stop on a running event",
        "fullTitle": "Auditing Events forceKeepHistory is ON S5R8-must generate history when calling stop on a running event",
        "duration": 54,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9QUV-must generate events' history when their stream is deleted with  mergeEventsWithParents=true since their streamId is modified",
        "fullTitle": "Auditing Streams 9QUV-must generate events' history when their stream is deleted with  mergeEventsWithParents=true since their streamId is modified",
        "duration": 141,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HLL1-must delete the events' history when their stream is deleted with  mergeEventsWithParents=false and deletionMode='keep-nothing'",
        "fullTitle": "Auditing Streams HLL1-must delete the events' history when their stream is deleted with  mergeEventsWithParents=false and deletionMode='keep-nothing'",
        "duration": 1287,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "04SG-must keep the events' minimal history when their stream is deleted with  mergeEventsWithParents=false and deletionMode='keep-authors'",
        "fullTitle": "Auditing Streams 04SG-must keep the events' minimal history when their stream is deleted with  mergeEventsWithParents=false and deletionMode='keep-authors'",
        "duration": 1193,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "D7K8-must not delete the events' history when their stream is deleted with  mergeEventsWithParents=false and deletionMode='keep-everything'",
        "fullTitle": "Auditing Streams D7K8-must not delete the events' history when their stream is deleted with  mergeEventsWithParents=false and deletionMode='keep-everything'",
        "duration": 1170,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JN84-must authenticate the given credentials, open a session and return the access token",
        "fullTitle": "auth /login JN84-must authenticate the given credentials, open a session and return the access token",
        "duration": 157,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "VIE9-must reuse the current session if already open",
        "fullTitle": "auth /login VIE9-must reuse the current session if already open",
        "duration": 210,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6TFI-must accept \"wildcarded\" app ids and origins",
        "fullTitle": "auth /login 6TFI-must accept \"wildcarded\" app ids and origins",
        "duration": 106,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "47H4-must accept \"no origin\" (i.e. not a CORS request) if authorized",
        "fullTitle": "auth /login 47H4-must accept \"no origin\" (i.e. not a CORS request) if authorized",
        "duration": 120,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "IO2V-must also accept \"referer\" in place of \"origin\" (e.g. some browsers do not provide \"origin\")",
        "fullTitle": "auth /login IO2V-must also accept \"referer\" in place of \"origin\" (e.g. some browsers do not provide \"origin\")",
        "duration": 101,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6OT4-must also accept \"referer\" in place of \"origin\" (e.g. some browsers do not provide \"origin\")",
        "fullTitle": "auth /login 6OT4-must also accept \"referer\" in place of \"origin\" (e.g. some browsers do not provide \"origin\")",
        "duration": 103,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9NOB-must not be case-sensitive for the username",
        "fullTitle": "auth /login 9NOB-must not be case-sensitive for the username",
        "duration": 102,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "74QM-must return a correct error when the local credentials are missing or invalid",
        "fullTitle": "auth /login 74QM-must return a correct error when the local credentials are missing or invalid",
        "duration": 83,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3IRI-must return a correct error if the app id is missing or untrusted",
        "fullTitle": "auth /login 3IRI-must return a correct error if the app id is missing or untrusted",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MFTJ-must return a correct error if the origin is missing or does not match the app id",
        "fullTitle": "auth /login MFTJ-must return a correct error if the origin is missing or does not match the app id",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FE9I-must support concurrent login request",
        "fullTitle": "auth /login FE9I-must support concurrent login request",
        "duration": 125,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JAVF-must not leak _private object from Result",
        "fullTitle": "auth /login JAVF-must not leak _private object from Result",
        "duration": 101,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WAJ8-must replace the password in the logs by (hidden) when an error occurs",
        "fullTitle": "auth /login when we log into a temporary log file WAJ8-must replace the password in the logs by (hidden) when an error occurs",
        "duration": 137,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9BW0-must not mention the password in the logs when none is provided",
        "fullTitle": "auth /login when we log into a temporary log file 9BW0-must not mention the password in the logs when none is provided",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8LZC-must terminate the access session and fail to logout a second time (session already expired)",
        "fullTitle": "auth /logout 8LZC-must terminate the access session and fail to logout a second time (session already expired)",
        "duration": 230,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FY6R-(or any request) must alternatively accept the access token in the query string",
        "fullTitle": "auth /logout FY6R-(or any request) must alternatively accept the access token in the query string",
        "duration": 154,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FCSL-GET /who-am-i must return a 404 as it has been deprecated",
        "fullTitle": "auth SSO support FCSL-GET /who-am-i must return a 404 as it has been deprecated",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "KGV1-must answer /who-am-i with username and session details if session open",
        "fullTitle": "auth SSO support when deprecated.auth.ssoIsWhoamiActivated is set KGV1-must answer /who-am-i with username and session details if session open",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5K9P-must return the last 20 non-trashed events (sorted descending) by default",
        "fullTitle": "events GET / 5K9P-must return the last 20 non-trashed events (sorted descending) by default",
        "duration": 100,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2VRD-must only return events for the given streams (incl. sub-streams) when set",
        "fullTitle": "events GET / 2VRD-must only return events for the given streams (incl. sub-streams) when set",
        "duration": 16,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SUE7-must return an error if some of the given streams do not exist",
        "fullTitle": "events GET / SUE7-must return an error if some of the given streams do not exist",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "E24N-must only return events with the given tag when set",
        "fullTitle": "events GET / E24N-must only return events with the given tag when set",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7Z4W-must only return events with any of the given tags when set",
        "fullTitle": "events GET / 7Z4W-must only return events with any of the given tags when set",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "S1AF-must only return events of any of the given types when set",
        "fullTitle": "events GET / S1AF-must only return events of any of the given types when set",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZE0Y-must (unofficially) support a wildcard for event types",
        "fullTitle": "events GET / ZE0Y-must (unofficially) support a wildcard for event types",
        "duration": 15,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0TPP-must only return events in the given time period sorted ascending when set",
        "fullTitle": "events GET / 0TPP-must only return events in the given time period sorted ascending when set",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SMH2-must take into account fromTime and toTime even if set to 0",
        "fullTitle": "events GET / SMH2-must take into account fromTime and toTime even if set to 0",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "OZRH-must take into account modifiedSince even if set to 0",
        "fullTitle": "events GET / OZRH-must take into account modifiedSince even if set to 0",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7R98-must properly exclude period events completed before the given period",
        "fullTitle": "events GET / 7R98-must properly exclude period events completed before the given period",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6I0H-must return ongoing events started before the given time period",
        "fullTitle": "events GET / 6I0H-must return ongoing events started before the given time period",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3RO1-must only return events in the given paging range when set",
        "fullTitle": "events GET / 3RO1-must only return events in the given paging range when set",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9HDG-must return only trashed events when requested",
        "fullTitle": "events GET / 9HDG-must return only trashed events when requested",
        "duration": 21,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DK1G-must return all events (trashed or not) when requested",
        "fullTitle": "events GET / DK1G-must return all events (trashed or not) when requested",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SSNE-must return only events modified since the given time when requested",
        "fullTitle": "events GET / SSNE-must return only events modified since the given time when requested",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "IHBE-must include event deletions (since that time) when requested",
        "fullTitle": "events GET / IHBE-must include event deletions (since that time) when requested",
        "duration": 13,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SGTU-must only return running period event(s) when requested",
        "fullTitle": "events GET / SGTU-must only return running period event(s) when requested",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TCYF-must return an error if no access token is provided",
        "fullTitle": "events GET / TCYF-must return an error if no access token is provided",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3R0I-must return the attached file with the correct headers",
        "fullTitle": "events GET /<event id>/<file id> 3R0I-must return the attached file with the correct headers",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TP1E-must accept a secure read token in the query string instead of the `\"Authorization\" header",
        "fullTitle": "events GET /<event id>/<file id> TP1E-must accept a secure read token in the query string instead of the `\"Authorization\" header",
        "duration": 18,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "H1OS-must allow a filename path suffix after the file id",
        "fullTitle": "events GET /<event id>/<file id> H1OS-must allow a filename path suffix after the file id",
        "duration": 17,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3O6C-must allow any filename (including special characters)",
        "fullTitle": "events GET /<event id>/<file id> 3O6C-must allow any filename (including special characters)",
        "duration": 17,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RC93-must refuse an invalid file read token",
        "fullTitle": "events GET /<event id>/<file id> RC93-must refuse an invalid file read token",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QQPC-must refuse auth via the regular \"auth\" query string parameter",
        "fullTitle": "events GET /<event id>/<file id> QQPC-must refuse auth via the regular \"auth\" query string parameter",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Y5Q5-must return a proper error if trying to get an unknown attachment",
        "fullTitle": "events GET /<event id>/<file id> Y5Q5-must return a proper error if trying to get an unknown attachment",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZIN3-must create an event with the sent data, returning it",
        "fullTitle": "events POST / ZIN3-must create an event with the sent data, returning it",
        "duration": 41,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "92ST-must set the event's time to \"now\" if missing",
        "fullTitle": "events POST / 92ST-must set the event's time to \"now\" if missing",
        "duration": 34,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BSWJ-must accept explicit null for optional fields",
        "fullTitle": "events POST / BSWJ-must accept explicit null for optional fields",
        "duration": 28,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Q2N2-must refuse events with no stream id",
        "fullTitle": "events POST / Q2N2-must refuse events with no stream id",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "AD23-must return a correct error if an event with the same id already exists",
        "fullTitle": "events POST / AD23-must return a correct error if an event with the same id already exists",
        "duration": 18,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "CIJL-must not allow reuse of deleted ids (unlike streams)",
        "fullTitle": "events POST / CIJL-must not allow reuse of deleted ids (unlike streams)",
        "duration": 26,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HTDW-must only allow ids that are formatted like cuids",
        "fullTitle": "events POST / HTDW-must only allow ids that are formatted like cuids",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8VUB-must reject tags that are too long",
        "fullTitle": "events POST / 8VUB-must reject tags that are too long",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "CO58-must fix the tags to an empty array if not set",
        "fullTitle": "events POST / CO58-must fix the tags to an empty array if not set",
        "duration": 35,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9SIM-must try casting string event content to number if appropriate",
        "fullTitle": "events POST / 9SIM-must try casting string event content to number if appropriate",
        "duration": 33,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "A3RJ-must not stop the running period event if the new event is a mark event (single activity)",
        "fullTitle": "events POST / A3RJ-must not stop the running period event if the new event is a mark event (single activity)",
        "duration": 37,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NYSQ-must not stop the running period event if the stream allows overlapping",
        "fullTitle": "events POST / NYSQ-must not stop the running period event if the stream allows overlapping",
        "duration": 38,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "393N-must validate the event's content if its type is known",
        "fullTitle": "events POST / 393N-must validate the event's content if its type is known",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "G3CY-must not fail when validating the content if passing a string instead of an object",
        "fullTitle": "events POST / G3CY-must not fail when validating the content if passing a string instead of an object",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FY8A-must return an error if the sent data is badly formatted",
        "fullTitle": "events POST / FY8A-must return an error if the sent data is badly formatted",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "AKLS-must return an error if the associated stream is unknown",
        "fullTitle": "events POST / AKLS-must return an error if the associated stream is unknown",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "IF20-must return an error if the event's period overlaps existing periods (single activity)",
        "fullTitle": "events POST / IF20-must return an error if the event's period overlaps existing periods (single activity)",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "C5VJ-must allow the event's period overlapping existing periods when the stream allows it",
        "fullTitle": "events POST / C5VJ-must allow the event's period overlapping existing periods when the stream allows it",
        "duration": 38,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "1KW4-must return an error if the assigned stream is trashed",
        "fullTitle": "events POST / 1KW4-must return an error if the assigned stream is trashed",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FW03-must not fail (500) when sending an array instead of an object",
        "fullTitle": "events POST / FW03-must not fail (500) when sending an array instead of an object",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "KVUN-must create a running period event stopping any previously running event (single activity)",
        "fullTitle": "events POST /start KVUN-must create a running period event stopping any previously running event (single activity)",
        "duration": 54,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MCBW-must return an error if a period event already exists later (single activity)",
        "fullTitle": "events POST /start MCBW-must return an error if a period event already exists later (single activity)",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "21A4-must allow starting an event before an existing period when the stream allows overlapping",
        "fullTitle": "events POST /start 21A4-must allow starting an event before an existing period when the stream allows overlapping",
        "duration": 31,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JEPP-must create a new event with the uploaded files",
        "fullTitle": "events POST / (multipart content) JEPP-must create a new event with the uploaded files",
        "duration": 97,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ABQF-must properly handle part names containing special chars (e.g. \".\", \"$\")",
        "fullTitle": "events POST / (multipart content) ABQF-must properly handle part names containing special chars (e.g. \".\", \"$\")",
        "duration": 76,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TRM2-must return an error if the non-file content part is not JSON",
        "fullTitle": "events POST / (multipart content) TRM2-must return an error if the non-file content part is not JSON",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0VE8-must return an error if there is more than one non-file content part",
        "fullTitle": "events POST / (multipart content) 0VE8-must return an error if there is more than one non-file content part",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MSZM-must add the uploaded files to the event as attachments",
        "fullTitle": "events POST /<event id> (multipart content) MSZM-must add the uploaded files to the event as attachments",
        "duration": 69,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "G1KN-must add the uploaded files to the event without replacing existing attachments",
        "fullTitle": "events POST /<event id> (multipart content) G1KN-must add the uploaded files to the event without replacing existing attachments",
        "duration": 57,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "18ZN-allows access at level=read",
        "fullTitle": "events GET /<id> 18ZN-allows access at level=read",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0UCG-denies access without authorization",
        "fullTitle": "events GET /<id> 0UCG-denies access without authorization",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JW9T-must modify the event with the sent data",
        "fullTitle": "events PUT /<id> JW9T-must modify the event with the sent data",
        "duration": 39,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5MS6-must add/update/remove the specified client data fields without touching the others",
        "fullTitle": "events PUT /<id> 5MS6-must add/update/remove the specified client data fields without touching the others",
        "duration": 38,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SSPW-must return the id of the stopped previously running event if any (single activity)",
        "fullTitle": "events PUT /<id> SSPW-must return the id of the stopped previously running event if any (single activity)",
        "duration": 45,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SEE6-must accept explicit null for optional fields",
        "fullTitle": "events PUT /<id> SEE6-must accept explicit null for optional fields",
        "duration": 47,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4PIR-must validate the event's content if its type is known",
        "fullTitle": "events PUT /<id> 4PIR-must validate the event's content if its type is known",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FQDI-must return an error if the event does not exist",
        "fullTitle": "events PUT /<id> FQDI-must return an error if the event does not exist",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "YPBZ-must return an error if the sent data is badly formatted",
        "fullTitle": "events PUT /<id> YPBZ-must return an error if the sent data is badly formatted",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "PMYO-must return an error if the associated stream is unknown",
        "fullTitle": "events PUT /<id> PMYO-must return an error if the associated stream is unknown",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "G2Z3-must return an error if moving a running period event before another existing period event (single activity)",
        "fullTitle": "events PUT /<id> G2Z3-must return an error if moving a running period event before another existing period event (single activity)",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RHRV-must return an error if the event's new period overlaps other events's (single activity)",
        "fullTitle": "events PUT /<id> RHRV-must return an error if the event's new period overlaps other events's (single activity)",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "YJNJ-must reject tags that are too long",
        "fullTitle": "events PUT /<id> YJNJ-must reject tags that are too long",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "YKLK-must prevent update of protected fields and throw a forbidden error in strict mode",
        "fullTitle": "events PUT /<id> forbidden updates of protected fields YKLK-must prevent update of protected fields and throw a forbidden error in strict mode",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5CG1-must prevent update of protected fields and log a warning in non-strict mode",
        "fullTitle": "events PUT /<id> forbidden updates of protected fields 5CG1-must prevent update of protected fields and log a warning in non-strict mode",
        "duration": 1150,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8WTB-must stop the previously running period event, returning its id (single activity)",
        "fullTitle": "events POST /stop 8WTB-must stop the previously running period event, returning its id (single activity)",
        "duration": 39,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QFF4-must stop the last running event of the given type when specified",
        "fullTitle": "events POST /stop QFF4-must stop the last running event of the given type when specified",
        "duration": 70,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "OR7I-must accept an `id` param to specify the event to stop",
        "fullTitle": "events POST /stop OR7I-must accept an `id` param to specify the event to stop",
        "duration": 53,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "M12G-must return an error if the specified event does not exist",
        "fullTitle": "events POST /stop M12G-must return an error if the specified event does not exist",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5B5E-must return an error if the specified event is not running",
        "fullTitle": "events POST /stop 5B5E-must return an error if the specified event is not running",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ORQD-must return an error if no event is specified and the stream allows overlapping",
        "fullTitle": "events POST /stop ORQD-must return an error if no event is specified and the stream allows overlapping",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "E13L-must return an error if neither stream nor event is specified",
        "fullTitle": "events POST /stop E13L-must return an error if neither stream nor event is specified",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7PQP-must delete the attachment (reference in event + file)",
        "fullTitle": "events DELETE /<event id>/<file id> 7PQP-must delete the attachment (reference in event + file)",
        "duration": 51,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "19AV-must return an error if not existing",
        "fullTitle": "events DELETE /<event id>/<file id> 19AV-must return an error if not existing",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6LNU-must flag the event as trashed",
        "fullTitle": "events DELETE /<id> 6LNU-must flag the event as trashed",
        "duration": 33,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0PS1-must delete the event when already trashed including all its attachments",
        "fullTitle": "events DELETE /<id> 0PS1-must delete the event when already trashed including all its attachments",
        "duration": 71,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "T5C3-must return all followed slices (ordered by user name, then access token)",
        "fullTitle": "followed slices GET / T5C3-must return all followed slices (ordered by user name, then access token)",
        "duration": 31,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "1YQR-must be forbidden to non-personal accesses",
        "fullTitle": "followed slices GET / 1YQR-must be forbidden to non-personal accesses",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DZHQ-must create a new followed slice with the sent data, returning it",
        "fullTitle": "followed slices POST / DZHQ-must create a new followed slice with the sent data, returning it",
        "duration": 36,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "I5DC-must return a correct error if the sent data is badly formatted",
        "fullTitle": "followed slices POST / I5DC-must return a correct error if the sent data is badly formatted",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3K7G-must return a correct error if the same followed slice (url and token) already exists",
        "fullTitle": "followed slices POST / 3K7G-must return a correct error if the same followed slice (url and token) already exists",
        "duration": 17,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "77ET-must return a correct error if a followed slice with the same name already exists",
        "fullTitle": "followed slices POST / 77ET-must return a correct error if a followed slice with the same name already exists",
        "duration": 21,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "623S-must modify the followed slice with the sent data",
        "fullTitle": "followed slices PUT /<id> 623S-must modify the followed slice with the sent data",
        "duration": 28,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JVCA-must return a correct error if the followed slice does not exist",
        "fullTitle": "followed slices PUT /<id> JVCA-must return a correct error if the followed slice does not exist",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "D34H-must return a correct error if the sent data is badly formatted",
        "fullTitle": "followed slices PUT /<id> D34H-must return a correct error if the sent data is badly formatted",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "AE89-must return a correct error if a followed slice with the same name already exists",
        "fullTitle": "followed slices PUT /<id> AE89-must return a correct error if a followed slice with the same name already exists",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FJOB-must delete the followed slice",
        "fullTitle": "followed slices DELETE /<id> FJOB-must delete the followed slice",
        "duration": 31,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Q0RN-must return a correct error if the followed slice does not exist",
        "fullTitle": "followed slices DELETE /<id> Q0RN-must return a correct error if the followed slice does not exist",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DTMW-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is null",
        "fullTitle": "methods/helpers/commonFunctions.js: catchForbiddenUpdate(schema) with streams schema DTMW-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is null",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6OH8-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is false",
        "fullTitle": "methods/helpers/commonFunctions.js: catchForbiddenUpdate(schema) with streams schema 6OH8-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is false",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "IRA9-must not throw any error if \"ignoreProtectedFieldUpdates\" is true but print a warn log",
        "fullTitle": "methods/helpers/commonFunctions.js: catchForbiddenUpdate(schema) with streams schema IRA9-must not throw any error if \"ignoreProtectedFieldUpdates\" is true but print a warn log",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "PTBI-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is null",
        "fullTitle": "methods/helpers/commonFunctions.js: catchForbiddenUpdate(schema) with events schema PTBI-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is null",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "EHBW-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is false",
        "fullTitle": "methods/helpers/commonFunctions.js: catchForbiddenUpdate(schema) with events schema EHBW-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is false",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BLN8-must not throw any error if \"ignoreProtectedFieldUpdates\" is true but print a warn log",
        "fullTitle": "methods/helpers/commonFunctions.js: catchForbiddenUpdate(schema) with events schema BLN8-must not throw any error if \"ignoreProtectedFieldUpdates\" is true but print a warn log",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "II0R-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is null",
        "fullTitle": "methods/helpers/commonFunctions.js: catchForbiddenUpdate(schema) with accesses schema II0R-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is null",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FQVL-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is false",
        "fullTitle": "methods/helpers/commonFunctions.js: catchForbiddenUpdate(schema) with accesses schema FQVL-must throw a forbidden error if \"ignoreProtectedFieldUpdates\" is false",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "VIJQ-must not throw any error if \"ignoreProtectedFieldUpdates\" is true but print a warn log",
        "fullTitle": "methods/helpers/commonFunctions.js: catchForbiddenUpdate(schema) with accesses schema VIJQ-must not throw any error if \"ignoreProtectedFieldUpdates\" is true but print a warn log",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RW79-should throw an error if mailing method is invalid",
        "fullTitle": "Mailing helper methods RW79-should throw an error if mailing method is invalid",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QZTA-should throw an error if mailing method is missing",
        "fullTitle": "Mailing helper methods QZTA-should throw an error if mailing method is missing",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "L7HW-should not be empty",
        "fullTitle": "Mailing helper methods using Mandrill validating request body L7HW-should not be empty",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7171-should contain a valid auth key",
        "fullTitle": "Mailing helper methods using Mandrill validating request body 7171-should contain a valid auth key",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NUW0-should contain a valid recipient",
        "fullTitle": "Mailing helper methods using Mandrill validating request body NUW0-should contain a valid recipient",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "OEFA-should contain a valid substitution of variables",
        "fullTitle": "Mailing helper methods using Mandrill validating request body OEFA-should contain a valid substitution of variables",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "H6D2-should contain valid tags",
        "fullTitle": "Mailing helper methods using Mandrill validating request body H6D2-should contain valid tags",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SMDT-should not be empty",
        "fullTitle": "Mailing helper methods using Microservice validating request body SMDT-should not be empty",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "R89N-should contain a valid auth key",
        "fullTitle": "Mailing helper methods using Microservice validating request body R89N-should contain a valid auth key",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "LWKE-should contain a valid recipient",
        "fullTitle": "Mailing helper methods using Microservice validating request body LWKE-should contain a valid recipient",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9PT7-should contain a valid substitution of variables",
        "fullTitle": "Mailing helper methods using Microservice validating request body 9PT7-should contain a valid substitution of variables",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "N7RH-must return an array preceded by a comma when called with parameter isFirst=false",
        "fullTitle": "ArrayStream N7RH-must return an array preceded by a comma when called with parameter isFirst=false",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZK91-must return a valid array when receiving limit-3 items",
        "fullTitle": "ArrayStream testing around the array size limit ZK91-must return a valid array when receiving limit-3 items",
        "duration": 28,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZK91-must return a valid array when receiving limit-2 items",
        "fullTitle": "ArrayStream testing around the array size limit ZK91-must return a valid array when receiving limit-2 items",
        "duration": 23,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZK91-must return a valid array when receiving limit-1 items",
        "fullTitle": "ArrayStream testing around the array size limit ZK91-must return a valid array when receiving limit-1 items",
        "duration": 21,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZK91-must return a valid array when receiving limit+0 items",
        "fullTitle": "ArrayStream testing around the array size limit ZK91-must return a valid array when receiving limit+0 items",
        "duration": 18,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZK91-must return a valid array when receiving limit+1 items",
        "fullTitle": "ArrayStream testing around the array size limit ZK91-must return a valid array when receiving limit+1 items",
        "duration": 15,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZK91-must return a valid array when receiving limit+2 items",
        "fullTitle": "ArrayStream testing around the array size limit ZK91-must return a valid array when receiving limit+2 items",
        "duration": 15,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZK91-must return a valid array when receiving limit+3 items",
        "fullTitle": "ArrayStream testing around the array size limit ZK91-must return a valid array when receiving limit+3 items",
        "duration": 13,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NZYH-must return a valid array when receiving 0 item(s)",
        "fullTitle": "ArrayStream testing with small number of items NZYH-must return a valid array when receiving 0 item(s)",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NZYH-must return a valid array when receiving 1 item(s)",
        "fullTitle": "ArrayStream testing with small number of items NZYH-must return a valid array when receiving 1 item(s)",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NZYH-must return a valid array when receiving 2 item(s)",
        "fullTitle": "ArrayStream testing with small number of items NZYH-must return a valid array when receiving 2 item(s)",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NZYH-must return a valid array when receiving 3 item(s)",
        "fullTitle": "ArrayStream testing with small number of items NZYH-must return a valid array when receiving 3 item(s)",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "F2W3-must be fed objects and return them in the callback",
        "fullTitle": "DrainStream F2W3-must be fed objects and return them in the callback",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "36LN-must return an error when the provided limit is exceeded",
        "fullTitle": "DrainStream 36LN-must return an error when the provided limit is exceeded",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JJVD-`get` must only return events in accessible streams",
        "fullTitle": "Access permissions Events JJVD-`get` must only return events in accessible streams",
        "duration": 21,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DF9T-`get` must return all events when permissions are defined for \"all streams\" (*)",
        "fullTitle": "Access permissions Events DF9T-`get` must return all events when permissions are defined for \"all streams\" (*)",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BDV5-`get` must only return events with accessible tags",
        "fullTitle": "Access permissions Events BDV5-`get` must only return events with accessible tags",
        "duration": 15,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "KB7H-`get` must only return events in accessible streams *and* with accessible tags when both are defined",
        "fullTitle": "Access permissions Events KB7H-`get` must only return events in accessible streams *and* with accessible tags when both are defined",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UF1Y-`get` (or any request) must alternatively accept the access token in the query string",
        "fullTitle": "Access permissions Events UF1Y-`get` (or any request) must alternatively accept the access token in the query string",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5489-must forbid getting an attached file if permissions are insufficient",
        "fullTitle": "Access permissions Events 5489-must forbid getting an attached file if permissions are insufficient",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "S6FY-must forbid creating events for 'read-only' streams",
        "fullTitle": "Access permissions Events S6FY-must forbid creating events for 'read-only' streams",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "U1H0-must forbid creating events for 'read-only' tags",
        "fullTitle": "Access permissions Events U1H0-must forbid creating events for 'read-only' tags",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NC61-must forbid updating events for 'read-only' streams",
        "fullTitle": "Access permissions Events NC61-must forbid updating events for 'read-only' streams",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BG1P-must forbid updating events for 'read-only' tags",
        "fullTitle": "Access permissions Events BG1P-must forbid updating events for 'read-only' tags",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "GGLO-must forbid stopping events for 'read-only' streams",
        "fullTitle": "Access permissions Events GGLO-must forbid stopping events for 'read-only' streams",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2TVO-must forbid stopping events for 'read-only' tags",
        "fullTitle": "Access permissions Events 2TVO-must forbid stopping events for 'read-only' tags",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZMJ3-must forbid deleting events for 'read-only' streams",
        "fullTitle": "Access permissions Events ZMJ3-must forbid deleting events for 'read-only' streams",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "KOUQ-must forbid deleting events for 'read-only' tags",
        "fullTitle": "Access permissions Events KOUQ-must forbid deleting events for 'read-only' tags",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "GSIC-must allow creating events for 'contribute' streams",
        "fullTitle": "Access permissions Events GSIC-must allow creating events for 'contribute' streams",
        "duration": 22,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0G3R-must allow creating events for 'contribute' tags",
        "fullTitle": "Access permissions Events 0G3R-must allow creating events for 'contribute' tags",
        "duration": 21,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BF14-`get` must only return streams for which permissions are defined",
        "fullTitle": "Access permissions Streams BF14-`get` must only return streams for which permissions are defined",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WTHV-must forbid creating child streams in 'read-only' streams",
        "fullTitle": "Access permissions Streams WTHV-must forbid creating child streams in 'read-only' streams",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JRNH-must forbid creating child streams in 'contribute' streams",
        "fullTitle": "Access permissions Streams JRNH-must forbid creating child streams in 'contribute' streams",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0NZ3-must forbid deleting child streams in 'contribute' streams",
        "fullTitle": "Access permissions Streams 0NZ3-must forbid deleting child streams in 'contribute' streams",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "B2KJ-must forbid updating 'contribute' streams",
        "fullTitle": "Access permissions Streams B2KJ-must forbid updating 'contribute' streams",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JF6L-must forbid deleting 'contribute' streams",
        "fullTitle": "Access permissions Streams JF6L-must forbid deleting 'contribute' streams",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BT1V-must allow creating child streams in 'managed' streams",
        "fullTitle": "Access permissions Streams BT1V-must allow creating child streams in 'managed' streams",
        "duration": 27,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3HV6-must forbid moving streams into non-'managed' parent streams",
        "fullTitle": "Access permissions Streams 3HV6-must forbid moving streams into non-'managed' parent streams",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "C8J2-must allow deleting child streams in 'managed' streams",
        "fullTitle": "Access permissions Streams C8J2-must allow deleting child streams in 'managed' streams",
        "duration": 16,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RL35-must recursively apply permissions to the streams' child streams",
        "fullTitle": "Access permissions Streams RL35-must recursively apply permissions to the streams' child streams",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "70J2-must allow access to all streams when no specific stream permissions are defined",
        "fullTitle": "Access permissions Streams 70J2-must allow access to all streams when no specific stream permissions are defined",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "H0UN-must allow access to all streams when only tag permissions are defined",
        "fullTitle": "Access permissions Streams H0UN-must allow access to all streams when only tag permissions are defined",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JMHU-must only allow access to set streams when both tag and stream permissions are defined",
        "fullTitle": "Access permissions Streams JMHU-must only allow access to set streams when both tag and stream permissions are defined",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "K2BU-must handle optional caller id in auth (in addition to token)",
        "fullTitle": "Access permissions Auth and change tracking K2BU-must handle optional caller id in auth (in addition to token)",
        "duration": 20,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZZNY-must be supported and deny access when failing",
        "fullTitle": "Access permissions Auth and change tracking custom auth step (e.g. to validate/parse caller id) ZZNY-must be supported and deny access when failing",
        "duration": 72,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "20YL-must allow access when successful",
        "fullTitle": "Access permissions Auth and change tracking custom auth step (e.g. to validate/parse caller id) 20YL-must allow access when successful",
        "duration": 37,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DWUP-must fail properly (i.e. not granting access) when the custom function crashes",
        "fullTitle": "Access permissions Auth and change tracking custom auth step (e.g. to validate/parse caller id) DWUP-must fail properly (i.e. not granting access) when the custom function crashes",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4W6M-must validate the custom function at startup time",
        "fullTitle": "Access permissions Auth and change tracking custom auth step (e.g. to validate/parse caller id) 4W6M-must validate the custom function at startup time",
        "duration": 626,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "PYC1-must return publicly shared key-value profile info",
        "fullTitle": "profile (app) GET /public PYC1-must return publicly shared key-value profile info",
        "duration": 57,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "R2CV-must return key-value settings for the current app",
        "fullTitle": "profile (app) GET /app R2CV-must return key-value settings for the current app",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4UG3-must refuse requests with a shared access token",
        "fullTitle": "profile (app) GET /app 4UG3-must refuse requests with a shared access token",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "STTI-must refuse requests with a personal access token",
        "fullTitle": "profile (app) GET /app STTI-must refuse requests with a personal access token",
        "duration": 126,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "V8OQ-must add/update/remove the specified keys without touching the others",
        "fullTitle": "profile (app) PUT /app V8OQ-must add/update/remove the specified keys without touching the others",
        "duration": 21,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "T79T-must refuse requests with a shared access token",
        "fullTitle": "profile (app) PUT /app T79T-must refuse requests with a shared access token",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FY8T-must refuse requests with a personal access token",
        "fullTitle": "profile (app) PUT /app FY8T-must refuse requests with a personal access token",
        "duration": 107,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5BQ2-/public must return publicly shared key-value profile info",
        "fullTitle": "profile (personal) GET 5BQ2-/public must return publicly shared key-value profile info",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WOOY-/private must return private key-value profile info",
        "fullTitle": "profile (personal) GET WOOY-/private must return private key-value profile info",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "O2GZ-must return an appropriate error for other paths",
        "fullTitle": "profile (personal) GET O2GZ-must return an appropriate error for other paths",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Q25A-\"private\" must be forbidden to non-personal accesses",
        "fullTitle": "profile (personal) GET Q25A-\"private\" must be forbidden to non-personal accesses",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5WYL-/public must add/update/remove the specified keys without touching the others",
        "fullTitle": "profile (personal) PUT 5WYL-/public must add/update/remove the specified keys without touching the others",
        "duration": 26,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "C8RJ-/private must add/update/remove the specified keys without touching the others",
        "fullTitle": "profile (personal) PUT C8RJ-/private must add/update/remove the specified keys without touching the others",
        "duration": 28,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TH89-must create the profile if not existing",
        "fullTitle": "profile (personal) PUT TH89-must create the profile if not existing",
        "duration": 50,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2Q7M-must return an appropriate error for other paths",
        "fullTitle": "profile (personal) PUT 2Q7M-must return an appropriate error for other paths",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NZM0-must be forbidden to non-personal accesses",
        "fullTitle": "profile (personal) PUT NZM0-must be forbidden to non-personal accesses",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "D6BK-must return the result's content when not storing streams",
        "fullTitle": "Result toObject() D6BK-must return the result's content when not storing streams",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UHUE-must return the result content when storing streams",
        "fullTitle": "Result toObject() UHUE-must return the result content when storing streams",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "VYMB-must return an error object when attempting to serialize streams containing an amountof objects exceeding the limit",
        "fullTitle": "Result toObject() VYMB-must return an error object when attempting to serialize streams containing an amountof objects exceeding the limit",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TNHH-must return an error when storing piped streams",
        "fullTitle": "Result toObject() TNHH-must return an error when storing piped streams",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TTCA-should return basic server meta information as JSON when requested",
        "fullTitle": "root GET / TTCA-should return basic server meta information as JSON when requested",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "I30T-should return basic server meta information as text otherwise",
        "fullTitle": "root GET / I30T-should return basic server meta information as text otherwise",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MGFL-should return an error if trying to access an unknown user account",
        "fullTitle": "root GET / MGFL-should return an error if trying to access an unknown user account",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "B9ZT-should return correct common HTTP headers + meta data in response body",
        "fullTitle": "root All requests: B9ZT-should return correct common HTTP headers + meta data in response body",
        "duration": 26,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6FC1-should return meta data in response body for errors as well",
        "fullTitle": "root All requests: 6FC1-should return meta data in response body for errors as well",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "should properly translate the Host header's username (i.e. subdomain)",
        "fullTitle": "root All requests: should properly translate the Host header's username (i.e. subdomain)",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "OYOI-should translate the username in subdomain also when it only contains numbers",
        "fullTitle": "root All requests: OYOI-should translate the username in subdomain also when it only contains numbers",
        "duration": 124,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DNME-should support POSTing \"urlencoded\" content with _json and _auth fields",
        "fullTitle": "root All requests: DNME-should support POSTing \"urlencoded\" content with _json and _auth fields",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZSK7-should support POSTing \"urlencoded\" content with _json, _method (PUT) and _auth fields",
        "fullTitle": "root All requests: ZSK7-should support POSTing \"urlencoded\" content with _json, _method (PUT) and _auth fields",
        "duration": 39,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Q7N8-should support POSTing \"urlencoded\" content with _json, _method (DELETE) and _auth fields",
        "fullTitle": "root All requests: Q7N8-should support POSTing \"urlencoded\" content with _json, _method (DELETE) and _auth fields",
        "duration": 85,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WSL5-should properly handle JSON errors when POSTing \"urlencoded\" content with _json field",
        "fullTitle": "root All requests: WSL5-should properly handle JSON errors when POSTing \"urlencoded\" content with _json field",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QRVJ-should update the access's \"last used\" time and *internal* request counters",
        "fullTitle": "root All requests: QRVJ-should update the access's \"last used\" time and *internal* request counters",
        "duration": 20,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "S2W6-should return OK",
        "fullTitle": "root OPTIONS / S2W6-should return OK",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3NPZ-must return current access information",
        "fullTitle": "root GET /access-info 3NPZ-must return current access information",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZYZ2-must execute the given method calls and return the results",
        "fullTitle": "root POST / (i.e. batch call) ZYZ2-must execute the given method calls and return the results",
        "duration": 150,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "must execute the method calls containing events.get and return the results",
        "fullTitle": "root POST / (i.e. batch call) must execute the method calls containing events.get and return the results",
        "duration": 90,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "V5AS-must return an error if the sent data is badly formatted",
        "fullTitle": "root POST / (i.e. batch call) V5AS-must return an error if the sent data is badly formatted",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "K15M-must dynamically create a namespace for the user",
        "fullTitle": "Socket.IO K15M-must dynamically create a namespace for the user",
        "duration": 39,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "03O5-must connect to a user with a dash in the username",
        "fullTitle": "Socket.IO 03O5-must connect to a user with a dash in the username",
        "duration": 145,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FS0T-must refuse connection if no valid access token is provided",
        "fullTitle": "Socket.IO FS0T-must refuse connection if no valid access token is provided",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "86VS-must not crash when callers omit the callback",
        "fullTitle": "Socket.IO calling API methods 86VS-must not crash when callers omit the callback",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "IS6V-must fail if the called target does not exist",
        "fullTitle": "Socket.IO calling API methods IS6V-must fail if the called target does not exist",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UUCL-must fail if the called method does not exist",
        "fullTitle": "Socket.IO calling API methods UUCL-must fail if the called method does not exist",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "LOC6-must return API errors properly, including meta",
        "fullTitle": "Socket.IO calling API methods LOC6-must return API errors properly, including meta",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "LJZE-must return non-trashed streams (as a tree) by default",
        "fullTitle": "streams GET / LJZE-must return non-trashed streams (as a tree) by default",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "EBKA-must return all streams (trashed or not) when requested",
        "fullTitle": "streams GET / EBKA-must return all streams (trashed or not) when requested",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4W0O-must include stream deletions (since the given time) when requested",
        "fullTitle": "streams GET / 4W0O-must include stream deletions (since the given time) when requested",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4DHP-must include stream deletions even when the given time is 0",
        "fullTitle": "streams GET / 4DHP-must include stream deletions even when the given time is 0",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "I3H8-must return a correct 401 error if no access token is provided",
        "fullTitle": "streams GET / I3H8-must return a correct 401 error if no access token is provided",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "GC44-must return child streams when providing a parent stream id",
        "fullTitle": "streams GET / GC44-must return child streams when providing a parent stream id",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "C75O-must return a correct error if the parent stream is unknown",
        "fullTitle": "streams GET / C75O-must return a correct error if the parent stream is unknown",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4R74-must create a new \"root\" stream with the sent data, returning it",
        "fullTitle": "streams POST / 4R74-must create a new \"root\" stream with the sent data, returning it",
        "duration": 40,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NOF6-must return a correct error if the sent data is badly formatted",
        "fullTitle": "streams POST / NOF6-must return a correct error if the sent data is badly formatted",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "G630-must return a correct error if a stream with the same id already exists",
        "fullTitle": "streams POST / G630-must return a correct error if a stream with the same id already exists",
        "duration": 19,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "N58V-must allow reuse of deleted ids",
        "fullTitle": "streams POST / N58V-must allow reuse of deleted ids",
        "duration": 49,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2277-must accept explicit null for optional fields",
        "fullTitle": "streams POST / 2277-must accept explicit null for optional fields",
        "duration": 27,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "W9C3-must fail if a sibling stream with the same name already exists",
        "fullTitle": "streams POST / W9C3-must fail if a sibling stream with the same name already exists",
        "duration": 23,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UBGO-must return a correct error if the sent data is not valid JSON",
        "fullTitle": "streams POST / UBGO-must return a correct error if the sent data is not valid JSON",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "IPQT-must create a new child stream (with predefined id) when providing a parent stream id",
        "fullTitle": "streams POST / IPQT-must create a new child stream (with predefined id) when providing a parent stream id",
        "duration": 33,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6Z4R-must return an error if the new stream's parentId is the empty string",
        "fullTitle": "streams POST / 6Z4R-must return an error if the new stream's parentId is the empty string",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5883-must slugify the new stream's predefined id",
        "fullTitle": "streams POST / 5883-must slugify the new stream's predefined id",
        "duration": 30,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "30KQ-must return a correct error if the parent stream is unknown",
        "fullTitle": "streams POST / 30KQ-must return a correct error if the parent stream is unknown",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BWMD-must return a correct error if the given predefined stream's id is \"null\"",
        "fullTitle": "streams POST / BWMD-must return a correct error if the given predefined stream's id is \"null\"",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UTKQ-must return a correct error if the given predefined stream's id is \"*\"",
        "fullTitle": "streams POST / UTKQ-must return a correct error if the given predefined stream's id is \"*\"",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "72EI-must modify the stream with the sent data",
        "fullTitle": "streams PUT /<id> 72EI-must modify the stream with the sent data",
        "duration": 35,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DB8F-must accept explicit null for optional fields",
        "fullTitle": "streams PUT /<id> DB8F-must accept explicit null for optional fields",
        "duration": 32,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QF7E-must add/update/remove the specified client data fields without touching the others",
        "fullTitle": "streams PUT /<id> QF7E-must add/update/remove the specified client data fields without touching the others",
        "duration": 33,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0IIT-must return a correct error if the stream does not exist",
        "fullTitle": "streams PUT /<id> 0IIT-must return a correct error if the stream does not exist",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9223-must return a correct error if the sent data is badly formatted",
        "fullTitle": "streams PUT /<id> 9223-must return a correct error if the sent data is badly formatted",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2W6H-must fail if a sibling stream with the same name already exists",
        "fullTitle": "streams PUT /<id> 2W6H-must fail if a sibling stream with the same name already exists",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WIKH-must move the stream under the given parent when specified",
        "fullTitle": "streams PUT /<id> WIKH-must move the stream under the given parent when specified",
        "duration": 32,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5GBZ-must return a correct error if the new parent stream is unknown",
        "fullTitle": "streams PUT /<id> 5GBZ-must return a correct error if the new parent stream is unknown",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ORLT-must fail and throw a forbidden error in strict mode",
        "fullTitle": "streams PUT /<id> forbidden updates of protected fields ORLT-must fail and throw a forbidden error in strict mode",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HIQF-must succeed by ignoring protected fields and log a warning in non-strict mode",
        "fullTitle": "streams PUT /<id> forbidden updates of protected fields HIQF-must succeed by ignoring protected fields and log a warning in non-strict mode",
        "duration": 1149,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5CVU-must flag the specified stream as trashed",
        "fullTitle": "streams DELETE /<id> 5CVU-must flag the specified stream as trashed",
        "duration": 30,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HGMR-must delete the stream when already trashed with its descendants if there are no linked events",
        "fullTitle": "streams DELETE /<id> HGMR-must delete the stream when already trashed with its descendants if there are no linked events",
        "duration": 58,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "23YT-must return a correct error if there are linked events and the related parameter is missing",
        "fullTitle": "streams DELETE /<id> 23YT-must return a correct error if there are linked events and the related parameter is missing",
        "duration": 26,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4D0P-must reject the deletion of a root stream with mergeEventsWithParent=true",
        "fullTitle": "streams DELETE /<id> 4D0P-must reject the deletion of a root stream with mergeEventsWithParent=true",
        "duration": 24,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Z3TP-must reassign the linked events to the deleted stream's parent when specified",
        "fullTitle": "streams DELETE /<id> Z3TP-must reassign the linked events to the deleted stream's parent when specified",
        "duration": 59,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "VANV-must delete the linked events when mergeEventsWithParent is false",
        "fullTitle": "streams DELETE /<id> VANV-must delete the linked events when mergeEventsWithParent is false",
        "duration": 126,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "U4H9-must return a correct error if the item is unknown",
        "fullTitle": "streams DELETE /<id> U4H9-must return a correct error if the item is unknown",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "CRU9-must not send a welcome email if mailing is deactivated",
        "fullTitle": "system (ex-register) POST /create-user CRU9-must not send a welcome email if mailing is deactivated",
        "duration": 1263,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TZAA-must not send a welcome email if welcome mail is deactivated",
        "fullTitle": "system (ex-register) POST /create-user TZAA-must not send a welcome email if welcome mail is deactivated",
        "duration": 1366,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6A3P-must run the process but not save anything for test username \"recla\"",
        "fullTitle": "system (ex-register) POST /create-user when it just replies OK 6A3P-must run the process but not save anything for test username \"recla\"",
        "duration": 1361,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FC4J-must support the old \"/register\" path for backwards-compatibility",
        "fullTitle": "system (ex-register) POST /create-user when it just replies OK FC4J-must support the old \"/register\" path for backwards-compatibility",
        "duration": 68,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "L4F0-must return a correct 400 error if the sent data is badly formatted",
        "fullTitle": "system (ex-register) POST /create-user when it just replies OK L4F0-must return a correct 400 error if the sent data is badly formatted",
        "duration": 6,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "07CQ-must return a correct 400 error if the language property is above 5 characters",
        "fullTitle": "system (ex-register) POST /create-user when it just replies OK 07CQ-must return a correct 400 error if the language property is above 5 characters",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DSI8-must return a correct 400 error if the language property is the empty string",
        "fullTitle": "system (ex-register) POST /create-user when it just replies OK DSI8-must return a correct 400 error if the language property is the empty string",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QRIF-must return a correct 400 error if a user with the same user name already exists",
        "fullTitle": "system (ex-register) POST /create-user when it just replies OK QRIF-must return a correct 400 error if a user with the same user name already exists",
        "duration": 22,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "E3CV-must return a correct 400 error if a user with the same email address already exists",
        "fullTitle": "system (ex-register) POST /create-user when it just replies OK E3CV-must return a correct 400 error if a user with the same email address already exists",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "350H-must return a correct 404 error when authentication is invalid",
        "fullTitle": "system (ex-register) POST /create-user when it just replies OK 350H-must return a correct 404 error when authentication is invalid",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "KB8K-must return a correct error if the content type is wrong",
        "fullTitle": "system (ex-register) POST /create-user when it just replies OK KB8K-must return a correct error if the content type is wrong",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "00TL-must replace the passwordHash in the logs by (hidden) when the authentication is invalid",
        "fullTitle": "system (ex-register) POST /create-user when we log into a temporary log file 00TL-must replace the passwordHash in the logs by (hidden) when the authentication is invalid",
        "duration": 40,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ULPB-must replace the passwordHash in the logs by (hidden) when the payload is invalid (here parameters)",
        "fullTitle": "system (ex-register) POST /create-user when we log into a temporary log file ULPB-must replace the passwordHash in the logs by (hidden) when the payload is invalid (here parameters)",
        "duration": 9,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DYPI-must not mention the passwordHash in the logs when none is provided",
        "fullTitle": "system (ex-register) POST /create-user when we log into a temporary log file DYPI-must not mention the passwordHash in the logs when none is provided",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "I49V-must return user information (including time of last account use)",
        "fullTitle": "system (ex-register) GET /user-info/{username} I49V-must return user information (including time of last account use)",
        "duration": 86,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "U1NE-must return a correct 404 error when authentication is invalid",
        "fullTitle": "system (ex-register) GET /user-info/{username} U1NE-must return a correct 404 error when authentication is invalid",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3YAK-should parse file uploads",
        "fullTitle": "uploads middleware hasFileUpload 3YAK-should parse file uploads",
        "duration": 21,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "GL7F-notifies internal listeners",
        "fullTitle": "Notifications #serverReady GL7F-notifies internal listeners",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZIJ1-notifies axon listeners",
        "fullTitle": "Notifications #serverReady ZIJ1-notifies axon listeners",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Y3U1-notifies internal listeners",
        "fullTitle": "Notifications #accountChanged Y3U1-notifies internal listeners",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "B5NE-notifies axon listeners",
        "fullTitle": "Notifications #accountChanged B5NE-notifies axon listeners",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WBV9-notifies internal listeners",
        "fullTitle": "Notifications #accessesChanged WBV9-notifies internal listeners",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "KAID-notifies axon listeners",
        "fullTitle": "Notifications #accessesChanged KAID-notifies axon listeners",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5AD1-notifies internal listeners",
        "fullTitle": "Notifications #followedSlicesChanged 5AD1-notifies internal listeners",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JVMH-notifies axon listeners",
        "fullTitle": "Notifications #followedSlicesChanged JVMH-notifies axon listeners",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7API-notifies internal listeners",
        "fullTitle": "Notifications #streamsChanged 7API-notifies internal listeners",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8H3E-notifies axon listeners",
        "fullTitle": "Notifications #streamsChanged 8H3E-notifies axon listeners",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "CNJA-notifies internal listeners",
        "fullTitle": "Notifications #eventsChanged CNJA-notifies internal listeners",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2PKG-notifies axon listeners",
        "fullTitle": "Notifications #eventsChanged 2PKG-notifies axon listeners",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "B671-returns true if all properties exist",
        "fullTitle": "Authentication hasProperties B671-returns true if all properties exist",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HPT9-returns false if not all properties exist",
        "fullTitle": "Authentication hasProperties HPT9-returns false if not all properties exist",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UHVT-returns false if null is given",
        "fullTitle": "Authentication hasProperties UHVT-returns false if null is given",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TBA4-returns false if a string is given",
        "fullTitle": "Authentication hasProperties TBA4-returns false if a string is given",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "038D-should behave as documented in the method",
        "fullTitle": "tryCoerceStringValues 038D-should behave as documented in the method",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "doesn't create keys in object",
        "fullTitle": "tryCoerceStringValues doesn't create keys in object",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "M2EI-should convert to array",
        "fullTitle": "tryCoerceStringValues M2EI-should convert to array",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "992Z-number conversion works",
        "fullTitle": "tryCoerceStringValues 992Z-number conversion works",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NMKY-should construct",
        "fullTitle": "NatsPublisher NMKY-should construct",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "1A22-delivers messages to \"USERNAME.sok1\"",
        "fullTitle": "NatsPublisher 1A22-delivers messages to \"USERNAME.sok1\"",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "T49T-should construct",
        "fullTitle": "NatsSubscriber T49T-should construct",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "CCDU-accepts messages from USERNAME.sok1 and dispatches them to sinks",
        "fullTitle": "NatsSubscriber when subscribed to \"foobar\" subscribe(\"USERNAME\") CCDU-accepts messages from USERNAME.sok1 and dispatches them to sinks",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "1WON-ignores messages from other users",
        "fullTitle": "NatsSubscriber when subscribed to \"foobar\" subscribe(\"USERNAME\") 1WON-ignores messages from other users",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "09SQ-should unsubscribe from NATS",
        "fullTitle": "NatsSubscriber when subscribed to \"foobar\" unsubscribe() 09SQ-should unsubscribe from NATS",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      }
    ],
    "componentName": "api-server"
  },
  {
    "stats": {
      "suites": 22,
      "tests": 43,
      "passes": 39,
      "pending": 0,
      "failures": 4,
      "start": "2019-05-06T12:47:18.494Z",
      "end": "2019-05-06T12:47:18.670Z",
      "duration": 176
    },
    "tests": [
      {
        "title": "RLPR-should allow writing to a series",
        "fullTitle": "Manage InfluxDB data (business.series.*) RLPR-should allow writing to a series",
        "duration": 25,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5724-should parse the happy case",
        "fullTitle": "BatchRequest .parse 5724-should parse the happy case",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9U0M-accepts an empty batch",
        "fullTitle": "BatchRequest .parse 9U0M-accepts an empty batch",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "LH04-throws if format is missing or wrong",
        "fullTitle": "BatchRequest .parse LH04-throws if format is missing or wrong",
        "duration": 2,
        "currentRetry": 0,
        "err": {
          "message": "expected [Function] to throw ParseFailure",
          "showDiff": true,
          "expected": "class ParseFailure extends Error {}",
          "stack": "AssertionError: expected [Function] to throw ParseFailure\n    at bad (test/unit/series/batch_request.test.js:64:14)\n    at Context.it (test/unit/series/batch_request.test.js:48:7)"
        }
      },
      {
        "title": "BLQV-throws if another type is passed in",
        "fullTitle": "BatchRequest .parse BLQV-throws if another type is passed in",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "throws if envelope doesn't have a data attribute",
        "fullTitle": "BatchRequest .parse throws if envelope doesn't have a data attribute",
        "duration": 0,
        "currentRetry": 0,
        "err": {
          "message": "expected [Function] to throw ParseFailure",
          "showDiff": true,
          "expected": "class ParseFailure extends Error {}",
          "stack": "AssertionError: expected [Function] to throw ParseFailure\n    at bad (test/unit/series/batch_request.test.js:64:14)\n    at Context.it (test/unit/series/batch_request.test.js:57:7)"
        }
      },
      {
        "title": "PK4K-should parse a good looking object",
        "fullTitle": "BatchRequestElement .parse(obj) PK4K-should parse a good looking object",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "AAOY-fails if input is not an Object",
        "fullTitle": "BatchRequestElement .parse(obj) AAOY-fails if input is not an Object",
        "duration": 0,
        "currentRetry": 0,
        "err": {
          "message": "expected [Function] to throw ParseFailure",
          "showDiff": true,
          "expected": "class ParseFailure extends Error {}",
          "stack": "AssertionError: expected [Function] to throw ParseFailure\n    at bad (test/unit/series/batch_request.test.js:103:14)\n    at Context.it (test/unit/series/batch_request.test.js:94:7)"
        }
      },
      {
        "title": "H43Q-fails if eventId is missing or the wrong type",
        "fullTitle": "BatchRequestElement .parse(obj) H43Q-fails if eventId is missing or the wrong type",
        "duration": 0,
        "currentRetry": 0,
        "err": {
          "message": "expected [Function] to throw ParseFailure",
          "showDiff": true,
          "expected": "class ParseFailure extends Error {}",
          "stack": "AssertionError: expected [Function] to throw ParseFailure\n    at bad (test/unit/series/batch_request.test.js:103:14)\n    at Context.it (test/unit/series/batch_request.test.js:98:7)"
        }
      },
      {
        "title": "8PJY-should accept the happy path",
        "fullTitle": "DataMatrix .parse(obj) 8PJY-should accept the happy path",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "69VW-refuses if not an object",
        "fullTitle": "DataMatrix .parse(obj) 69VW-refuses if not an object",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JRF6-refuses if format is not flatJSON",
        "fullTitle": "DataMatrix .parse(obj) JRF6-refuses if format is not flatJSON",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "62B5-refuses if fields are not strings",
        "fullTitle": "DataMatrix .parse(obj) 62B5-refuses if fields are not strings",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "59NH-refuses if points is not an array",
        "fullTitle": "DataMatrix .parse(obj) 59NH-refuses if points is not an array",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "REEQ-refuses if field names are not correct",
        "fullTitle": "DataMatrix .parse(obj) REEQ-refuses if field names are not correct",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "PAMT-refuses if data cannot be coerced",
        "fullTitle": "DataMatrix .parse(obj) PAMT-refuses if data cannot be coerced",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UQ5A-should iterate over all matrix rows",
        "fullTitle": "DataMatrix #eachRow UQ5A-should iterate over all matrix rows",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "EM4R-should call fn for each cell",
        "fullTitle": "DataMatrix #transform EM4R-should call fn for each cell",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7A37-should store the return value in the matrix",
        "fullTitle": "DataMatrix #transform 7A37-should store the return value in the matrix",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FGKE-returns the minimum and maximum timestamp used",
        "fullTitle": "DataMatrix #minmax() FGKE-returns the minimum and maximum timestamp used",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "U4NZ-throws an error if the matrix is empty",
        "fullTitle": "DataMatrix #minmax() U4NZ-throws an error if the matrix is empty",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JO46-throws an error if the timestamp is missing",
        "fullTitle": "DataMatrix #minmax() JO46-throws an error if the timestamp is missing",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MJ3G-should return a js object for the row",
        "fullTitle": "business.series.Row toStruct MJ3G-should return a js object for the row",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "J0DY-should produce series objects for events",
        "fullTitle": "business.series.Repository with stubbed out connection J0DY-should produce series objects for events",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SRBJ-should work (must be called manually)",
        "fullTitle": "business.types.TypeRepository type list update SRBJ-should work (must be called manually)",
        "duration": 97,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2Q0K-should fail gracefully",
        "fullTitle": "business.types.TypeRepository type list update 2Q0K-should fail gracefully",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "P969-should be known",
        "fullTitle": "business.types.TypeRepository basic types like mass/kg P969-should be known",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TN5N-should return a type instance allowing conversion",
        "fullTitle": "business.types.TypeRepository basic types like mass/kg TN5N-should return a type instance allowing conversion",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "KQSG-should throw when conversion fails",
        "fullTitle": "business.types.TypeRepository basic types like mass/kg KQSG-should throw when conversion fails",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MM0V-should coerce to number during validation",
        "fullTitle": "business.types.TypeRepository basic types like mass/kg MM0V-should coerce to number during validation",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "LMVV-should be known",
        "fullTitle": "business.types.TypeRepository complex types like position/wgs84 LMVV-should be known",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "1NQ3-should return a complex type instance",
        "fullTitle": "business.types.TypeRepository complex types like position/wgs84 1NQ3-should return a complex type instance",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "83GI-should return the correct value type for all fields",
        "fullTitle": "business.types.TypeRepository complex types on several levels like message/facebook 83GI-should return the correct value type for all fields",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5AZB-should return the correct value type for optional fields",
        "fullTitle": "business.types.TypeRepository complex types on several levels like message/facebook 5AZB-should return the correct value type for optional fields",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "G4R2-should resolve nested fields",
        "fullTitle": "business.types.TypeRepository complex types on several levels like message/facebook G4R2-should resolve nested fields",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "K9HA-does NOT handle requiredFields fully yet: only surface requirements are returned",
        "fullTitle": "business.types.TypeRepository complex types on several levels like message/facebook K9HA-does NOT handle requiredFields fully yet: only surface requirements are returned",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "41MH-should be known",
        "fullTitle": "business.types.TypeRepository placeholder types like picture/attached 41MH-should be known",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HFMV-should return a type instance allowing conversion",
        "fullTitle": "business.types.TypeRepository placeholder types like picture/attached HFMV-should return a type instance allowing conversion",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4HM0-should be known",
        "fullTitle": "business.types.TypeRepository series types like series:mass/kg 4HM0-should be known",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "C4VK-should inform about fields correctly",
        "fullTitle": "business.types.TypeRepository series types like series:mass/kg C4VK-should inform about fields correctly",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4I3A-should be produced via a type repository",
        "fullTitle": "business.types.TypeValidator 4I3A-should be produced via a type repository",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "LBOU-should validate simple types",
        "fullTitle": "business.types.TypeValidator LBOU-should validate simple types",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6IQQ-should validate complex types",
        "fullTitle": "business.types.TypeValidator 6IQQ-should validate complex types",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      }
    ],
    "pending": [],
    "failures": [
      {
        "title": "LH04-throws if format is missing or wrong",
        "fullTitle": "BatchRequest .parse LH04-throws if format is missing or wrong",
        "duration": 2,
        "currentRetry": 0,
        "err": {
          "message": "expected [Function] to throw ParseFailure",
          "showDiff": true,
          "expected": "class ParseFailure extends Error {}",
          "stack": "AssertionError: expected [Function] to throw ParseFailure\n    at bad (test/unit/series/batch_request.test.js:64:14)\n    at Context.it (test/unit/series/batch_request.test.js:48:7)"
        }
      },
      {
        "title": "throws if envelope doesn't have a data attribute",
        "fullTitle": "BatchRequest .parse throws if envelope doesn't have a data attribute",
        "duration": 0,
        "currentRetry": 0,
        "err": {
          "message": "expected [Function] to throw ParseFailure",
          "showDiff": true,
          "expected": "class ParseFailure extends Error {}",
          "stack": "AssertionError: expected [Function] to throw ParseFailure\n    at bad (test/unit/series/batch_request.test.js:64:14)\n    at Context.it (test/unit/series/batch_request.test.js:57:7)"
        }
      },
      {
        "title": "AAOY-fails if input is not an Object",
        "fullTitle": "BatchRequestElement .parse(obj) AAOY-fails if input is not an Object",
        "duration": 0,
        "currentRetry": 0,
        "err": {
          "message": "expected [Function] to throw ParseFailure",
          "showDiff": true,
          "expected": "class ParseFailure extends Error {}",
          "stack": "AssertionError: expected [Function] to throw ParseFailure\n    at bad (test/unit/series/batch_request.test.js:103:14)\n    at Context.it (test/unit/series/batch_request.test.js:94:7)"
        }
      },
      {
        "title": "H43Q-fails if eventId is missing or the wrong type",
        "fullTitle": "BatchRequestElement .parse(obj) H43Q-fails if eventId is missing or the wrong type",
        "duration": 0,
        "currentRetry": 0,
        "err": {
          "message": "expected [Function] to throw ParseFailure",
          "showDiff": true,
          "expected": "class ParseFailure extends Error {}",
          "stack": "AssertionError: expected [Function] to throw ParseFailure\n    at bad (test/unit/series/batch_request.test.js:103:14)\n    at Context.it (test/unit/series/batch_request.test.js:98:7)"
        }
      }
    ],
    "passes": [
      {
        "title": "RLPR-should allow writing to a series",
        "fullTitle": "Manage InfluxDB data (business.series.*) RLPR-should allow writing to a series",
        "duration": 25,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5724-should parse the happy case",
        "fullTitle": "BatchRequest .parse 5724-should parse the happy case",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9U0M-accepts an empty batch",
        "fullTitle": "BatchRequest .parse 9U0M-accepts an empty batch",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BLQV-throws if another type is passed in",
        "fullTitle": "BatchRequest .parse BLQV-throws if another type is passed in",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "PK4K-should parse a good looking object",
        "fullTitle": "BatchRequestElement .parse(obj) PK4K-should parse a good looking object",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8PJY-should accept the happy path",
        "fullTitle": "DataMatrix .parse(obj) 8PJY-should accept the happy path",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "69VW-refuses if not an object",
        "fullTitle": "DataMatrix .parse(obj) 69VW-refuses if not an object",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JRF6-refuses if format is not flatJSON",
        "fullTitle": "DataMatrix .parse(obj) JRF6-refuses if format is not flatJSON",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "62B5-refuses if fields are not strings",
        "fullTitle": "DataMatrix .parse(obj) 62B5-refuses if fields are not strings",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "59NH-refuses if points is not an array",
        "fullTitle": "DataMatrix .parse(obj) 59NH-refuses if points is not an array",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "REEQ-refuses if field names are not correct",
        "fullTitle": "DataMatrix .parse(obj) REEQ-refuses if field names are not correct",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "PAMT-refuses if data cannot be coerced",
        "fullTitle": "DataMatrix .parse(obj) PAMT-refuses if data cannot be coerced",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UQ5A-should iterate over all matrix rows",
        "fullTitle": "DataMatrix #eachRow UQ5A-should iterate over all matrix rows",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "EM4R-should call fn for each cell",
        "fullTitle": "DataMatrix #transform EM4R-should call fn for each cell",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7A37-should store the return value in the matrix",
        "fullTitle": "DataMatrix #transform 7A37-should store the return value in the matrix",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "FGKE-returns the minimum and maximum timestamp used",
        "fullTitle": "DataMatrix #minmax() FGKE-returns the minimum and maximum timestamp used",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "U4NZ-throws an error if the matrix is empty",
        "fullTitle": "DataMatrix #minmax() U4NZ-throws an error if the matrix is empty",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JO46-throws an error if the timestamp is missing",
        "fullTitle": "DataMatrix #minmax() JO46-throws an error if the timestamp is missing",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MJ3G-should return a js object for the row",
        "fullTitle": "business.series.Row toStruct MJ3G-should return a js object for the row",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "J0DY-should produce series objects for events",
        "fullTitle": "business.series.Repository with stubbed out connection J0DY-should produce series objects for events",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SRBJ-should work (must be called manually)",
        "fullTitle": "business.types.TypeRepository type list update SRBJ-should work (must be called manually)",
        "duration": 97,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2Q0K-should fail gracefully",
        "fullTitle": "business.types.TypeRepository type list update 2Q0K-should fail gracefully",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "P969-should be known",
        "fullTitle": "business.types.TypeRepository basic types like mass/kg P969-should be known",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TN5N-should return a type instance allowing conversion",
        "fullTitle": "business.types.TypeRepository basic types like mass/kg TN5N-should return a type instance allowing conversion",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "KQSG-should throw when conversion fails",
        "fullTitle": "business.types.TypeRepository basic types like mass/kg KQSG-should throw when conversion fails",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MM0V-should coerce to number during validation",
        "fullTitle": "business.types.TypeRepository basic types like mass/kg MM0V-should coerce to number during validation",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "LMVV-should be known",
        "fullTitle": "business.types.TypeRepository complex types like position/wgs84 LMVV-should be known",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "1NQ3-should return a complex type instance",
        "fullTitle": "business.types.TypeRepository complex types like position/wgs84 1NQ3-should return a complex type instance",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "83GI-should return the correct value type for all fields",
        "fullTitle": "business.types.TypeRepository complex types on several levels like message/facebook 83GI-should return the correct value type for all fields",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5AZB-should return the correct value type for optional fields",
        "fullTitle": "business.types.TypeRepository complex types on several levels like message/facebook 5AZB-should return the correct value type for optional fields",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "G4R2-should resolve nested fields",
        "fullTitle": "business.types.TypeRepository complex types on several levels like message/facebook G4R2-should resolve nested fields",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "K9HA-does NOT handle requiredFields fully yet: only surface requirements are returned",
        "fullTitle": "business.types.TypeRepository complex types on several levels like message/facebook K9HA-does NOT handle requiredFields fully yet: only surface requirements are returned",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "41MH-should be known",
        "fullTitle": "business.types.TypeRepository placeholder types like picture/attached 41MH-should be known",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HFMV-should return a type instance allowing conversion",
        "fullTitle": "business.types.TypeRepository placeholder types like picture/attached HFMV-should return a type instance allowing conversion",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4HM0-should be known",
        "fullTitle": "business.types.TypeRepository series types like series:mass/kg 4HM0-should be known",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "C4VK-should inform about fields correctly",
        "fullTitle": "business.types.TypeRepository series types like series:mass/kg C4VK-should inform about fields correctly",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4I3A-should be produced via a type repository",
        "fullTitle": "business.types.TypeValidator 4I3A-should be produced via a type repository",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "LBOU-should validate simple types",
        "fullTitle": "business.types.TypeValidator LBOU-should validate simple types",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "6IQQ-should validate complex types",
        "fullTitle": "business.types.TypeValidator 6IQQ-should validate complex types",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      }
    ],
    "componentName": "business"
  },
  {
    "stats": {
      "suites": 26,
      "tests": 43,
      "passes": 43,
      "pending": 0,
      "failures": 0,
      "start": "2019-05-06T12:47:20.020Z",
      "end": "2019-05-06T12:47:27.108Z",
      "duration": 7088
    },
    "tests": [
      {
        "title": "6A9P-should store data correctly",
        "fullTitle": "Storing BATCH data in a HF series Use Case: Store data in InfluxDB, Verification on either half 6A9P-should store data correctly",
        "duration": 115,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "should fail without 'Authorization' header",
        "fullTitle": "Storing BATCH data in a HF series POST /:user_name/series/batch should fail without 'Authorization' header",
        "duration": 23,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "74OF-fails",
        "fullTitle": "Storing BATCH data in a HF series POST /:user_name/series/batch when the token has no permissions on the event 74OF-fails",
        "duration": 24,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "J2B4-should schedule a metadata update on every store",
        "fullTitle": "Storing BATCH data in a HF series POST /:user_name/series/batch when using a metadata updater stub J2B4-should schedule a metadata update on every store",
        "duration": 138,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "17BO-should refuse a query for an unknown user",
        "fullTitle": "Querying data from a HF series 17BO-should refuse a query for an unknown user",
        "duration": 49,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "458Y-should refuse a query missing the authorization token",
        "fullTitle": "Querying data from a HF series 458Y-should refuse a query missing the authorization token",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "E989-should refuse a query containing an unauthorized token",
        "fullTitle": "Querying data from a HF series E989-should refuse a query containing an unauthorized token",
        "duration": 22,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QPL0-should return an unknown resource error when querying data for an nonexistent event id",
        "fullTitle": "Querying data from a HF series QPL0-should return an unknown resource error when querying data for an nonexistent event id",
        "duration": 35,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NMOJ-should refuse a query containing parameters with the wrong format",
        "fullTitle": "Querying data from a HF series NMOJ-should refuse a query containing parameters with the wrong format",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4F5H-should refuse a query when toTime is before fromTime",
        "fullTitle": "Querying data from a HF series 4F5H-should refuse a query when toTime is before fromTime",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "IG6M-should store data correctly",
        "fullTitle": "Storing data in a HF series Use Case: Store data in InfluxDB, Verification on either half IG6M-should store data correctly",
        "duration": 99,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JZQ0-should return data once stored",
        "fullTitle": "Storing data in a HF series Use Case: Store data in InfluxDB, Verification on either half JZQ0-should return data once stored",
        "duration": 25,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DHDR-stores data into InfluxDB",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth success DHDR-stores data into InfluxDB",
        "duration": 54,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Y03L-should reject non-JSON bodies",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth success Y03L-should reject non-JSON bodies",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TS60-responds with headers that allow CORS on OPTIONS",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth success TS60-responds with headers that allow CORS on OPTIONS",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RDJF-responds with headers that allow CORS on POST",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth success RDJF-responds with headers that allow CORS on POST",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "should be rejected (format is not flatJSON)",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth success when request is malformed should be rejected (format is not flatJSON)",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "should be rejected (matrix is not square - not enough fields)",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth success when request is malformed should be rejected (matrix is not square - not enough fields)",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "should be rejected (value types are not all valid)",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth success when request is malformed should be rejected (value types are not all valid)",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "should be rejected (missing timestamp column)",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth success when request is malformed should be rejected (missing timestamp column)",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "should be rejected (missing value column for a simple input)",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth success when request is malformed should be rejected (missing value column for a simple input)",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "P65Q-should schedule a metadata update on every store",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth success when using a metadata updater stub P65Q-should schedule a metadata update on every store",
        "duration": 32,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Q4AS-refuses invalid/unauthorized accesses",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth failure Q4AS-refuses invalid/unauthorized accesses",
        "duration": 23,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DWEN-stores data of any basic type",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series storing data in different formats DWEN-stores data of any basic type",
        "duration": 106,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9OR6-stores data of complex types",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series storing data in different formats 9OR6-stores data of complex types",
        "duration": 29,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "doesn't accept data in non-series format",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series storing data in different formats doesn't accept data in non-series format",
        "duration": 21,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "A29P-stores strings",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series storing data in different formats A29P-stores strings",
        "duration": 30,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "PAN1-stores floats",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series storing data in different formats PAN1-stores floats",
        "duration": 56,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NIOH-refuses to store when timestamp is present twice (ambiguous!)",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series complex types such as ratio/generic NIOH-refuses to store when timestamp is present twice (ambiguous!)",
        "duration": 85,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "46FQ-refuses to store when other fields are present twice (ambiguous!)",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series complex types such as ratio/generic 46FQ-refuses to store when other fields are present twice (ambiguous!)",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "G556-refuses to store when not all required fields are given",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series complex types such as ratio/generic when not all required fields are given G556-refuses to store when not all required fields are given",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WR0L-returns error id \"invalid-request-structure\"",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series complex types such as ratio/generic when not all required fields are given WR0L-returns error id \"invalid-request-structure\"",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "refuses to store when field names don't match the type",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series complex types such as ratio/generic when field names don't match the type refuses to store when field names don't match the type",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JJY1-returns the error message with the id \"invalid-request-structure\"",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series complex types such as ratio/generic when field names don't match the type JJY1-returns the error message with the id \"invalid-request-structure\"",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "N4S2-allows storing any number of optional fields, on each request",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series complex types such as position/wgs84 N4S2-allows storing any number of optional fields, on each request",
        "duration": 103,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UZAJ-refuses unknown fields",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series complex types such as position/wgs84 UZAJ-refuses unknown fields",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3JQS-should allow write access to series",
        "fullTitle": "Metadata Loader 3JQS-should allow write access to series",
        "duration": 19,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QAW9-returns loaded metadata for N minutes",
        "fullTitle": "Metadata Cache QAW9-returns loaded metadata for N minutes",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5IEY-can be constructed",
        "fullTitle": "Server 5IEY-can be constructed",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "IZ94-starts a http server on configured port",
        "fullTitle": "Server .start IZ94-starts a http server on configured port",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "M4DI-should have been loaded for test execution",
        "fullTitle": "Settings M4DI-should have been loaded for test execution",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "GAJJ-should reject queries if the authorization header is missing",
        "fullTitle": "Controller storeSeriesData GAJJ-should reject queries if the authorization header is missing",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "U46U-should reject queries if the eventId is missing",
        "fullTitle": "Controller storeSeriesData U46U-should reject queries if the eventId is missing",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      }
    ],
    "pending": [],
    "failures": [],
    "passes": [
      {
        "title": "6A9P-should store data correctly",
        "fullTitle": "Storing BATCH data in a HF series Use Case: Store data in InfluxDB, Verification on either half 6A9P-should store data correctly",
        "duration": 115,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "should fail without 'Authorization' header",
        "fullTitle": "Storing BATCH data in a HF series POST /:user_name/series/batch should fail without 'Authorization' header",
        "duration": 23,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "74OF-fails",
        "fullTitle": "Storing BATCH data in a HF series POST /:user_name/series/batch when the token has no permissions on the event 74OF-fails",
        "duration": 24,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "J2B4-should schedule a metadata update on every store",
        "fullTitle": "Storing BATCH data in a HF series POST /:user_name/series/batch when using a metadata updater stub J2B4-should schedule a metadata update on every store",
        "duration": 138,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "17BO-should refuse a query for an unknown user",
        "fullTitle": "Querying data from a HF series 17BO-should refuse a query for an unknown user",
        "duration": 49,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "458Y-should refuse a query missing the authorization token",
        "fullTitle": "Querying data from a HF series 458Y-should refuse a query missing the authorization token",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "E989-should refuse a query containing an unauthorized token",
        "fullTitle": "Querying data from a HF series E989-should refuse a query containing an unauthorized token",
        "duration": 22,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QPL0-should return an unknown resource error when querying data for an nonexistent event id",
        "fullTitle": "Querying data from a HF series QPL0-should return an unknown resource error when querying data for an nonexistent event id",
        "duration": 35,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NMOJ-should refuse a query containing parameters with the wrong format",
        "fullTitle": "Querying data from a HF series NMOJ-should refuse a query containing parameters with the wrong format",
        "duration": 12,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4F5H-should refuse a query when toTime is before fromTime",
        "fullTitle": "Querying data from a HF series 4F5H-should refuse a query when toTime is before fromTime",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "IG6M-should store data correctly",
        "fullTitle": "Storing data in a HF series Use Case: Store data in InfluxDB, Verification on either half IG6M-should store data correctly",
        "duration": 99,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JZQ0-should return data once stored",
        "fullTitle": "Storing data in a HF series Use Case: Store data in InfluxDB, Verification on either half JZQ0-should return data once stored",
        "duration": 25,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DHDR-stores data into InfluxDB",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth success DHDR-stores data into InfluxDB",
        "duration": 54,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Y03L-should reject non-JSON bodies",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth success Y03L-should reject non-JSON bodies",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "TS60-responds with headers that allow CORS on OPTIONS",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth success TS60-responds with headers that allow CORS on OPTIONS",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RDJF-responds with headers that allow CORS on POST",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth success RDJF-responds with headers that allow CORS on POST",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "should be rejected (format is not flatJSON)",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth success when request is malformed should be rejected (format is not flatJSON)",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "should be rejected (matrix is not square - not enough fields)",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth success when request is malformed should be rejected (matrix is not square - not enough fields)",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "should be rejected (value types are not all valid)",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth success when request is malformed should be rejected (value types are not all valid)",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "should be rejected (missing timestamp column)",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth success when request is malformed should be rejected (missing timestamp column)",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "should be rejected (missing value column for a simple input)",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth success when request is malformed should be rejected (missing value column for a simple input)",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "P65Q-should schedule a metadata update on every store",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth success when using a metadata updater stub P65Q-should schedule a metadata update on every store",
        "duration": 32,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Q4AS-refuses invalid/unauthorized accesses",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series bypassing authentication with auth failure Q4AS-refuses invalid/unauthorized accesses",
        "duration": 23,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DWEN-stores data of any basic type",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series storing data in different formats DWEN-stores data of any basic type",
        "duration": 106,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9OR6-stores data of complex types",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series storing data in different formats 9OR6-stores data of complex types",
        "duration": 29,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "doesn't accept data in non-series format",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series storing data in different formats doesn't accept data in non-series format",
        "duration": 21,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "A29P-stores strings",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series storing data in different formats A29P-stores strings",
        "duration": 30,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "PAN1-stores floats",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series storing data in different formats PAN1-stores floats",
        "duration": 56,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NIOH-refuses to store when timestamp is present twice (ambiguous!)",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series complex types such as ratio/generic NIOH-refuses to store when timestamp is present twice (ambiguous!)",
        "duration": 85,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "46FQ-refuses to store when other fields are present twice (ambiguous!)",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series complex types such as ratio/generic 46FQ-refuses to store when other fields are present twice (ambiguous!)",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "G556-refuses to store when not all required fields are given",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series complex types such as ratio/generic when not all required fields are given G556-refuses to store when not all required fields are given",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WR0L-returns error id \"invalid-request-structure\"",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series complex types such as ratio/generic when not all required fields are given WR0L-returns error id \"invalid-request-structure\"",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "refuses to store when field names don't match the type",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series complex types such as ratio/generic when field names don't match the type refuses to store when field names don't match the type",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JJY1-returns the error message with the id \"invalid-request-structure\"",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series complex types such as ratio/generic when field names don't match the type JJY1-returns the error message with the id \"invalid-request-structure\"",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "N4S2-allows storing any number of optional fields, on each request",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series complex types such as position/wgs84 N4S2-allows storing any number of optional fields, on each request",
        "duration": 103,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UZAJ-refuses unknown fields",
        "fullTitle": "Storing data in a HF series POST /events/EVENT_ID/series complex types such as position/wgs84 UZAJ-refuses unknown fields",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3JQS-should allow write access to series",
        "fullTitle": "Metadata Loader 3JQS-should allow write access to series",
        "duration": 19,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QAW9-returns loaded metadata for N minutes",
        "fullTitle": "Metadata Cache QAW9-returns loaded metadata for N minutes",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5IEY-can be constructed",
        "fullTitle": "Server 5IEY-can be constructed",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "IZ94-starts a http server on configured port",
        "fullTitle": "Server .start IZ94-starts a http server on configured port",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "M4DI-should have been loaded for test execution",
        "fullTitle": "Settings M4DI-should have been loaded for test execution",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "GAJJ-should reject queries if the authorization header is missing",
        "fullTitle": "Controller storeSeriesData GAJJ-should reject queries if the authorization header is missing",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "U46U-should reject queries if the eventId is missing",
        "fullTitle": "Controller storeSeriesData U46U-should reject queries if the eventId is missing",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      }
    ],
    "componentName": "hfs-server"
  },
  {
    "stats": {
      "suites": 22,
      "tests": 26,
      "passes": 26,
      "pending": 0,
      "failures": 0,
      "start": "2019-05-06T12:47:28.772Z",
      "end": "2019-05-06T12:47:29.820Z",
      "duration": 1048
    },
    "tests": [
      {
        "title": "V8Q1-allows scheduling an update",
        "fullTitle": "Metadata Updater V8Q1-allows scheduling an update",
        "duration": 50,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "I644-starts a timer and runs #act every n ms",
        "fullTitle": "Metadata Updater/Controller #runEach(ms) I644-starts a timer and runs #act every n ms",
        "duration": 26,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JYOF-constructs an Flush operation for the update and returns it",
        "fullTitle": "Metadata Updater/Controller #flushOp(update) JYOF-constructs an Flush operation for the update and returns it",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "412W-pulls elapsed updates and flushes them to MongoDB",
        "fullTitle": "Metadata Updater/Controller #act 412W-pulls elapsed updates and flushes them to MongoDB",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SCQL-forwards calls",
        "fullTitle": "ErrorLogger SCQL-forwards calls",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UNBA-catches and logs all exceptions, rethrowing afterwards",
        "fullTitle": "ErrorLogger UNBA-catches and logs all exceptions, rethrowing afterwards",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DQRB-also works for async methods, waiting for the eventual result",
        "fullTitle": "ErrorLogger DQRB-also works for async methods, waiting for the eventual result",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UK53-writes event metadata to disk",
        "fullTitle": "Flush event with no existing metadata UK53-writes event metadata to disk",
        "duration": 23,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "doesn't destroy old earliest and latest",
        "fullTitle": "Flush event with existing metadata doesn't destroy old earliest and latest",
        "duration": 16,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WPUG-leaves base data intact",
        "fullTitle": "Flush event with existing metadata WPUG-leaves base data intact",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SRLQ-returns the user id",
        "fullTitle": "UserRepository #resolve(name) SRLQ-returns the user id",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HTIY-caches the user information for a while",
        "fullTitle": "UserRepository #resolve(name) HTIY-caches the user information for a while",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NOJH-stores updates",
        "fullTitle": "PendingUpdatesMap #merge and #get NOJH-stores updates",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UP4M-merges updates with preexisting updates via #merge",
        "fullTitle": "PendingUpdatesMap #merge and #get UP4M-merges updates with preexisting updates via #merge",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WTAU-returns all updates that should be flushed",
        "fullTitle": "PendingUpdatesMap #elapsed WTAU-returns all updates that should be flushed",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BB9K-uses #flushAt to determine deadlines",
        "fullTitle": "PendingUpdatesMap #elapsed BB9K-uses #flushAt to determine deadlines",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "PJ3Q-constructively merges two updates",
        "fullTitle": "PendingUpdate #merge PJ3Q-constructively merges two updates",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "1CV3-fails when key is not equal",
        "fullTitle": "PendingUpdate #merge 1CV3-fails when key is not equal",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "85R7-returns `cooldown` when deadline is far away",
        "fullTitle": "PendingUpdate #flushAt() 85R7-returns `cooldown` when deadline is far away",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5IG3-returns `deadline` when deadline is < `cooldown`",
        "fullTitle": "PendingUpdate #flushAt() 5IG3-returns `deadline` when deadline is < `cooldown`",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3E2R-returns a settings object for the log subsystem",
        "fullTitle": "Settings #getLogSettingsObject 3E2R-returns a settings object for the log subsystem",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "14CF-loads settings from an extended JSON file",
        "fullTitle": "Settings #loadFromFile(json_file_path) 14CF-loads settings from an extended JSON file",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RVF9-loads settings from an extended HJSON file",
        "fullTitle": "Settings #loadFromFile(json_file_path) RVF9-loads settings from an extended HJSON file",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MOFW-loads settings from an extended YAML file",
        "fullTitle": "Settings #loadFromFile(json_file_path) MOFW-loads settings from an extended YAML file",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0KTM-pops an item",
        "fullTitle": "Heap #pop 0KTM-pops an item",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "L8AF-returns null if the heap is empty",
        "fullTitle": "Heap #pop L8AF-returns null if the heap is empty",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      }
    ],
    "pending": [],
    "failures": [],
    "passes": [
      {
        "title": "V8Q1-allows scheduling an update",
        "fullTitle": "Metadata Updater V8Q1-allows scheduling an update",
        "duration": 50,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "I644-starts a timer and runs #act every n ms",
        "fullTitle": "Metadata Updater/Controller #runEach(ms) I644-starts a timer and runs #act every n ms",
        "duration": 26,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JYOF-constructs an Flush operation for the update and returns it",
        "fullTitle": "Metadata Updater/Controller #flushOp(update) JYOF-constructs an Flush operation for the update and returns it",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "412W-pulls elapsed updates and flushes them to MongoDB",
        "fullTitle": "Metadata Updater/Controller #act 412W-pulls elapsed updates and flushes them to MongoDB",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SCQL-forwards calls",
        "fullTitle": "ErrorLogger SCQL-forwards calls",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UNBA-catches and logs all exceptions, rethrowing afterwards",
        "fullTitle": "ErrorLogger UNBA-catches and logs all exceptions, rethrowing afterwards",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DQRB-also works for async methods, waiting for the eventual result",
        "fullTitle": "ErrorLogger DQRB-also works for async methods, waiting for the eventual result",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UK53-writes event metadata to disk",
        "fullTitle": "Flush event with no existing metadata UK53-writes event metadata to disk",
        "duration": 23,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "doesn't destroy old earliest and latest",
        "fullTitle": "Flush event with existing metadata doesn't destroy old earliest and latest",
        "duration": 16,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WPUG-leaves base data intact",
        "fullTitle": "Flush event with existing metadata WPUG-leaves base data intact",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "SRLQ-returns the user id",
        "fullTitle": "UserRepository #resolve(name) SRLQ-returns the user id",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HTIY-caches the user information for a while",
        "fullTitle": "UserRepository #resolve(name) HTIY-caches the user information for a while",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NOJH-stores updates",
        "fullTitle": "PendingUpdatesMap #merge and #get NOJH-stores updates",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "UP4M-merges updates with preexisting updates via #merge",
        "fullTitle": "PendingUpdatesMap #merge and #get UP4M-merges updates with preexisting updates via #merge",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "WTAU-returns all updates that should be flushed",
        "fullTitle": "PendingUpdatesMap #elapsed WTAU-returns all updates that should be flushed",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BB9K-uses #flushAt to determine deadlines",
        "fullTitle": "PendingUpdatesMap #elapsed BB9K-uses #flushAt to determine deadlines",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "PJ3Q-constructively merges two updates",
        "fullTitle": "PendingUpdate #merge PJ3Q-constructively merges two updates",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "1CV3-fails when key is not equal",
        "fullTitle": "PendingUpdate #merge 1CV3-fails when key is not equal",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "85R7-returns `cooldown` when deadline is far away",
        "fullTitle": "PendingUpdate #flushAt() 85R7-returns `cooldown` when deadline is far away",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "5IG3-returns `deadline` when deadline is < `cooldown`",
        "fullTitle": "PendingUpdate #flushAt() 5IG3-returns `deadline` when deadline is < `cooldown`",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "3E2R-returns a settings object for the log subsystem",
        "fullTitle": "Settings #getLogSettingsObject 3E2R-returns a settings object for the log subsystem",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "14CF-loads settings from an extended JSON file",
        "fullTitle": "Settings #loadFromFile(json_file_path) 14CF-loads settings from an extended JSON file",
        "duration": 5,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "RVF9-loads settings from an extended HJSON file",
        "fullTitle": "Settings #loadFromFile(json_file_path) RVF9-loads settings from an extended HJSON file",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MOFW-loads settings from an extended YAML file",
        "fullTitle": "Settings #loadFromFile(json_file_path) MOFW-loads settings from an extended YAML file",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "0KTM-pops an item",
        "fullTitle": "Heap #pop 0KTM-pops an item",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "L8AF-returns null if the heap is empty",
        "fullTitle": "Heap #pop L8AF-returns null if the heap is empty",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      }
    ],
    "componentName": "metadata"
  },
  {
    "stats": {
      "suites": 6,
      "tests": 7,
      "passes": 7,
      "pending": 0,
      "failures": 0,
      "start": "2019-05-06T12:47:30.758Z",
      "end": "2019-05-06T12:47:30.868Z",
      "duration": 110
    },
    "tests": [
      {
        "title": "DFVN-returns a version-string",
        "fullTitle": "ProjectVersion#version when no \".api-version\" file is available DFVN-returns a version-string",
        "duration": 22,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "55N2-returns a git describe string",
        "fullTitle": "ProjectVersion#version when no \".api-version\" file is available 55N2-returns a git describe string",
        "duration": 33,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HG2B-reads .api-version and returns that constant",
        "fullTitle": "ProjectVersion#version when a \".api-version\" file exists in the project HG2B-reads .api-version and returns that constant",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QTCO-throws an error",
        "fullTitle": "ProjectVersion#version when neither method works QTCO-throws an error",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "63V0-should not transform illegal usernames",
        "fullTitle": "subdomainToPath middleware using a minimal application 63V0-should not transform illegal usernames",
        "duration": 27,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BHBD-should transform username into a path segment",
        "fullTitle": "subdomainToPath middleware using a minimal application BHBD-should transform username into a path segment",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "31II-should accept dashes",
        "fullTitle": "subdomainToPath middleware using a minimal application 31II-should accept dashes",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      }
    ],
    "pending": [],
    "failures": [],
    "passes": [
      {
        "title": "DFVN-returns a version-string",
        "fullTitle": "ProjectVersion#version when no \".api-version\" file is available DFVN-returns a version-string",
        "duration": 22,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "55N2-returns a git describe string",
        "fullTitle": "ProjectVersion#version when no \".api-version\" file is available 55N2-returns a git describe string",
        "duration": 33,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HG2B-reads .api-version and returns that constant",
        "fullTitle": "ProjectVersion#version when a \".api-version\" file exists in the project HG2B-reads .api-version and returns that constant",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "QTCO-throws an error",
        "fullTitle": "ProjectVersion#version when neither method works QTCO-throws an error",
        "duration": 4,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "63V0-should not transform illegal usernames",
        "fullTitle": "subdomainToPath middleware using a minimal application 63V0-should not transform illegal usernames",
        "duration": 27,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "BHBD-should transform username into a path segment",
        "fullTitle": "subdomainToPath middleware using a minimal application BHBD-should transform username into a path segment",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "31II-should accept dashes",
        "fullTitle": "subdomainToPath middleware using a minimal application 31II-should accept dashes",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      }
    ],
    "componentName": "middleware"
  },
  {
    "stats": {
      "suites": 3,
      "tests": 4,
      "passes": 4,
      "pending": 0,
      "failures": 0,
      "start": "2019-05-06T12:47:31.368Z",
      "end": "2019-05-06T12:47:31.390Z",
      "duration": 22
    },
    "tests": [
      {
        "title": "VS7L-should parse token out",
        "fullTitle": "MethodContext #parseAuth VS7L-should parse token out",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HJQE-should also parse the callerId when available",
        "fullTitle": "MethodContext #parseAuth HJQE-should also parse the callerId when available",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4MDV-checks expiry of the access",
        "fullTitle": "MethodContext #retrieveAccessFromId 4MDV-checks expiry of the access",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "1ZSA-loads the access",
        "fullTitle": "MethodContext #retrieveAccessFromId 1ZSA-loads the access",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      }
    ],
    "pending": [],
    "failures": [],
    "passes": [
      {
        "title": "VS7L-should parse token out",
        "fullTitle": "MethodContext #parseAuth VS7L-should parse token out",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HJQE-should also parse the callerId when available",
        "fullTitle": "MethodContext #parseAuth HJQE-should also parse the callerId when available",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4MDV-checks expiry of the access",
        "fullTitle": "MethodContext #retrieveAccessFromId 4MDV-checks expiry of the access",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "1ZSA-loads the access",
        "fullTitle": "MethodContext #retrieveAccessFromId 1ZSA-loads the access",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      }
    ],
    "componentName": "model"
  },
  {
    "stats": {
      "suites": 5,
      "tests": 16,
      "passes": 16,
      "pending": 0,
      "failures": 0,
      "start": "2019-05-06T12:47:32.247Z",
      "end": "2019-05-06T12:47:34.713Z",
      "duration": 2466
    },
    "tests": [
      {
        "title": "C0AJ-must return JPEG previews for \"picture/attached\" events and cache the result",
        "fullTitle": "event previews GET /<event id>/preview C0AJ-must return JPEG previews for \"picture/attached\" events and cache the result",
        "duration": 151,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MPZH-must accept \".jpg\" extension in the path (backwards-compatibility)",
        "fullTitle": "event previews GET /<event id>/preview MPZH-must accept \".jpg\" extension in the path (backwards-compatibility)",
        "duration": 50,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "F9TI-must adjust the desired size to the bigger standard size (if exists)",
        "fullTitle": "event previews GET /<event id>/preview F9TI-must adjust the desired size to the bigger standard size (if exists)",
        "duration": 73,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MUHF-must limit the desired size to the biggest standard size if too big",
        "fullTitle": "event previews GET /<event id>/preview MUHF-must limit the desired size to the biggest standard size if too big",
        "duration": 120,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "P0GG-must serve the cached file if available",
        "fullTitle": "event previews GET /<event id>/preview P0GG-must serve the cached file if available",
        "duration": 59,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "D99P-must regenerate the cached file if obsolete",
        "fullTitle": "event previews GET /<event id>/preview D99P-must regenerate the cached file if obsolete",
        "duration": 115,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Z0ND-must respond with \"no content\" if the event type is not supported",
        "fullTitle": "event previews GET /<event id>/preview Z0ND-must respond with \"no content\" if the event type is not supported",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "J8MI-must return a proper error if the event does not exist",
        "fullTitle": "event previews GET /<event id>/preview J8MI-must return a proper error if the event does not exist",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZR7N-must forbid requests missing an access token",
        "fullTitle": "event previews GET /<event id>/preview ZR7N-must forbid requests missing an access token",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7FCG-must forbid requests with unauthorized accesses",
        "fullTitle": "event previews GET /<event id>/preview 7FCG-must forbid requests with unauthorized accesses",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8U2E-must return a proper error if event data is corrupted (no attachment object)",
        "fullTitle": "event previews GET /<event id>/preview 8U2E-must return a proper error if event data is corrupted (no attachment object)",
        "duration": 19,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "CKD5-must return a proper error if event data is corrupted (no attached file)",
        "fullTitle": "event previews GET /<event id>/preview CKD5-must return a proper error if event data is corrupted (no attached file)",
        "duration": 17,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "GWYW-must work with animated GIFs too",
        "fullTitle": "event previews GET /<event id>/preview GWYW-must work with animated GIFs too",
        "duration": 52,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "W2OY-must clean up cached previews not accessed for one week by default",
        "fullTitle": "event previews POST /clean-up-cache W2OY-must clean up cached previews not accessed for one week by default",
        "duration": 418,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9O0N-must ignore files with no readable extended attribute",
        "fullTitle": "event previews POST /clean-up-cache 9O0N-must ignore files with no readable extended attribute",
        "duration": 343,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DPQU-should return OK",
        "fullTitle": "(index) OPTIONS / DPQU-should return OK",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      }
    ],
    "pending": [],
    "failures": [],
    "passes": [
      {
        "title": "C0AJ-must return JPEG previews for \"picture/attached\" events and cache the result",
        "fullTitle": "event previews GET /<event id>/preview C0AJ-must return JPEG previews for \"picture/attached\" events and cache the result",
        "duration": 151,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MPZH-must accept \".jpg\" extension in the path (backwards-compatibility)",
        "fullTitle": "event previews GET /<event id>/preview MPZH-must accept \".jpg\" extension in the path (backwards-compatibility)",
        "duration": 50,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "F9TI-must adjust the desired size to the bigger standard size (if exists)",
        "fullTitle": "event previews GET /<event id>/preview F9TI-must adjust the desired size to the bigger standard size (if exists)",
        "duration": 73,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "MUHF-must limit the desired size to the biggest standard size if too big",
        "fullTitle": "event previews GET /<event id>/preview MUHF-must limit the desired size to the biggest standard size if too big",
        "duration": 120,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "P0GG-must serve the cached file if available",
        "fullTitle": "event previews GET /<event id>/preview P0GG-must serve the cached file if available",
        "duration": 59,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "D99P-must regenerate the cached file if obsolete",
        "fullTitle": "event previews GET /<event id>/preview D99P-must regenerate the cached file if obsolete",
        "duration": 115,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "Z0ND-must respond with \"no content\" if the event type is not supported",
        "fullTitle": "event previews GET /<event id>/preview Z0ND-must respond with \"no content\" if the event type is not supported",
        "duration": 10,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "J8MI-must return a proper error if the event does not exist",
        "fullTitle": "event previews GET /<event id>/preview J8MI-must return a proper error if the event does not exist",
        "duration": 8,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "ZR7N-must forbid requests missing an access token",
        "fullTitle": "event previews GET /<event id>/preview ZR7N-must forbid requests missing an access token",
        "duration": 7,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "7FCG-must forbid requests with unauthorized accesses",
        "fullTitle": "event previews GET /<event id>/preview 7FCG-must forbid requests with unauthorized accesses",
        "duration": 11,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "8U2E-must return a proper error if event data is corrupted (no attachment object)",
        "fullTitle": "event previews GET /<event id>/preview 8U2E-must return a proper error if event data is corrupted (no attachment object)",
        "duration": 19,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "CKD5-must return a proper error if event data is corrupted (no attached file)",
        "fullTitle": "event previews GET /<event id>/preview CKD5-must return a proper error if event data is corrupted (no attached file)",
        "duration": 17,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "GWYW-must work with animated GIFs too",
        "fullTitle": "event previews GET /<event id>/preview GWYW-must work with animated GIFs too",
        "duration": 52,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "W2OY-must clean up cached previews not accessed for one week by default",
        "fullTitle": "event previews POST /clean-up-cache W2OY-must clean up cached previews not accessed for one week by default",
        "duration": 418,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9O0N-must ignore files with no readable extended attribute",
        "fullTitle": "event previews POST /clean-up-cache 9O0N-must ignore files with no readable extended attribute",
        "duration": 343,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DPQU-should return OK",
        "fullTitle": "(index) OPTIONS / DPQU-should return OK",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      }
    ],
    "componentName": "previews-server"
  },
  {
    "stats": {
      "suites": 2,
      "tests": 3,
      "passes": 2,
      "pending": 0,
      "failures": 1,
      "start": "2019-05-06T12:47:35.240Z",
      "end": "2019-05-06T12:47:35.322Z",
      "duration": 82
    },
    "tests": [
      {
        "title": "3S8T-making a call",
        "fullTitle": "Base API 3S8T-making a call",
        "duration": 29,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "D90R-failing a call (server-side)",
        "fullTitle": "Base API D90R-failing a call (server-side)",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "NWOH-compiles a .proto 3 syntax file into a set of flow-type interfaces",
        "fullTitle": "Type Compilation NWOH-compiles a .proto 3 syntax file into a set of flow-type interfaces",
        "duration": 4,
        "currentRetry": 0,
        "err": {
          "stack": "Error: File /var/folders/1d/cn3kh2y55dg281_g4xf2_7640000gn/T/tmp-92051SzQmdM4s8Iem/base.js.flow doesn't contain the string anywhere.\n    at assertContains (test/acceptance/compile.test.js:92:9)\n    at <anonymous>",
          "message": "File /var/folders/1d/cn3kh2y55dg281_g4xf2_7640000gn/T/tmp-92051SzQmdM4s8Iem/base.js.flow doesn't contain the string anywhere."
        }
      }
    ],
    "pending": [],
    "failures": [
      {
        "title": "NWOH-compiles a .proto 3 syntax file into a set of flow-type interfaces",
        "fullTitle": "Type Compilation NWOH-compiles a .proto 3 syntax file into a set of flow-type interfaces",
        "duration": 4,
        "currentRetry": 0,
        "err": {
          "stack": "Error: File /var/folders/1d/cn3kh2y55dg281_g4xf2_7640000gn/T/tmp-92051SzQmdM4s8Iem/base.js.flow doesn't contain the string anywhere.\n    at assertContains (test/acceptance/compile.test.js:92:9)\n    at <anonymous>",
          "message": "File /var/folders/1d/cn3kh2y55dg281_g4xf2_7640000gn/T/tmp-92051SzQmdM4s8Iem/base.js.flow doesn't contain the string anywhere."
        }
      }
    ],
    "passes": [
      {
        "title": "3S8T-making a call",
        "fullTitle": "Base API 3S8T-making a call",
        "duration": 29,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "D90R-failing a call (server-side)",
        "fullTitle": "Base API D90R-failing a call (server-side)",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      }
    ],
    "componentName": "tprpc"
  },
  {
    "stats": {
      "suites": 7,
      "tests": 10,
      "passes": 10,
      "pending": 0,
      "failures": 0,
      "start": "2019-05-06T12:47:35.597Z",
      "end": "2019-05-06T12:47:35.611Z",
      "duration": 14
    },
    "tests": [
      {
        "title": "TVE9-must build a correct tree for a given consistent array",
        "fullTitle": "tree utils buildTree() TVE9-must build a correct tree for a given consistent array",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "GP0U-must throw an error if objects do not contain the necessary properties",
        "fullTitle": "tree utils buildTree() GP0U-must throw an error if objects do not contain the necessary properties",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JBM2-must throw an error if the object in argument is not an array",
        "fullTitle": "tree utils buildTree() JBM2-must throw an error if the object in argument is not an array",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DJ72-must build a correct array for a given tree",
        "fullTitle": "tree utils flattenTree() DJ72-must build a correct array for a given tree",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "R7FH-must throw an error if the object in argument is not an array",
        "fullTitle": "tree utils flattenTree() R7FH-must throw an error if the object in argument is not an array",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9BO4-must return the first item matching the given iterator function",
        "fullTitle": "tree utils findInTree() 9BO4-must return the first item matching the given iterator function",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HDYE-must return null if no item matches the given iterator function",
        "fullTitle": "tree utils findInTree() HDYE-must return null if no item matches the given iterator function",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2MOZ-must return only items matching the given iterator function",
        "fullTitle": "tree utils filterTree() 2MOZ-must return only items matching the given iterator function",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "LBVZ-must return an array with values matching the iterator function for each item in the tree",
        "fullTitle": "tree utils collect() LBVZ-must return an array with values matching the iterator function for each item in the tree",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4CVJ-must return an array with the ids passed in argument plus those of all their descendants",
        "fullTitle": "tree utils expandIds() 4CVJ-must return an array with the ids passed in argument plus those of all their descendants",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      }
    ],
    "pending": [],
    "failures": [],
    "passes": [
      {
        "title": "TVE9-must build a correct tree for a given consistent array",
        "fullTitle": "tree utils buildTree() TVE9-must build a correct tree for a given consistent array",
        "duration": 2,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "GP0U-must throw an error if objects do not contain the necessary properties",
        "fullTitle": "tree utils buildTree() GP0U-must throw an error if objects do not contain the necessary properties",
        "duration": 3,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "JBM2-must throw an error if the object in argument is not an array",
        "fullTitle": "tree utils buildTree() JBM2-must throw an error if the object in argument is not an array",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "DJ72-must build a correct array for a given tree",
        "fullTitle": "tree utils flattenTree() DJ72-must build a correct array for a given tree",
        "duration": 1,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "R7FH-must throw an error if the object in argument is not an array",
        "fullTitle": "tree utils flattenTree() R7FH-must throw an error if the object in argument is not an array",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "9BO4-must return the first item matching the given iterator function",
        "fullTitle": "tree utils findInTree() 9BO4-must return the first item matching the given iterator function",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "HDYE-must return null if no item matches the given iterator function",
        "fullTitle": "tree utils findInTree() HDYE-must return null if no item matches the given iterator function",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "2MOZ-must return only items matching the given iterator function",
        "fullTitle": "tree utils filterTree() 2MOZ-must return only items matching the given iterator function",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "LBVZ-must return an array with values matching the iterator function for each item in the tree",
        "fullTitle": "tree utils collect() LBVZ-must return an array with values matching the iterator function for each item in the tree",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      },
      {
        "title": "4CVJ-must return an array with the ids passed in argument plus those of all their descendants",
        "fullTitle": "tree utils expandIds() 4CVJ-must return an array with the ids passed in argument plus those of all their descendants",
        "duration": 0,
        "currentRetry": 0,
        "err": {}
      }
    ],
    "componentName": "utils"
  }
]